/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Information about the APR on the account.
 * @export
 * @interface APR
 */
export interface APR {
    [key: string]: any | any;
    /**
     * Annual Percentage Rate applied.
     * 
     * @type {number}
     * @memberof APR
     */
    apr_percentage: number;
    /**
     * The type of balance to which the APR applies.
     * @type {string}
     * @memberof APR
     */
    apr_type: APRAprTypeEnum;
    /**
     * Amount of money that is subjected to the APR if a balance was carried beyond payment due date. How it is calculated can vary by card issuer. It is often calculated as an average daily balance.
     * @type {number}
     * @memberof APR
     */
    balance_subject_to_apr: number | null;
    /**
     * Amount of money charged due to interest from last statement.
     * @type {number}
     * @memberof APR
     */
    interest_charge_amount: number | null;
}


/**
 * @export
 */
export const APRAprTypeEnum = {
    BalanceTransferApr: 'balance_transfer_apr',
    CashApr: 'cash_apr',
    PurchaseApr: 'purchase_apr',
    Special: 'special'
} as const;
export type APRAprTypeEnum = typeof APRAprTypeEnum[keyof typeof APRAprTypeEnum];


/**
 * Check if a given object implements the APR interface.
 */
export function instanceOfAPR(value: object): boolean {
    if (!('apr_percentage' in value)) return false;
    if (!('apr_type' in value)) return false;
    if (!('balance_subject_to_apr' in value)) return false;
    if (!('interest_charge_amount' in value)) return false;
    return true;
}

export function APRFromJSON(json: any): APR {
    return APRFromJSONTyped(json, false);
}

export function APRFromJSONTyped(json: any, ignoreDiscriminator: boolean): APR {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'apr_percentage': json['apr_percentage'],
        'apr_type': json['apr_type'],
        'balance_subject_to_apr': json['balance_subject_to_apr'],
        'interest_charge_amount': json['interest_charge_amount'],
    };
}

export function APRToJSON(value?: APR | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'apr_percentage': value['apr_percentage'],
        'apr_type': value['apr_type'],
        'balance_subject_to_apr': value['balance_subject_to_apr'],
        'interest_charge_amount': value['interest_charge_amount'],
    };
}

