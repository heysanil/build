/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * See the [Account type schema](https://plaid.com/docs/api/accounts/#account-type-schema) for a full listing of account types and corresponding subtypes.
 * @export
 */
export const AccountSubtype = {
    _401a: '401a',
    _401k: '401k',
    _403B: '403B',
    _457b: '457b',
    _529: '529',
    Brokerage: 'brokerage',
    CashIsa: 'cash isa',
    CryptoExchange: 'crypto exchange',
    EducationSavingsAccount: 'education savings account',
    Ebt: 'ebt',
    FixedAnnuity: 'fixed annuity',
    Gic: 'gic',
    HealthReimbursementArrangement: 'health reimbursement arrangement',
    Hsa: 'hsa',
    Isa: 'isa',
    Ira: 'ira',
    Lif: 'lif',
    LifeInsurance: 'life insurance',
    Lira: 'lira',
    Lrif: 'lrif',
    Lrsp: 'lrsp',
    NonCustodialWallet: 'non-custodial wallet',
    NonTaxableBrokerageAccount: 'non-taxable brokerage account',
    Other: 'other',
    OtherInsurance: 'other insurance',
    OtherAnnuity: 'other annuity',
    Prif: 'prif',
    Rdsp: 'rdsp',
    Resp: 'resp',
    Rlif: 'rlif',
    Rrif: 'rrif',
    Pension: 'pension',
    ProfitSharingPlan: 'profit sharing plan',
    Retirement: 'retirement',
    Roth: 'roth',
    Roth401k: 'roth 401k',
    Rrsp: 'rrsp',
    SepIra: 'sep ira',
    SimpleIra: 'simple ira',
    Sipp: 'sipp',
    StockPlan: 'stock plan',
    ThriftSavingsPlan: 'thrift savings plan',
    Tfsa: 'tfsa',
    Trust: 'trust',
    Ugma: 'ugma',
    Utma: 'utma',
    VariableAnnuity: 'variable annuity',
    CreditCard: 'credit card',
    Paypal: 'paypal',
    Cd: 'cd',
    Checking: 'checking',
    Savings: 'savings',
    MoneyMarket: 'money market',
    Prepaid: 'prepaid',
    Auto: 'auto',
    Business: 'business',
    Commercial: 'commercial',
    Construction: 'construction',
    Consumer: 'consumer',
    HomeEquity: 'home equity',
    Loan: 'loan',
    Mortgage: 'mortgage',
    Overdraft: 'overdraft',
    LineOfCredit: 'line of credit',
    Student: 'student',
    CashManagement: 'cash management',
    Keogh: 'keogh',
    MutualFund: 'mutual fund',
    Recurring: 'recurring',
    Rewards: 'rewards',
    SafeDeposit: 'safe deposit',
    Sarsep: 'sarsep',
    Payroll: 'payroll',
    Null: 'null'
} as const;
export type AccountSubtype = typeof AccountSubtype[keyof typeof AccountSubtype];


export function AccountSubtypeFromJSON(json: any): AccountSubtype {
    return AccountSubtypeFromJSONTyped(json, false);
}

export function AccountSubtypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountSubtype {
    return json as AccountSubtype;
}

export function AccountSubtypeToJSON(value?: AccountSubtype | null): any {
    return value as any;
}

