/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BalancePlusAttributes } from './BalancePlusAttributes';
import {
    BalancePlusAttributesFromJSON,
    BalancePlusAttributesFromJSONTyped,
    BalancePlusAttributesToJSON,
} from './BalancePlusAttributes';
import type { RiskReason } from './RiskReason';
import {
    RiskReasonFromJSON,
    RiskReasonFromJSONTyped,
    RiskReasonToJSON,
} from './RiskReason';

/**
 * This object provides detailed risk assessment for the requested transaction
 * @export
 * @interface AccountsBalanceGetResponsePaymentRiskAssessment
 */
export interface AccountsBalanceGetResponsePaymentRiskAssessment {
    [key: string]: any | any;
    /**
     * A five-tier risk assessment for the transaction, based on the probability of ACH returns,
     * measured by the incident rate.
     * @type {string}
     * @memberof AccountsBalanceGetResponsePaymentRiskAssessment
     */
    risk_level?: string;
    /**
     * 
     * @type {BalancePlusAttributes}
     * @memberof AccountsBalanceGetResponsePaymentRiskAssessment
     */
    attributes?: BalancePlusAttributes;
    /**
     * A risk score ranging from 1-99, reflecting the likelihood of ACH debit return.
     * A higher score indicates a greater risk of return, often due to overdrawn accounts or account
     * ineligibility to receive ACH transactions. Typical return codes include "R01", "R02", "R03",
     * "R04", "R06", "R08", "R09", "R13", "R16", "R17", "R20", "R23", etc., with a turnaround of 2 banking days.
     * @type {number}
     * @memberof AccountsBalanceGetResponsePaymentRiskAssessment
     */
    score?: number;
    /**
     * Timestamp of the last successful balance update, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
     * @type {Date}
     * @memberof AccountsBalanceGetResponsePaymentRiskAssessment
     */
    balance_last_updated?: Date;
    /**
     * An array of objects, each representing a specific reason contributing to the risk assessment of an
     * ACH transaction. This field is particularly useful for understanding risk factors affecting the risk
     * level assigned to a transaction classified as “high”, “medium-high”, and “medium” risk.
     * @type {Array<RiskReason>}
     * @memberof AccountsBalanceGetResponsePaymentRiskAssessment
     */
    risk_reasons?: Array<RiskReason>;
    /**
     * This boolean field denotes if the requested ACH debit amount exceeds the calculated threshold based on either the available or current balance
     * of the bank account. Specifically, it checks if the amount is greater than the account balance multiplied by "balance_threshold_percentage"/100.
     * In cases where available_balance is not accessible, current_balance is used. This field is particularly useful for clients handling indirect items
     * who lack direct access to raw balance data.
     * @type {boolean}
     * @memberof AccountsBalanceGetResponsePaymentRiskAssessment
     */
    exceeds_balance_threshold?: boolean;
}

/**
 * Check if a given object implements the AccountsBalanceGetResponsePaymentRiskAssessment interface.
 */
export function instanceOfAccountsBalanceGetResponsePaymentRiskAssessment(value: object): boolean {
    return true;
}

export function AccountsBalanceGetResponsePaymentRiskAssessmentFromJSON(json: any): AccountsBalanceGetResponsePaymentRiskAssessment {
    return AccountsBalanceGetResponsePaymentRiskAssessmentFromJSONTyped(json, false);
}

export function AccountsBalanceGetResponsePaymentRiskAssessmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountsBalanceGetResponsePaymentRiskAssessment {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'risk_level': json['risk_level'] == null ? undefined : json['risk_level'],
        'attributes': json['attributes'] == null ? undefined : BalancePlusAttributesFromJSON(json['attributes']),
        'score': json['score'] == null ? undefined : json['score'],
        'balance_last_updated': json['balance_last_updated'] == null ? undefined : (new Date(json['balance_last_updated'])),
        'risk_reasons': json['risk_reasons'] == null ? undefined : ((json['risk_reasons'] as Array<any>).map(RiskReasonFromJSON)),
        'exceeds_balance_threshold': json['exceeds_balance_threshold'] == null ? undefined : json['exceeds_balance_threshold'],
    };
}

export function AccountsBalanceGetResponsePaymentRiskAssessmentToJSON(value?: AccountsBalanceGetResponsePaymentRiskAssessment | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'risk_level': value['risk_level'],
        'attributes': BalancePlusAttributesToJSON(value['attributes']),
        'score': value['score'],
        'balance_last_updated': value['balance_last_updated'] == null ? undefined : ((value['balance_last_updated']).toISOString()),
        'risk_reasons': value['risk_reasons'] == null ? undefined : ((value['risk_reasons'] as Array<any>).map(RiskReasonToJSON)),
        'exceeds_balance_threshold': value['exceeds_balance_threshold'],
    };
}

