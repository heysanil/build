/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A securities holding at an institution.
 * @export
 * @interface AssetReportInvestmentHolding
 */
export interface AssetReportInvestmentHolding {
    [key: string]: any | any;
    /**
     * The Plaid `account_id` associated with the holding.
     * @type {string}
     * @memberof AssetReportInvestmentHolding
     */
    account_id: string;
    /**
     * The Plaid `security_id` associated with the holding. Security data is not specific to a user's account; any user who held the same security at the same financial institution at the same time would have identical security data. The `security_id` for the same security will typically be the same across different institutions, but this is not guaranteed. The `security_id` does not typically change, but may change if inherent details of the security change due to a corporate action, for example, in the event of a ticker symbol change or CUSIP change.
     * @type {string}
     * @memberof AssetReportInvestmentHolding
     */
    security_id: string;
    /**
     * The holding's trading symbol for publicly traded holdings, and otherwise a short identifier if available.
     * @type {string}
     * @memberof AssetReportInvestmentHolding
     */
    ticker_symbol: string | null;
    /**
     * The last price given by the institution for this security.
     * @type {number}
     * @memberof AssetReportInvestmentHolding
     */
    institution_price: number;
    /**
     * The date at which `institution_price` was current.
     * @type {Date}
     * @memberof AssetReportInvestmentHolding
     */
    institution_price_as_of?: Date;
    /**
     * The value of the holding, as reported by the institution.
     * @type {number}
     * @memberof AssetReportInvestmentHolding
     */
    institution_value: number;
    /**
     * The original total value of the holding. This field is calculated by Plaid as the sum of the purchase price of all of the shares in the holding.
     * @type {number}
     * @memberof AssetReportInvestmentHolding
     */
    cost_basis: number | null;
    /**
     * The total quantity of the asset held, as reported by the financial institution. If the security is an option, `quantity` will reflect the total number of options (typically the number of contracts multiplied by 100), not the number of contracts.
     * @type {number}
     * @memberof AssetReportInvestmentHolding
     */
    quantity: number;
    /**
     * The ISO-4217 currency code of the holding. Always `null` if `unofficial_currency_code` is non-`null`.
     * @type {string}
     * @memberof AssetReportInvestmentHolding
     */
    iso_currency_code: string | null;
    /**
     * The unofficial currency code associated with the holding. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
     * 
     * See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
     * 
     * @type {string}
     * @memberof AssetReportInvestmentHolding
     */
    unofficial_currency_code: string | null;
}

/**
 * Check if a given object implements the AssetReportInvestmentHolding interface.
 */
export function instanceOfAssetReportInvestmentHolding(value: object): boolean {
    if (!('account_id' in value)) return false;
    if (!('security_id' in value)) return false;
    if (!('ticker_symbol' in value)) return false;
    if (!('institution_price' in value)) return false;
    if (!('institution_value' in value)) return false;
    if (!('cost_basis' in value)) return false;
    if (!('quantity' in value)) return false;
    if (!('iso_currency_code' in value)) return false;
    if (!('unofficial_currency_code' in value)) return false;
    return true;
}

export function AssetReportInvestmentHoldingFromJSON(json: any): AssetReportInvestmentHolding {
    return AssetReportInvestmentHoldingFromJSONTyped(json, false);
}

export function AssetReportInvestmentHoldingFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetReportInvestmentHolding {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'account_id': json['account_id'],
        'security_id': json['security_id'],
        'ticker_symbol': json['ticker_symbol'],
        'institution_price': json['institution_price'],
        'institution_price_as_of': json['institution_price_as_of'] == null ? undefined : (new Date(json['institution_price_as_of'])),
        'institution_value': json['institution_value'],
        'cost_basis': json['cost_basis'],
        'quantity': json['quantity'],
        'iso_currency_code': json['iso_currency_code'],
        'unofficial_currency_code': json['unofficial_currency_code'],
    };
}

export function AssetReportInvestmentHoldingToJSON(value?: AssetReportInvestmentHolding | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'account_id': value['account_id'],
        'security_id': value['security_id'],
        'ticker_symbol': value['ticker_symbol'],
        'institution_price': value['institution_price'],
        'institution_price_as_of': value['institution_price_as_of'] == null ? undefined : ((value['institution_price_as_of'] as any).toISOString().substring(0,10)),
        'institution_value': value['institution_value'],
        'cost_basis': value['cost_basis'],
        'quantity': value['quantity'],
        'iso_currency_code': value['iso_currency_code'],
        'unofficial_currency_code': value['unofficial_currency_code'],
    };
}

