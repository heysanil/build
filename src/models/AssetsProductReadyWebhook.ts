/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WebhookEnvironmentValues } from './WebhookEnvironmentValues';
import {
    WebhookEnvironmentValuesFromJSON,
    WebhookEnvironmentValuesFromJSONTyped,
    WebhookEnvironmentValuesToJSON,
} from './WebhookEnvironmentValues';

/**
 * Fired when the Asset Report has been generated and `/asset_report/get` is ready to be called.  If you attempt to retrieve an Asset Report before this webhook has fired, youâ€™ll receive a response with the HTTP status code 400 and a Plaid error code of `PRODUCT_NOT_READY`.
 * @export
 * @interface AssetsProductReadyWebhook
 */
export interface AssetsProductReadyWebhook {
    [key: string]: any | any;
    /**
     * `ASSETS`
     * @type {string}
     * @memberof AssetsProductReadyWebhook
     */
    webhook_type: string;
    /**
     * `PRODUCT_READY`
     * @type {string}
     * @memberof AssetsProductReadyWebhook
     */
    webhook_code: string;
    /**
     * The `asset_report_id` corresponding to the Asset Report the webhook has fired for.
     * @type {string}
     * @memberof AssetsProductReadyWebhook
     */
    asset_report_id: string;
    /**
     * The `user_id` corresponding to the User ID the webhook has fired for.
     * @type {string}
     * @memberof AssetsProductReadyWebhook
     */
    user_id?: string;
    /**
     * The report type, indicating whether the Asset Report is a `full` or `fast` report.
     * @type {string}
     * @memberof AssetsProductReadyWebhook
     */
    report_type?: string;
    /**
     * 
     * @type {WebhookEnvironmentValues}
     * @memberof AssetsProductReadyWebhook
     */
    environment: WebhookEnvironmentValues;
}

/**
 * Check if a given object implements the AssetsProductReadyWebhook interface.
 */
export function instanceOfAssetsProductReadyWebhook(value: object): boolean {
    if (!('webhook_type' in value)) return false;
    if (!('webhook_code' in value)) return false;
    if (!('asset_report_id' in value)) return false;
    if (!('environment' in value)) return false;
    return true;
}

export function AssetsProductReadyWebhookFromJSON(json: any): AssetsProductReadyWebhook {
    return AssetsProductReadyWebhookFromJSONTyped(json, false);
}

export function AssetsProductReadyWebhookFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetsProductReadyWebhook {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'webhook_type': json['webhook_type'],
        'webhook_code': json['webhook_code'],
        'asset_report_id': json['asset_report_id'],
        'user_id': json['user_id'] == null ? undefined : json['user_id'],
        'report_type': json['report_type'] == null ? undefined : json['report_type'],
        'environment': WebhookEnvironmentValuesFromJSON(json['environment']),
    };
}

export function AssetsProductReadyWebhookToJSON(value?: AssetsProductReadyWebhook | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'webhook_type': value['webhook_type'],
        'webhook_code': value['webhook_code'],
        'asset_report_id': value['asset_report_id'],
        'user_id': value['user_id'],
        'report_type': value['report_type'],
        'environment': WebhookEnvironmentValuesToJSON(value['environment']),
    };
}

