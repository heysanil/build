/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NumbersACH } from './NumbersACH';
import {
    NumbersACHFromJSON,
    NumbersACHFromJSONTyped,
    NumbersACHToJSON,
} from './NumbersACH';
import type { NumbersBACS } from './NumbersBACS';
import {
    NumbersBACSFromJSON,
    NumbersBACSFromJSONTyped,
    NumbersBACSToJSON,
} from './NumbersBACS';
import type { NumbersEFT } from './NumbersEFT';
import {
    NumbersEFTFromJSON,
    NumbersEFTFromJSONTyped,
    NumbersEFTToJSON,
} from './NumbersEFT';
import type { NumbersInternational } from './NumbersInternational';
import {
    NumbersInternationalFromJSON,
    NumbersInternationalFromJSONTyped,
    NumbersInternationalToJSON,
} from './NumbersInternational';

/**
 * An object containing identifying numbers used for making electronic transfers to and from the `accounts`. The identifying number type (ACH, EFT, IBAN, or BACS) used will depend on the country of the account. An account may have more than one number type. If a particular identifying number type is not used by any `accounts` for which data has been requested, the array for that type will be empty.
 * @export
 * @interface AuthGetNumbers
 */
export interface AuthGetNumbers {
    [key: string]: any | any;
    /**
     * An array of ACH numbers identifying accounts.
     * @type {Array<NumbersACH>}
     * @memberof AuthGetNumbers
     */
    ach: Array<NumbersACH>;
    /**
     * An array of EFT numbers identifying accounts.
     * @type {Array<NumbersEFT>}
     * @memberof AuthGetNumbers
     */
    eft: Array<NumbersEFT>;
    /**
     * An array of IBAN numbers identifying accounts.
     * @type {Array<NumbersInternational>}
     * @memberof AuthGetNumbers
     */
    international: Array<NumbersInternational>;
    /**
     * An array of BACS numbers identifying accounts.
     * @type {Array<NumbersBACS>}
     * @memberof AuthGetNumbers
     */
    bacs: Array<NumbersBACS>;
}

/**
 * Check if a given object implements the AuthGetNumbers interface.
 */
export function instanceOfAuthGetNumbers(value: object): boolean {
    if (!('ach' in value)) return false;
    if (!('eft' in value)) return false;
    if (!('international' in value)) return false;
    if (!('bacs' in value)) return false;
    return true;
}

export function AuthGetNumbersFromJSON(json: any): AuthGetNumbers {
    return AuthGetNumbersFromJSONTyped(json, false);
}

export function AuthGetNumbersFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthGetNumbers {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'ach': ((json['ach'] as Array<any>).map(NumbersACHFromJSON)),
        'eft': ((json['eft'] as Array<any>).map(NumbersEFTFromJSON)),
        'international': ((json['international'] as Array<any>).map(NumbersInternationalFromJSON)),
        'bacs': ((json['bacs'] as Array<any>).map(NumbersBACSFromJSON)),
    };
}

export function AuthGetNumbersToJSON(value?: AuthGetNumbers | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'ach': ((value['ach'] as Array<any>).map(NumbersACHToJSON)),
        'eft': ((value['eft'] as Array<any>).map(NumbersEFTToJSON)),
        'international': ((value['international'] as Array<any>).map(NumbersInternationalToJSON)),
        'bacs': ((value['bacs'] as Array<any>).map(NumbersBACSToJSON)),
    };
}

