/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Defines the request schema for `/bank_transfer/migrate_account`
 * @export
 * @interface BankTransferMigrateAccountRequest
 */
export interface BankTransferMigrateAccountRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * @type {string}
     * @memberof BankTransferMigrateAccountRequest
     */
    client_id?: string;
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * @type {string}
     * @memberof BankTransferMigrateAccountRequest
     */
    secret?: string;
    /**
     * The user's account number.
     * @type {string}
     * @memberof BankTransferMigrateAccountRequest
     */
    account_number: string;
    /**
     * The user's routing number.
     * @type {string}
     * @memberof BankTransferMigrateAccountRequest
     */
    routing_number: string;
    /**
     * The user's wire transfer routing number. This is the ABA number; for some institutions, this may differ from the ACH number used in `routing_number`.
     * @type {string}
     * @memberof BankTransferMigrateAccountRequest
     */
    wire_routing_number?: string;
    /**
     * The type of the bank account (`checking` or `savings`).
     * @type {string}
     * @memberof BankTransferMigrateAccountRequest
     */
    account_type: string;
}

/**
 * Check if a given object implements the BankTransferMigrateAccountRequest interface.
 */
export function instanceOfBankTransferMigrateAccountRequest(value: object): boolean {
    if (!('account_number' in value)) return false;
    if (!('routing_number' in value)) return false;
    if (!('account_type' in value)) return false;
    return true;
}

export function BankTransferMigrateAccountRequestFromJSON(json: any): BankTransferMigrateAccountRequest {
    return BankTransferMigrateAccountRequestFromJSONTyped(json, false);
}

export function BankTransferMigrateAccountRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): BankTransferMigrateAccountRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'account_number': json['account_number'],
        'routing_number': json['routing_number'],
        'wire_routing_number': json['wire_routing_number'] == null ? undefined : json['wire_routing_number'],
        'account_type': json['account_type'],
    };
}

export function BankTransferMigrateAccountRequestToJSON(value?: BankTransferMigrateAccountRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'client_id': value['client_id'],
        'secret': value['secret'],
        'account_number': value['account_number'],
        'routing_number': value['routing_number'],
        'wire_routing_number': value['wire_routing_number'],
        'account_type': value['account_type'],
    };
}

