/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AccountSubtype } from './AccountSubtype';
import {
    AccountSubtypeFromJSON,
    AccountSubtypeFromJSONTyped,
    AccountSubtypeToJSON,
} from './AccountSubtype';
import type { AccountType } from './AccountType';
import {
    AccountTypeFromJSON,
    AccountTypeFromJSONTyped,
    AccountTypeToJSON,
} from './AccountType';
import type { BaseReportAccountBalances } from './BaseReportAccountBalances';
import {
    BaseReportAccountBalancesFromJSON,
    BaseReportAccountBalancesFromJSONTyped,
    BaseReportAccountBalancesToJSON,
} from './BaseReportAccountBalances';
import type { BaseReportAccountInsights } from './BaseReportAccountInsights';
import {
    BaseReportAccountInsightsFromJSON,
    BaseReportAccountInsightsFromJSONTyped,
    BaseReportAccountInsightsToJSON,
} from './BaseReportAccountInsights';
import type { BaseReportTransaction } from './BaseReportTransaction';
import {
    BaseReportTransactionFromJSON,
    BaseReportTransactionFromJSONTyped,
    BaseReportTransactionToJSON,
} from './BaseReportTransaction';
import type { HistoricalBalance } from './HistoricalBalance';
import {
    HistoricalBalanceFromJSON,
    HistoricalBalanceFromJSONTyped,
    HistoricalBalanceToJSON,
} from './HistoricalBalance';
import type { Owner } from './Owner';
import {
    OwnerFromJSON,
    OwnerFromJSONTyped,
    OwnerToJSON,
} from './Owner';
import type { OwnershipType } from './OwnershipType';
import {
    OwnershipTypeFromJSON,
    OwnershipTypeFromJSONTyped,
    OwnershipTypeToJSON,
} from './OwnershipType';

/**
 * Base Report information about an account
 * @export
 * @interface BaseReportAccount
 */
export interface BaseReportAccount {
    [key: string]: any | any;
    /**
     * 
     * @type {BaseReportAccountBalances}
     * @memberof BaseReportAccount
     */
    balances: BaseReportAccountBalances;
    /**
     * The last 2-4 alphanumeric characters of an account's official account number. Note that the mask may be non-unique between an Item's accounts, and it may also not match the mask that the bank displays to the user.
     * @type {string}
     * @memberof BaseReportAccount
     */
    mask: string | null;
    /**
     * The name of the account, either assigned by the user or by the financial institution itself
     * @type {string}
     * @memberof BaseReportAccount
     */
    name: string;
    /**
     * The official name of the account as given by the financial institution
     * @type {string}
     * @memberof BaseReportAccount
     */
    official_name: string | null;
    /**
     * 
     * @type {AccountType}
     * @memberof BaseReportAccount
     */
    type: AccountType;
    /**
     * 
     * @type {AccountSubtype}
     * @memberof BaseReportAccount
     */
    subtype: AccountSubtype | null;
    /**
     * The duration of transaction history available for this Item, typically defined as the time since the date of the earliest transaction in that account. Only returned by Base Report endpoints.
     * @type {number}
     * @memberof BaseReportAccount
     */
    days_available: number;
    /**
     * Transaction history associated with the account. Only returned by Base Report endpoints. Transaction history returned by endpoints such as `/transactions/get` or `/investments/transactions/get` will be returned in the top-level `transactions` field instead.
     * @type {Array<BaseReportTransaction>}
     * @memberof BaseReportAccount
     */
    transactions: Array<BaseReportTransaction>;
    /**
     * Data returned by the financial institution about the account owner or owners. For business accounts, the name reported may be either the name of the individual or the name of the business, depending on the institution. Multiple owners on a single account will be represented in the same `owner` object, not in multiple owner objects within the array.
     * @type {Array<Owner>}
     * @memberof BaseReportAccount
     */
    owners: Array<Owner>;
    /**
     * 
     * @type {OwnershipType}
     * @memberof BaseReportAccount
     */
    ownership_type: OwnershipType | null;
    /**
     * Calculated data about the historical balances on the account. Only returned by Base Report endpoints and currently not supported by `brokerage` or `investment` accounts.
     * @type {Array<HistoricalBalance>}
     * @memberof BaseReportAccount
     */
    historical_balances?: Array<HistoricalBalance>;
    /**
     * 
     * @type {BaseReportAccountInsights}
     * @memberof BaseReportAccount
     */
    account_insights?: BaseReportAccountInsights;
}

/**
 * Check if a given object implements the BaseReportAccount interface.
 */
export function instanceOfBaseReportAccount(value: object): boolean {
    if (!('balances' in value)) return false;
    if (!('mask' in value)) return false;
    if (!('name' in value)) return false;
    if (!('official_name' in value)) return false;
    if (!('type' in value)) return false;
    if (!('subtype' in value)) return false;
    if (!('days_available' in value)) return false;
    if (!('transactions' in value)) return false;
    if (!('owners' in value)) return false;
    if (!('ownership_type' in value)) return false;
    return true;
}

export function BaseReportAccountFromJSON(json: any): BaseReportAccount {
    return BaseReportAccountFromJSONTyped(json, false);
}

export function BaseReportAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseReportAccount {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'balances': BaseReportAccountBalancesFromJSON(json['balances']),
        'mask': json['mask'],
        'name': json['name'],
        'official_name': json['official_name'],
        'type': AccountTypeFromJSON(json['type']),
        'subtype': AccountSubtypeFromJSON(json['subtype']),
        'days_available': json['days_available'],
        'transactions': ((json['transactions'] as Array<any>).map(BaseReportTransactionFromJSON)),
        'owners': ((json['owners'] as Array<any>).map(OwnerFromJSON)),
        'ownership_type': OwnershipTypeFromJSON(json['ownership_type']),
        'historical_balances': json['historical_balances'] == null ? undefined : ((json['historical_balances'] as Array<any>).map(HistoricalBalanceFromJSON)),
        'account_insights': json['account_insights'] == null ? undefined : BaseReportAccountInsightsFromJSON(json['account_insights']),
    };
}

export function BaseReportAccountToJSON(value?: BaseReportAccount | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'balances': BaseReportAccountBalancesToJSON(value['balances']),
        'mask': value['mask'],
        'name': value['name'],
        'official_name': value['official_name'],
        'type': AccountTypeToJSON(value['type']),
        'subtype': AccountSubtypeToJSON(value['subtype']),
        'days_available': value['days_available'],
        'transactions': ((value['transactions'] as Array<any>).map(BaseReportTransactionToJSON)),
        'owners': ((value['owners'] as Array<any>).map(OwnerToJSON)),
        'ownership_type': OwnershipTypeToJSON(value['ownership_type']),
        'historical_balances': value['historical_balances'] == null ? undefined : ((value['historical_balances'] as Array<any>).map(HistoricalBalanceToJSON)),
        'account_insights': BaseReportAccountInsightsToJSON(value['account_insights']),
    };
}

