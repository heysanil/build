/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreditAmountWithCurrency } from './CreditAmountWithCurrency';
import {
    CreditAmountWithCurrencyFromJSON,
    CreditAmountWithCurrencyFromJSONTyped,
    CreditAmountWithCurrencyToJSON,
} from './CreditAmountWithCurrency';

/**
 * Average dollar amount of credit or debit transactions out of the account. This field will only added for depository accounts
 * @export
 * @interface BaseReportAverageFlowInsights
 */
export interface BaseReportAverageFlowInsights {
    [key: string]: any | any;
    /**
     * The start date of this time period.
     * The date will be returned in an ISO 8601 format (YYYY-MM-DD).
     * @type {Date}
     * @memberof BaseReportAverageFlowInsights
     */
    start_date?: Date;
    /**
     * The end date of this time period.
     * The date will be returned in an ISO 8601 format (YYYY-MM-DD).
     * @type {Date}
     * @memberof BaseReportAverageFlowInsights
     */
    end_date?: Date;
    /**
     * 
     * @type {CreditAmountWithCurrency}
     * @memberof BaseReportAverageFlowInsights
     */
    total_amount?: CreditAmountWithCurrency;
}

/**
 * Check if a given object implements the BaseReportAverageFlowInsights interface.
 */
export function instanceOfBaseReportAverageFlowInsights(value: object): boolean {
    return true;
}

export function BaseReportAverageFlowInsightsFromJSON(json: any): BaseReportAverageFlowInsights {
    return BaseReportAverageFlowInsightsFromJSONTyped(json, false);
}

export function BaseReportAverageFlowInsightsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseReportAverageFlowInsights {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'start_date': json['start_date'] == null ? undefined : (new Date(json['start_date'])),
        'end_date': json['end_date'] == null ? undefined : (new Date(json['end_date'])),
        'total_amount': json['total_amount'] == null ? undefined : CreditAmountWithCurrencyFromJSON(json['total_amount']),
    };
}

export function BaseReportAverageFlowInsightsToJSON(value?: BaseReportAverageFlowInsights | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'start_date': value['start_date'] == null ? undefined : ((value['start_date']).toISOString().substring(0,10)),
        'end_date': value['end_date'] == null ? undefined : ((value['end_date']).toISOString().substring(0,10)),
        'total_amount': CreditAmountWithCurrencyToJSON(value['total_amount']),
    };
}

