/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BaseReport } from './BaseReport';
import {
    BaseReportFromJSON,
    BaseReportFromJSONTyped,
    BaseReportToJSON,
} from './BaseReport';
import type { BaseReportWarning } from './BaseReportWarning';
import {
    BaseReportWarningFromJSON,
    BaseReportWarningFromJSONTyped,
    BaseReportWarningToJSON,
} from './BaseReportWarning';

/**
 * BaseReportGetResponse defines the response schema for `/cra/base_report/get`
 * @export
 * @interface BaseReportGetResponse
 */
export interface BaseReportGetResponse {
    [key: string]: any | any;
    /**
     * 
     * @type {BaseReport}
     * @memberof BaseReportGetResponse
     */
    report: BaseReport;
    /**
     * If the Base Report generation was successful but identity information cannot be returned, this array will contain information about the errors causing identity information to be missing
     * @type {Array<BaseReportWarning>}
     * @memberof BaseReportGetResponse
     */
    warnings?: Array<BaseReportWarning>;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof BaseReportGetResponse
     */
    request_id: string;
}

/**
 * Check if a given object implements the BaseReportGetResponse interface.
 */
export function instanceOfBaseReportGetResponse(value: object): boolean {
    if (!('report' in value)) return false;
    if (!('request_id' in value)) return false;
    return true;
}

export function BaseReportGetResponseFromJSON(json: any): BaseReportGetResponse {
    return BaseReportGetResponseFromJSONTyped(json, false);
}

export function BaseReportGetResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseReportGetResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'report': BaseReportFromJSON(json['report']),
        'warnings': json['warnings'] == null ? undefined : ((json['warnings'] as Array<any>).map(BaseReportWarningFromJSON)),
        'request_id': json['request_id'],
    };
}

export function BaseReportGetResponseToJSON(value?: BaseReportGetResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'report': BaseReportToJSON(value['report']),
        'warnings': value['warnings'] == null ? undefined : ((value['warnings'] as Array<any>).map(BaseReportWarningToJSON)),
        'request_id': value['request_id'],
    };
}

