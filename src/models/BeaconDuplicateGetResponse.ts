/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BeaconMatchSummaryAnalysis } from './BeaconMatchSummaryAnalysis';
import {
    BeaconMatchSummaryAnalysisFromJSON,
    BeaconMatchSummaryAnalysisFromJSONTyped,
    BeaconMatchSummaryAnalysisToJSON,
} from './BeaconMatchSummaryAnalysis';
import type { BeaconUserRevision } from './BeaconUserRevision';
import {
    BeaconUserRevisionFromJSON,
    BeaconUserRevisionFromJSONTyped,
    BeaconUserRevisionToJSON,
} from './BeaconUserRevision';

/**
 * A Beacon Duplicate represents a pair of matching Beacon Users and an analysis of the fields they matched on.
 * @export
 * @interface BeaconDuplicateGetResponse
 */
export interface BeaconDuplicateGetResponse {
    [key: string]: any | any;
    /**
     * ID of the associated Beacon Duplicate.
     * @type {string}
     * @memberof BeaconDuplicateGetResponse
     */
    id: string;
    /**
     * 
     * @type {BeaconUserRevision}
     * @memberof BeaconDuplicateGetResponse
     */
    beacon_user1: BeaconUserRevision;
    /**
     * 
     * @type {BeaconUserRevision}
     * @memberof BeaconDuplicateGetResponse
     */
    beacon_user2: BeaconUserRevision;
    /**
     * 
     * @type {BeaconMatchSummaryAnalysis}
     * @memberof BeaconDuplicateGetResponse
     */
    analysis: BeaconMatchSummaryAnalysis;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof BeaconDuplicateGetResponse
     */
    request_id: string;
}

/**
 * Check if a given object implements the BeaconDuplicateGetResponse interface.
 */
export function instanceOfBeaconDuplicateGetResponse(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('beacon_user1' in value)) return false;
    if (!('beacon_user2' in value)) return false;
    if (!('analysis' in value)) return false;
    if (!('request_id' in value)) return false;
    return true;
}

export function BeaconDuplicateGetResponseFromJSON(json: any): BeaconDuplicateGetResponse {
    return BeaconDuplicateGetResponseFromJSONTyped(json, false);
}

export function BeaconDuplicateGetResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BeaconDuplicateGetResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'id': json['id'],
        'beacon_user1': BeaconUserRevisionFromJSON(json['beacon_user1']),
        'beacon_user2': BeaconUserRevisionFromJSON(json['beacon_user2']),
        'analysis': BeaconMatchSummaryAnalysisFromJSON(json['analysis']),
        'request_id': json['request_id'],
    };
}

export function BeaconDuplicateGetResponseToJSON(value?: BeaconDuplicateGetResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'id': value['id'],
        'beacon_user1': BeaconUserRevisionToJSON(value['beacon_user1']),
        'beacon_user2': BeaconUserRevisionToJSON(value['beacon_user2']),
        'analysis': BeaconMatchSummaryAnalysisToJSON(value['analysis']),
        'request_id': value['request_id'],
    };
}

