/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Request input for listing Beacon Reports
 * @export
 * @interface BeaconReportListRequest
 */
export interface BeaconReportListRequest {
    /**
     * ID of the associated Beacon User.
     * @type {string}
     * @memberof BeaconReportListRequest
     */
    beacon_user_id: string;
    /**
     * An identifier that determines which page of results you receive.
     * @type {string}
     * @memberof BeaconReportListRequest
     */
    cursor?: string;
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * @type {string}
     * @memberof BeaconReportListRequest
     */
    client_id?: string;
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * @type {string}
     * @memberof BeaconReportListRequest
     */
    secret?: string;
}

/**
 * Check if a given object implements the BeaconReportListRequest interface.
 */
export function instanceOfBeaconReportListRequest(value: object): boolean {
    if (!('beacon_user_id' in value)) return false;
    return true;
}

export function BeaconReportListRequestFromJSON(json: any): BeaconReportListRequest {
    return BeaconReportListRequestFromJSONTyped(json, false);
}

export function BeaconReportListRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): BeaconReportListRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'beacon_user_id': json['beacon_user_id'],
        'cursor': json['cursor'] == null ? undefined : json['cursor'],
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'secret': json['secret'] == null ? undefined : json['secret'],
    };
}

export function BeaconReportListRequestToJSON(value?: BeaconReportListRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'beacon_user_id': value['beacon_user_id'],
        'cursor': value['cursor'],
        'client_id': value['client_id'],
        'secret': value['secret'],
    };
}

