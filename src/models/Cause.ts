/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlaidErrorType } from './PlaidErrorType';
import {
    PlaidErrorTypeFromJSON,
    PlaidErrorTypeFromJSONTyped,
    PlaidErrorTypeToJSON,
} from './PlaidErrorType';

/**
 * An error object and associated `item_id` used to identify a specific Item and error when a batch operation operating on multiple Items has encountered an error in one of the Items.
 * @export
 * @interface Cause
 */
export interface Cause {
    [key: string]: any | any;
    /**
     * 
     * @type {PlaidErrorType}
     * @memberof Cause
     */
    error_type: PlaidErrorType;
    /**
     * The particular error code. Safe for programmatic use.
     * @type {string}
     * @memberof Cause
     */
    error_code: string;
    /**
     * A developer-friendly representation of the error code. This may change over time and is not safe for programmatic use.
     * @type {string}
     * @memberof Cause
     */
    error_message: string;
    /**
     * A user-friendly representation of the error code. `null` if the error is not related to user action.
     * 
     * This may change over time and is not safe for programmatic use.
     * @type {string}
     * @memberof Cause
     */
    display_message: string | null;
    /**
     * A unique ID identifying the request, to be used for troubleshooting purposes. This field will be omitted in errors provided by webhooks.
     * @type {string}
     * @memberof Cause
     */
    request_id?: string;
    /**
     * In the Assets product, a request can pertain to more than one Item. If an error is returned for such a request, `causes` will return an array of errors containing a breakdown of these errors on the individual Item level, if any can be identified.
     * 
     * `causes` will only be provided for the `error_type` `ASSET_REPORT_ERROR`. `causes` will also not be populated inside an error nested within a `warning` object.
     * @type {Array<object>}
     * @memberof Cause
     */
    causes?: Array<object>;
    /**
     * The HTTP status code associated with the error. This will only be returned in the response body when the error information is provided via a webhook.
     * @type {number}
     * @memberof Cause
     */
    status?: number;
    /**
     * The URL of a Plaid documentation page with more information about the error
     * @type {string}
     * @memberof Cause
     */
    documentation_url?: string;
    /**
     * Suggested steps for resolving the error
     * @type {string}
     * @memberof Cause
     */
    suggested_action?: string;
    /**
     * The `item_id` of the Item associated with this webhook, warning, or error
     * @type {string}
     * @memberof Cause
     */
    item_id: string;
}

/**
 * Check if a given object implements the Cause interface.
 */
export function instanceOfCause(value: object): boolean {
    if (!('error_type' in value)) return false;
    if (!('error_code' in value)) return false;
    if (!('error_message' in value)) return false;
    if (!('display_message' in value)) return false;
    if (!('item_id' in value)) return false;
    return true;
}

export function CauseFromJSON(json: any): Cause {
    return CauseFromJSONTyped(json, false);
}

export function CauseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Cause {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'error_type': PlaidErrorTypeFromJSON(json['error_type']),
        'error_code': json['error_code'],
        'error_message': json['error_message'],
        'display_message': json['display_message'],
        'request_id': json['request_id'] == null ? undefined : json['request_id'],
        'causes': json['causes'] == null ? undefined : json['causes'],
        'status': json['status'] == null ? undefined : json['status'],
        'documentation_url': json['documentation_url'] == null ? undefined : json['documentation_url'],
        'suggested_action': json['suggested_action'] == null ? undefined : json['suggested_action'],
        'item_id': json['item_id'],
    };
}

export function CauseToJSON(value?: Cause | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'error_type': PlaidErrorTypeToJSON(value['error_type']),
        'error_code': value['error_code'],
        'error_message': value['error_message'],
        'display_message': value['display_message'],
        'request_id': value['request_id'],
        'causes': value['causes'],
        'status': value['status'],
        'documentation_url': value['documentation_url'],
        'suggested_action': value['suggested_action'],
        'item_id': value['item_id'],
    };
}

