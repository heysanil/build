/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ClientProvidedTransactionLocation } from './ClientProvidedTransactionLocation';
import {
    ClientProvidedTransactionLocationFromJSON,
    ClientProvidedTransactionLocationFromJSONTyped,
    ClientProvidedTransactionLocationToJSON,
} from './ClientProvidedTransactionLocation';
import type { EnrichTransactionDirection } from './EnrichTransactionDirection';
import {
    EnrichTransactionDirectionFromJSON,
    EnrichTransactionDirectionFromJSONTyped,
    EnrichTransactionDirectionToJSON,
} from './EnrichTransactionDirection';

/**
 * A client-provided transaction for Plaid to enrich.
 * @export
 * @interface ClientProvidedTransaction
 */
export interface ClientProvidedTransaction {
    [key: string]: any | any;
    /**
     * A unique ID for the transaction used to help you tie data back to your systems.
     * @type {string}
     * @memberof ClientProvidedTransaction
     */
    id: string;
    /**
     * A unique user id used to group transactions for a given user, as a unique identifier from your application. Personally identifiable information, such as an email address or phone number, should not be used in the client_user_id.
     * @type {string}
     * @memberof ClientProvidedTransaction
     */
    client_user_id?: string;
    /**
     * A unique account id used to group transactions for a given account, as a unique identifier from your application. Personally identifiable information, such as an email address or phone number, should not be used in the client_account_id.
     * @type {string}
     * @memberof ClientProvidedTransaction
     */
    client_account_id?: string;
    /**
     * The account type associated with the transaction. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema).
     * @type {string}
     * @memberof ClientProvidedTransaction
     */
    account_type?: string;
    /**
     * The account subtype associated with the transaction. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema).
     * @type {string}
     * @memberof ClientProvidedTransaction
     */
    account_subtype?: string;
    /**
     * The raw description of the transaction. If you have location data in available an unstructured format, it may be appended to the `description` field.
     * @type {string}
     * @memberof ClientProvidedTransaction
     */
    description: string;
    /**
     * The absolute value of the transaction (>= 0). When testing Enrich, note that `amount` data should be realistic. Unrealistic or inaccurate `amount` data may result in reduced quality output.
     * @type {number}
     * @memberof ClientProvidedTransaction
     */
    amount: number;
    /**
     * 
     * @type {EnrichTransactionDirection}
     * @memberof ClientProvidedTransaction
     */
    direction: EnrichTransactionDirection;
    /**
     * The ISO-4217 currency code of the transaction e.g. USD.
     * @type {string}
     * @memberof ClientProvidedTransaction
     */
    iso_currency_code: string;
    /**
     * 
     * @type {ClientProvidedTransactionLocation}
     * @memberof ClientProvidedTransaction
     */
    location?: ClientProvidedTransactionLocation;
    /**
     * Merchant category codes (MCCs) are four-digit numbers that describe a merchant's primary business activities.
     * @type {string}
     * @memberof ClientProvidedTransaction
     */
    mcc?: string;
    /**
     * The date the transaction posted, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format.
     * @type {Date}
     * @memberof ClientProvidedTransaction
     */
    date_posted?: Date;
}

/**
 * Check if a given object implements the ClientProvidedTransaction interface.
 */
export function instanceOfClientProvidedTransaction(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('description' in value)) return false;
    if (!('amount' in value)) return false;
    if (!('direction' in value)) return false;
    if (!('iso_currency_code' in value)) return false;
    return true;
}

export function ClientProvidedTransactionFromJSON(json: any): ClientProvidedTransaction {
    return ClientProvidedTransactionFromJSONTyped(json, false);
}

export function ClientProvidedTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientProvidedTransaction {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'id': json['id'],
        'client_user_id': json['client_user_id'] == null ? undefined : json['client_user_id'],
        'client_account_id': json['client_account_id'] == null ? undefined : json['client_account_id'],
        'account_type': json['account_type'] == null ? undefined : json['account_type'],
        'account_subtype': json['account_subtype'] == null ? undefined : json['account_subtype'],
        'description': json['description'],
        'amount': json['amount'],
        'direction': EnrichTransactionDirectionFromJSON(json['direction']),
        'iso_currency_code': json['iso_currency_code'],
        'location': json['location'] == null ? undefined : ClientProvidedTransactionLocationFromJSON(json['location']),
        'mcc': json['mcc'] == null ? undefined : json['mcc'],
        'date_posted': json['date_posted'] == null ? undefined : (new Date(json['date_posted'])),
    };
}

export function ClientProvidedTransactionToJSON(value?: ClientProvidedTransaction | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'id': value['id'],
        'client_user_id': value['client_user_id'],
        'client_account_id': value['client_account_id'],
        'account_type': value['account_type'],
        'account_subtype': value['account_subtype'],
        'description': value['description'],
        'amount': value['amount'],
        'direction': EnrichTransactionDirectionToJSON(value['direction']),
        'iso_currency_code': value['iso_currency_code'],
        'location': ClientProvidedTransactionLocationToJSON(value['location']),
        'mcc': value['mcc'],
        'date_posted': value['date_posted'] == null ? undefined : ((value['date_posted']).toISOString().substring(0,10)),
    };
}

