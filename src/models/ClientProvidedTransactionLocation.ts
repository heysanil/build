/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A representation of where a transaction took place.
 * 
 * Use this field to pass in structured location information you may have about your transactions. Providing location data is optional but can increase result quality. If you have unstructured location information, it may be appended to the `description` field.
 * @export
 * @interface ClientProvidedTransactionLocation
 */
export interface ClientProvidedTransactionLocation {
    [key: string]: any | any;
    /**
     * The country where the transaction occurred.
     * @type {string}
     * @memberof ClientProvidedTransactionLocation
     */
    country?: string;
    /**
     * The region or state where the transaction occurred.
     * @type {string}
     * @memberof ClientProvidedTransactionLocation
     */
    region?: string;
    /**
     * The city where the transaction occurred.
     * @type {string}
     * @memberof ClientProvidedTransactionLocation
     */
    city?: string;
    /**
     * The street address where the transaction occurred.
     * @type {string}
     * @memberof ClientProvidedTransactionLocation
     */
    address?: string;
    /**
     * The postal code where the transaction occurred.
     * @type {string}
     * @memberof ClientProvidedTransactionLocation
     */
    postal_code?: string;
}

/**
 * Check if a given object implements the ClientProvidedTransactionLocation interface.
 */
export function instanceOfClientProvidedTransactionLocation(value: object): boolean {
    return true;
}

export function ClientProvidedTransactionLocationFromJSON(json: any): ClientProvidedTransactionLocation {
    return ClientProvidedTransactionLocationFromJSONTyped(json, false);
}

export function ClientProvidedTransactionLocationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientProvidedTransactionLocation {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'country': json['country'] == null ? undefined : json['country'],
        'region': json['region'] == null ? undefined : json['region'],
        'city': json['city'] == null ? undefined : json['city'],
        'address': json['address'] == null ? undefined : json['address'],
        'postal_code': json['postal_code'] == null ? undefined : json['postal_code'],
    };
}

export function ClientProvidedTransactionLocationToJSON(value?: ClientProvidedTransactionLocation | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'country': value['country'],
        'region': value['region'],
        'city': value['city'],
        'address': value['address'],
        'postal_code': value['postal_code'],
    };
}

