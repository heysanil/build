/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ScopesNullable } from './ScopesNullable';
import {
    ScopesNullableFromJSON,
    ScopesNullableFromJSONTyped,
    ScopesNullableToJSON,
} from './ScopesNullable';

/**
 * Describes the connected application for a particular end user.
 * @export
 * @interface ConnectedApplication
 */
export interface ConnectedApplication {
    /**
     * This field will map to the application ID that is returned from /item/application/list, or provided to the institution in an oauth redirect.
     * @type {string}
     * @memberof ConnectedApplication
     */
    application_id: string;
    /**
     * The name of the application
     * @type {string}
     * @memberof ConnectedApplication
     */
    name: string;
    /**
     * A human-readable name of the application for display purposes
     * @type {string}
     * @memberof ConnectedApplication
     */
    display_name?: string;
    /**
     * A URL that links to the application logo image.
     * @type {string}
     * @memberof ConnectedApplication
     */
    logo_url?: string;
    /**
     * The URL for the application's website
     * @type {string}
     * @memberof ConnectedApplication
     */
    application_url?: string;
    /**
     * A string provided by the connected app stating why they use their respective enabled products.
     * @type {string}
     * @memberof ConnectedApplication
     */
    reason_for_access?: string;
    /**
     * The date this application was linked in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format in UTC.
     * @type {Date}
     * @memberof ConnectedApplication
     */
    created_at: Date;
    /**
     * 
     * @type {ScopesNullable}
     * @memberof ConnectedApplication
     */
    scopes?: ScopesNullable;
}

/**
 * Check if a given object implements the ConnectedApplication interface.
 */
export function instanceOfConnectedApplication(value: object): boolean {
    if (!('application_id' in value)) return false;
    if (!('name' in value)) return false;
    if (!('created_at' in value)) return false;
    return true;
}

export function ConnectedApplicationFromJSON(json: any): ConnectedApplication {
    return ConnectedApplicationFromJSONTyped(json, false);
}

export function ConnectedApplicationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectedApplication {
    if (json == null) {
        return json;
    }
    return {
        
        'application_id': json['application_id'],
        'name': json['name'],
        'display_name': json['display_name'] == null ? undefined : json['display_name'],
        'logo_url': json['logo_url'] == null ? undefined : json['logo_url'],
        'application_url': json['application_url'] == null ? undefined : json['application_url'],
        'reason_for_access': json['reason_for_access'] == null ? undefined : json['reason_for_access'],
        'created_at': (new Date(json['created_at'])),
        'scopes': json['scopes'] == null ? undefined : ScopesNullableFromJSON(json['scopes']),
    };
}

export function ConnectedApplicationToJSON(value?: ConnectedApplication | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'application_id': value['application_id'],
        'name': value['name'],
        'display_name': value['display_name'],
        'logo_url': value['logo_url'],
        'application_url': value['application_url'],
        'reason_for_access': value['reason_for_access'],
        'created_at': ((value['created_at']).toISOString()),
        'scopes': ScopesNullableToJSON(value['scopes']),
    };
}

