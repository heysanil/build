/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CraBankIncomeEmployer } from './CraBankIncomeEmployer';
import {
    CraBankIncomeEmployerFromJSON,
    CraBankIncomeEmployerFromJSONTyped,
    CraBankIncomeEmployerToJSON,
} from './CraBankIncomeEmployer';
import type { CraBankIncomeHistoricalSummary } from './CraBankIncomeHistoricalSummary';
import {
    CraBankIncomeHistoricalSummaryFromJSON,
    CraBankIncomeHistoricalSummaryFromJSONTyped,
    CraBankIncomeHistoricalSummaryToJSON,
} from './CraBankIncomeHistoricalSummary';
import type { CraPredictionInterval } from './CraPredictionInterval';
import {
    CraPredictionIntervalFromJSON,
    CraPredictionIntervalFromJSONTyped,
    CraPredictionIntervalToJSON,
} from './CraPredictionInterval';
import type { CreditBankIncomeCategory } from './CreditBankIncomeCategory';
import {
    CreditBankIncomeCategoryFromJSON,
    CreditBankIncomeCategoryFromJSONTyped,
    CreditBankIncomeCategoryToJSON,
} from './CreditBankIncomeCategory';
import type { CreditBankIncomePayFrequency } from './CreditBankIncomePayFrequency';
import {
    CreditBankIncomePayFrequencyFromJSON,
    CreditBankIncomePayFrequencyFromJSONTyped,
    CreditBankIncomePayFrequencyToJSON,
} from './CreditBankIncomePayFrequency';

/**
 * Detailed information for the income source.
 * @export
 * @interface CraBankIncomeSource
 */
export interface CraBankIncomeSource {
    /**
     * A unique identifier for an income source.
     * @type {string}
     * @memberof CraBankIncomeSource
     */
    income_source_id?: string;
    /**
     * The most common name or original description for the underlying income transactions.
     * @type {string}
     * @memberof CraBankIncomeSource
     */
    income_description?: string;
    /**
     * 
     * @type {CreditBankIncomeCategory}
     * @memberof CraBankIncomeSource
     */
    income_category?: CreditBankIncomeCategory;
    /**
     * Minimum of all dates within the specific income sources in the user's bank account for days requested by the client.
     * The date will be returned in an ISO 8601 format (YYYY-MM-DD).
     * @type {Date}
     * @memberof CraBankIncomeSource
     */
    start_date?: Date;
    /**
     * Maximum of all dates within the specific income sources in the user’s bank account for days requested by the client.
     * The date will be returned in an ISO 8601 format (YYYY-MM-DD).
     * @type {Date}
     * @memberof CraBankIncomeSource
     */
    end_date?: Date;
    /**
     * 
     * @type {CreditBankIncomePayFrequency}
     * @memberof CraBankIncomeSource
     */
    pay_frequency?: CreditBankIncomePayFrequency;
    /**
     * Total amount of earnings in the user’s bank account for the specific income source for days requested by the client.
     * @type {number}
     * @memberof CraBankIncomeSource
     */
    total_amount?: number;
    /**
     * The ISO 4217 currency code of the amount or balance.
     * @type {string}
     * @memberof CraBankIncomeSource
     */
    iso_currency_code?: string;
    /**
     * The unofficial currency code associated with the amount or balance. Always `null` if `iso_currency_code` is non-null.
     * Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
     * @type {string}
     * @memberof CraBankIncomeSource
     */
    unofficial_currency_code?: string;
    /**
     * Number of transactions for the income source within the start and end date.
     * @type {number}
     * @memberof CraBankIncomeSource
     */
    transaction_count?: number;
    /**
     * The expected date of the end user’s next paycheck for the income source.
     * The date will be returned in an ISO 8601 format (YYYY-MM-DD).
     * @type {Date}
     * @memberof CraBankIncomeSource
     */
    next_payment_date?: Date;
    /**
     * An estimate of the average gross monthly income based on the historical net amount and income category for the income source(s).
     * @type {number}
     * @memberof CraBankIncomeSource
     */
    historical_average_monthly_gross_income?: number;
    /**
     * The average monthly net income amount estimated based on the historical data for the income source(s).
     * @type {number}
     * @memberof CraBankIncomeSource
     */
    historical_average_monthly_income?: number;
    /**
     * The predicted average monthly net income amount for the income source(s).
     * @type {number}
     * @memberof CraBankIncomeSource
     */
    forecasted_average_monthly_income?: number;
    /**
     * The prediction interval(s) for the forecasted average monthly income.
     * @type {Array<CraPredictionInterval>}
     * @memberof CraBankIncomeSource
     */
    forecasted_average_monthly_income_prediction_intervals: Array<CraPredictionInterval>;
    /**
     * 
     * @type {CraBankIncomeEmployer}
     * @memberof CraBankIncomeSource
     */
    employer?: CraBankIncomeEmployer;
    /**
     * 
     * @type {Array<CraBankIncomeHistoricalSummary>}
     * @memberof CraBankIncomeSource
     */
    historical_summary?: Array<CraBankIncomeHistoricalSummary>;
}

/**
 * Check if a given object implements the CraBankIncomeSource interface.
 */
export function instanceOfCraBankIncomeSource(value: object): boolean {
    if (!('forecasted_average_monthly_income_prediction_intervals' in value)) return false;
    return true;
}

export function CraBankIncomeSourceFromJSON(json: any): CraBankIncomeSource {
    return CraBankIncomeSourceFromJSONTyped(json, false);
}

export function CraBankIncomeSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CraBankIncomeSource {
    if (json == null) {
        return json;
    }
    return {
        
        'income_source_id': json['income_source_id'] == null ? undefined : json['income_source_id'],
        'income_description': json['income_description'] == null ? undefined : json['income_description'],
        'income_category': json['income_category'] == null ? undefined : CreditBankIncomeCategoryFromJSON(json['income_category']),
        'start_date': json['start_date'] == null ? undefined : (new Date(json['start_date'])),
        'end_date': json['end_date'] == null ? undefined : (new Date(json['end_date'])),
        'pay_frequency': json['pay_frequency'] == null ? undefined : CreditBankIncomePayFrequencyFromJSON(json['pay_frequency']),
        'total_amount': json['total_amount'] == null ? undefined : json['total_amount'],
        'iso_currency_code': json['iso_currency_code'] == null ? undefined : json['iso_currency_code'],
        'unofficial_currency_code': json['unofficial_currency_code'] == null ? undefined : json['unofficial_currency_code'],
        'transaction_count': json['transaction_count'] == null ? undefined : json['transaction_count'],
        'next_payment_date': json['next_payment_date'] == null ? undefined : (new Date(json['next_payment_date'])),
        'historical_average_monthly_gross_income': json['historical_average_monthly_gross_income'] == null ? undefined : json['historical_average_monthly_gross_income'],
        'historical_average_monthly_income': json['historical_average_monthly_income'] == null ? undefined : json['historical_average_monthly_income'],
        'forecasted_average_monthly_income': json['forecasted_average_monthly_income'] == null ? undefined : json['forecasted_average_monthly_income'],
        'forecasted_average_monthly_income_prediction_intervals': ((json['forecasted_average_monthly_income_prediction_intervals'] as Array<any>).map(CraPredictionIntervalFromJSON)),
        'employer': json['employer'] == null ? undefined : CraBankIncomeEmployerFromJSON(json['employer']),
        'historical_summary': json['historical_summary'] == null ? undefined : ((json['historical_summary'] as Array<any>).map(CraBankIncomeHistoricalSummaryFromJSON)),
    };
}

export function CraBankIncomeSourceToJSON(value?: CraBankIncomeSource | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'income_source_id': value['income_source_id'],
        'income_description': value['income_description'],
        'income_category': CreditBankIncomeCategoryToJSON(value['income_category']),
        'start_date': value['start_date'] == null ? undefined : ((value['start_date']).toISOString().substring(0,10)),
        'end_date': value['end_date'] == null ? undefined : ((value['end_date']).toISOString().substring(0,10)),
        'pay_frequency': CreditBankIncomePayFrequencyToJSON(value['pay_frequency']),
        'total_amount': value['total_amount'],
        'iso_currency_code': value['iso_currency_code'],
        'unofficial_currency_code': value['unofficial_currency_code'],
        'transaction_count': value['transaction_count'],
        'next_payment_date': value['next_payment_date'] == null ? undefined : ((value['next_payment_date'] as any).toISOString().substring(0,10)),
        'historical_average_monthly_gross_income': value['historical_average_monthly_gross_income'],
        'historical_average_monthly_income': value['historical_average_monthly_income'],
        'forecasted_average_monthly_income': value['forecasted_average_monthly_income'],
        'forecasted_average_monthly_income_prediction_intervals': ((value['forecasted_average_monthly_income_prediction_intervals'] as Array<any>).map(CraPredictionIntervalToJSON)),
        'employer': CraBankIncomeEmployerToJSON(value['employer']),
        'historical_summary': value['historical_summary'] == null ? undefined : ((value['historical_summary'] as Array<any>).map(CraBankIncomeHistoricalSummaryToJSON)),
    };
}

