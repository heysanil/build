/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CraPartnerInsights } from './CraPartnerInsights';
import {
    CraPartnerInsightsFromJSON,
    CraPartnerInsightsFromJSONTyped,
    CraPartnerInsightsToJSON,
} from './CraPartnerInsights';

/**
 * CraPartnerInsightsGetResponse defines the response schema for `/cra/partner_insights/get`.
 * @export
 * @interface CraPartnerInsightsGetResponse
 */
export interface CraPartnerInsightsGetResponse {
    [key: string]: any | any;
    /**
     * 
     * @type {Array<CraPartnerInsights>}
     * @memberof CraPartnerInsightsGetResponse
     */
    report?: Array<CraPartnerInsights>;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof CraPartnerInsightsGetResponse
     */
    request_id: string;
}

/**
 * Check if a given object implements the CraPartnerInsightsGetResponse interface.
 */
export function instanceOfCraPartnerInsightsGetResponse(value: object): boolean {
    if (!('request_id' in value)) return false;
    return true;
}

export function CraPartnerInsightsGetResponseFromJSON(json: any): CraPartnerInsightsGetResponse {
    return CraPartnerInsightsGetResponseFromJSONTyped(json, false);
}

export function CraPartnerInsightsGetResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CraPartnerInsightsGetResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'report': json['report'] == null ? undefined : ((json['report'] as Array<any>).map(CraPartnerInsightsFromJSON)),
        'request_id': json['request_id'],
    };
}

export function CraPartnerInsightsGetResponseToJSON(value?: CraPartnerInsightsGetResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'report': value['report'] == null ? undefined : ((value['report'] as Array<any>).map(CraPartnerInsightsToJSON)),
        'request_id': value['request_id'],
    };
}

