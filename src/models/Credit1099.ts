/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Credit1099Filer } from './Credit1099Filer';
import {
    Credit1099FilerFromJSON,
    Credit1099FilerFromJSONTyped,
    Credit1099FilerToJSON,
} from './Credit1099Filer';
import type { Credit1099Payer } from './Credit1099Payer';
import {
    Credit1099PayerFromJSON,
    Credit1099PayerFromJSONTyped,
    Credit1099PayerToJSON,
} from './Credit1099Payer';
import type { Credit1099Recipient } from './Credit1099Recipient';
import {
    Credit1099RecipientFromJSON,
    Credit1099RecipientFromJSONTyped,
    Credit1099RecipientToJSON,
} from './Credit1099Recipient';
import type { CreditDocumentMetadata } from './CreditDocumentMetadata';
import {
    CreditDocumentMetadataFromJSON,
    CreditDocumentMetadataFromJSONTyped,
    CreditDocumentMetadataToJSON,
} from './CreditDocumentMetadata';
import type { Form1099Type } from './Form1099Type';
import {
    Form1099TypeFromJSON,
    Form1099TypeFromJSONTyped,
    Form1099TypeToJSON,
} from './Form1099Type';

/**
 * An object representing an end user's 1099 tax form
 * @export
 * @interface Credit1099
 */
export interface Credit1099 {
    [key: string]: any | any;
    /**
     * An identifier of the document referenced by the document metadata.
     * @type {string}
     * @memberof Credit1099
     */
    document_id: string | null;
    /**
     * 
     * @type {CreditDocumentMetadata}
     * @memberof Credit1099
     */
    document_metadata?: CreditDocumentMetadata;
    /**
     * 
     * @type {Form1099Type}
     * @memberof Credit1099
     */
    form_1099_type?: Form1099Type;
    /**
     * 
     * @type {Credit1099Recipient}
     * @memberof Credit1099
     */
    recipient?: Credit1099Recipient;
    /**
     * 
     * @type {Credit1099Payer}
     * @memberof Credit1099
     */
    payer?: Credit1099Payer;
    /**
     * 
     * @type {Credit1099Filer}
     * @memberof Credit1099
     */
    filer?: Credit1099Filer;
    /**
     * Tax year of the tax form.
     * @type {string}
     * @memberof Credit1099
     */
    tax_year?: string;
    /**
     * Amount in rent by payer.
     * @type {number}
     * @memberof Credit1099
     */
    rents?: number;
    /**
     * Amount in royalties by payer.
     * @type {number}
     * @memberof Credit1099
     */
    royalties?: number;
    /**
     * Amount in other income by payer.
     * @type {number}
     * @memberof Credit1099
     */
    other_income?: number;
    /**
     * Amount of federal income tax withheld from payer.
     * @type {number}
     * @memberof Credit1099
     */
    federal_income_tax_withheld?: number;
    /**
     * Amount of fishing boat proceeds from payer.
     * @type {number}
     * @memberof Credit1099
     */
    fishing_boat_proceeds?: number;
    /**
     * Amount of medical and healthcare payments from payer.
     * @type {number}
     * @memberof Credit1099
     */
    medical_and_healthcare_payments?: number;
    /**
     * Amount of nonemployee compensation from payer.
     * @type {number}
     * @memberof Credit1099
     */
    nonemployee_compensation?: number;
    /**
     * Amount of substitute payments made by payer.
     * @type {number}
     * @memberof Credit1099
     */
    substitute_payments_in_lieu_of_dividends_or_interest?: number;
    /**
     * Whether or not payer made direct sales over $5000 of consumer products.
     * @type {string}
     * @memberof Credit1099
     */
    payer_made_direct_sales_of_5000_or_more_of_consumer_products_to_buyer?: string;
    /**
     * Amount of crop insurance proceeds.
     * @type {number}
     * @memberof Credit1099
     */
    crop_insurance_proceeds?: number;
    /**
     * Amount of golden parachute payments made by payer.
     * @type {number}
     * @memberof Credit1099
     */
    excess_golden_parachute_payments?: number;
    /**
     * Amount of gross proceeds paid to an attorney by payer.
     * @type {number}
     * @memberof Credit1099
     */
    gross_proceeds_paid_to_an_attorney?: number;
    /**
     * Amount of 409A deferrals earned by payer.
     * @type {number}
     * @memberof Credit1099
     */
    section_409a_deferrals?: number;
    /**
     * Amount of 409A income earned by payer.
     * @type {number}
     * @memberof Credit1099
     */
    section_409a_income?: number;
    /**
     * Amount of state tax withheld of payer for primary state.
     * @type {number}
     * @memberof Credit1099
     */
    state_tax_withheld?: number;
    /**
     * Amount of state tax withheld of payer for secondary state.
     * @type {number}
     * @memberof Credit1099
     */
    state_tax_withheld_lower?: number;
    /**
     * Primary state ID.
     * @type {string}
     * @memberof Credit1099
     */
    payer_state_number?: string;
    /**
     * Secondary state ID.
     * @type {string}
     * @memberof Credit1099
     */
    payer_state_number_lower?: string;
    /**
     * State income reported for primary state.
     * @type {number}
     * @memberof Credit1099
     */
    state_income?: number;
    /**
     * State income reported for secondary state.
     * @type {number}
     * @memberof Credit1099
     */
    state_income_lower?: number;
    /**
     * One of the values will be provided Payment card Third party network
     * @type {string}
     * @memberof Credit1099
     */
    transactions_reported?: string;
    /**
     * Name of the PSE (Payment Settlement Entity).
     * @type {string}
     * @memberof Credit1099
     */
    pse_name?: string;
    /**
     * Formatted (XXX) XXX-XXXX. Phone number of the PSE (Payment Settlement Entity).
     * @type {string}
     * @memberof Credit1099
     */
    pse_telephone_number?: string;
    /**
     * Gross amount reported.
     * @type {number}
     * @memberof Credit1099
     */
    gross_amount?: number;
    /**
     * Amount in card not present transactions.
     * @type {number}
     * @memberof Credit1099
     */
    card_not_present_transaction?: number;
    /**
     * Merchant category of filer.
     * @type {string}
     * @memberof Credit1099
     */
    merchant_category_code?: string;
    /**
     * Number of payment transactions made.
     * @type {string}
     * @memberof Credit1099
     */
    number_of_payment_transactions?: string;
    /**
     * Amount reported for January.
     * @type {number}
     * @memberof Credit1099
     */
    january_amount?: number;
    /**
     * Amount reported for February.
     * @type {number}
     * @memberof Credit1099
     */
    february_amount?: number;
    /**
     * Amount reported for March.
     * @type {number}
     * @memberof Credit1099
     */
    march_amount?: number;
    /**
     * Amount reported for April.
     * @type {number}
     * @memberof Credit1099
     */
    april_amount?: number;
    /**
     * Amount reported for May.
     * @type {number}
     * @memberof Credit1099
     */
    may_amount?: number;
    /**
     * Amount reported for June.
     * @type {number}
     * @memberof Credit1099
     */
    june_amount?: number;
    /**
     * Amount reported for July.
     * @type {number}
     * @memberof Credit1099
     */
    july_amount?: number;
    /**
     * Amount reported for August.
     * @type {number}
     * @memberof Credit1099
     */
    august_amount?: number;
    /**
     * Amount reported for September.
     * @type {number}
     * @memberof Credit1099
     */
    september_amount?: number;
    /**
     * Amount reported for October.
     * @type {number}
     * @memberof Credit1099
     */
    october_amount?: number;
    /**
     * Amount reported for November.
     * @type {number}
     * @memberof Credit1099
     */
    november_amount?: number;
    /**
     * Amount reported for December.
     * @type {number}
     * @memberof Credit1099
     */
    december_amount?: number;
    /**
     * Primary state of business.
     * @type {string}
     * @memberof Credit1099
     */
    primary_state?: string;
    /**
     * Secondary state of business.
     * @type {string}
     * @memberof Credit1099
     */
    secondary_state?: string;
    /**
     * Primary state ID.
     * @type {string}
     * @memberof Credit1099
     */
    primary_state_id?: string;
    /**
     * Secondary state ID.
     * @type {string}
     * @memberof Credit1099
     */
    secondary_state_id?: string;
    /**
     * State income tax reported for primary state.
     * @type {number}
     * @memberof Credit1099
     */
    primary_state_income_tax?: number;
    /**
     * State income tax reported for secondary state.
     * @type {number}
     * @memberof Credit1099
     */
    secondary_state_income_tax?: number;
}

/**
 * Check if a given object implements the Credit1099 interface.
 */
export function instanceOfCredit1099(value: object): boolean {
    if (!('document_id' in value)) return false;
    return true;
}

export function Credit1099FromJSON(json: any): Credit1099 {
    return Credit1099FromJSONTyped(json, false);
}

export function Credit1099FromJSONTyped(json: any, ignoreDiscriminator: boolean): Credit1099 {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'document_id': json['document_id'],
        'document_metadata': json['document_metadata'] == null ? undefined : CreditDocumentMetadataFromJSON(json['document_metadata']),
        'form_1099_type': json['form_1099_type'] == null ? undefined : Form1099TypeFromJSON(json['form_1099_type']),
        'recipient': json['recipient'] == null ? undefined : Credit1099RecipientFromJSON(json['recipient']),
        'payer': json['payer'] == null ? undefined : Credit1099PayerFromJSON(json['payer']),
        'filer': json['filer'] == null ? undefined : Credit1099FilerFromJSON(json['filer']),
        'tax_year': json['tax_year'] == null ? undefined : json['tax_year'],
        'rents': json['rents'] == null ? undefined : json['rents'],
        'royalties': json['royalties'] == null ? undefined : json['royalties'],
        'other_income': json['other_income'] == null ? undefined : json['other_income'],
        'federal_income_tax_withheld': json['federal_income_tax_withheld'] == null ? undefined : json['federal_income_tax_withheld'],
        'fishing_boat_proceeds': json['fishing_boat_proceeds'] == null ? undefined : json['fishing_boat_proceeds'],
        'medical_and_healthcare_payments': json['medical_and_healthcare_payments'] == null ? undefined : json['medical_and_healthcare_payments'],
        'nonemployee_compensation': json['nonemployee_compensation'] == null ? undefined : json['nonemployee_compensation'],
        'substitute_payments_in_lieu_of_dividends_or_interest': json['substitute_payments_in_lieu_of_dividends_or_interest'] == null ? undefined : json['substitute_payments_in_lieu_of_dividends_or_interest'],
        'payer_made_direct_sales_of_5000_or_more_of_consumer_products_to_buyer': json['payer_made_direct_sales_of_5000_or_more_of_consumer_products_to_buyer'] == null ? undefined : json['payer_made_direct_sales_of_5000_or_more_of_consumer_products_to_buyer'],
        'crop_insurance_proceeds': json['crop_insurance_proceeds'] == null ? undefined : json['crop_insurance_proceeds'],
        'excess_golden_parachute_payments': json['excess_golden_parachute_payments'] == null ? undefined : json['excess_golden_parachute_payments'],
        'gross_proceeds_paid_to_an_attorney': json['gross_proceeds_paid_to_an_attorney'] == null ? undefined : json['gross_proceeds_paid_to_an_attorney'],
        'section_409a_deferrals': json['section_409a_deferrals'] == null ? undefined : json['section_409a_deferrals'],
        'section_409a_income': json['section_409a_income'] == null ? undefined : json['section_409a_income'],
        'state_tax_withheld': json['state_tax_withheld'] == null ? undefined : json['state_tax_withheld'],
        'state_tax_withheld_lower': json['state_tax_withheld_lower'] == null ? undefined : json['state_tax_withheld_lower'],
        'payer_state_number': json['payer_state_number'] == null ? undefined : json['payer_state_number'],
        'payer_state_number_lower': json['payer_state_number_lower'] == null ? undefined : json['payer_state_number_lower'],
        'state_income': json['state_income'] == null ? undefined : json['state_income'],
        'state_income_lower': json['state_income_lower'] == null ? undefined : json['state_income_lower'],
        'transactions_reported': json['transactions_reported'] == null ? undefined : json['transactions_reported'],
        'pse_name': json['pse_name'] == null ? undefined : json['pse_name'],
        'pse_telephone_number': json['pse_telephone_number'] == null ? undefined : json['pse_telephone_number'],
        'gross_amount': json['gross_amount'] == null ? undefined : json['gross_amount'],
        'card_not_present_transaction': json['card_not_present_transaction'] == null ? undefined : json['card_not_present_transaction'],
        'merchant_category_code': json['merchant_category_code'] == null ? undefined : json['merchant_category_code'],
        'number_of_payment_transactions': json['number_of_payment_transactions'] == null ? undefined : json['number_of_payment_transactions'],
        'january_amount': json['january_amount'] == null ? undefined : json['january_amount'],
        'february_amount': json['february_amount'] == null ? undefined : json['february_amount'],
        'march_amount': json['march_amount'] == null ? undefined : json['march_amount'],
        'april_amount': json['april_amount'] == null ? undefined : json['april_amount'],
        'may_amount': json['may_amount'] == null ? undefined : json['may_amount'],
        'june_amount': json['june_amount'] == null ? undefined : json['june_amount'],
        'july_amount': json['july_amount'] == null ? undefined : json['july_amount'],
        'august_amount': json['august_amount'] == null ? undefined : json['august_amount'],
        'september_amount': json['september_amount'] == null ? undefined : json['september_amount'],
        'october_amount': json['october_amount'] == null ? undefined : json['october_amount'],
        'november_amount': json['november_amount'] == null ? undefined : json['november_amount'],
        'december_amount': json['december_amount'] == null ? undefined : json['december_amount'],
        'primary_state': json['primary_state'] == null ? undefined : json['primary_state'],
        'secondary_state': json['secondary_state'] == null ? undefined : json['secondary_state'],
        'primary_state_id': json['primary_state_id'] == null ? undefined : json['primary_state_id'],
        'secondary_state_id': json['secondary_state_id'] == null ? undefined : json['secondary_state_id'],
        'primary_state_income_tax': json['primary_state_income_tax'] == null ? undefined : json['primary_state_income_tax'],
        'secondary_state_income_tax': json['secondary_state_income_tax'] == null ? undefined : json['secondary_state_income_tax'],
    };
}

export function Credit1099ToJSON(value?: Credit1099 | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'document_id': value['document_id'],
        'document_metadata': CreditDocumentMetadataToJSON(value['document_metadata']),
        'form_1099_type': Form1099TypeToJSON(value['form_1099_type']),
        'recipient': Credit1099RecipientToJSON(value['recipient']),
        'payer': Credit1099PayerToJSON(value['payer']),
        'filer': Credit1099FilerToJSON(value['filer']),
        'tax_year': value['tax_year'],
        'rents': value['rents'],
        'royalties': value['royalties'],
        'other_income': value['other_income'],
        'federal_income_tax_withheld': value['federal_income_tax_withheld'],
        'fishing_boat_proceeds': value['fishing_boat_proceeds'],
        'medical_and_healthcare_payments': value['medical_and_healthcare_payments'],
        'nonemployee_compensation': value['nonemployee_compensation'],
        'substitute_payments_in_lieu_of_dividends_or_interest': value['substitute_payments_in_lieu_of_dividends_or_interest'],
        'payer_made_direct_sales_of_5000_or_more_of_consumer_products_to_buyer': value['payer_made_direct_sales_of_5000_or_more_of_consumer_products_to_buyer'],
        'crop_insurance_proceeds': value['crop_insurance_proceeds'],
        'excess_golden_parachute_payments': value['excess_golden_parachute_payments'],
        'gross_proceeds_paid_to_an_attorney': value['gross_proceeds_paid_to_an_attorney'],
        'section_409a_deferrals': value['section_409a_deferrals'],
        'section_409a_income': value['section_409a_income'],
        'state_tax_withheld': value['state_tax_withheld'],
        'state_tax_withheld_lower': value['state_tax_withheld_lower'],
        'payer_state_number': value['payer_state_number'],
        'payer_state_number_lower': value['payer_state_number_lower'],
        'state_income': value['state_income'],
        'state_income_lower': value['state_income_lower'],
        'transactions_reported': value['transactions_reported'],
        'pse_name': value['pse_name'],
        'pse_telephone_number': value['pse_telephone_number'],
        'gross_amount': value['gross_amount'],
        'card_not_present_transaction': value['card_not_present_transaction'],
        'merchant_category_code': value['merchant_category_code'],
        'number_of_payment_transactions': value['number_of_payment_transactions'],
        'january_amount': value['january_amount'],
        'february_amount': value['february_amount'],
        'march_amount': value['march_amount'],
        'april_amount': value['april_amount'],
        'may_amount': value['may_amount'],
        'june_amount': value['june_amount'],
        'july_amount': value['july_amount'],
        'august_amount': value['august_amount'],
        'september_amount': value['september_amount'],
        'october_amount': value['october_amount'],
        'november_amount': value['november_amount'],
        'december_amount': value['december_amount'],
        'primary_state': value['primary_state'],
        'secondary_state': value['secondary_state'],
        'primary_state_id': value['primary_state_id'],
        'secondary_state_id': value['secondary_state_id'],
        'primary_state_income_tax': value['primary_state_income_tax'],
        'secondary_state_income_tax': value['secondary_state_income_tax'],
    };
}

