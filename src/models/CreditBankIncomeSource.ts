/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreditBankIncomeCategory } from './CreditBankIncomeCategory';
import {
    CreditBankIncomeCategoryFromJSON,
    CreditBankIncomeCategoryFromJSONTyped,
    CreditBankIncomeCategoryToJSON,
} from './CreditBankIncomeCategory';
import type { CreditBankIncomeHistoricalSummary } from './CreditBankIncomeHistoricalSummary';
import {
    CreditBankIncomeHistoricalSummaryFromJSON,
    CreditBankIncomeHistoricalSummaryFromJSONTyped,
    CreditBankIncomeHistoricalSummaryToJSON,
} from './CreditBankIncomeHistoricalSummary';
import type { CreditBankIncomePayFrequency } from './CreditBankIncomePayFrequency';
import {
    CreditBankIncomePayFrequencyFromJSON,
    CreditBankIncomePayFrequencyFromJSONTyped,
    CreditBankIncomePayFrequencyToJSON,
} from './CreditBankIncomePayFrequency';

/**
 * Detailed information for the income source.
 * @export
 * @interface CreditBankIncomeSource
 */
export interface CreditBankIncomeSource {
    /**
     * A unique identifier for an income source.
     * @type {string}
     * @memberof CreditBankIncomeSource
     */
    income_source_id?: string;
    /**
     * The most common name or original description for the underlying income transactions.
     * @type {string}
     * @memberof CreditBankIncomeSource
     */
    income_description?: string;
    /**
     * 
     * @type {CreditBankIncomeCategory}
     * @memberof CreditBankIncomeSource
     */
    income_category?: CreditBankIncomeCategory;
    /**
     * Plaid's unique identifier for the account.
     * @type {string}
     * @memberof CreditBankIncomeSource
     */
    account_id?: string;
    /**
     * Minimum of all dates within the specific income sources in the user's bank account for days requested by the client.
     * The date will be returned in an ISO 8601 format (YYYY-MM-DD).
     * @type {Date}
     * @memberof CreditBankIncomeSource
     */
    start_date?: Date;
    /**
     * Maximum of all dates within the specific income sources in the user’s bank account for days requested by the client.
     * The date will be returned in an ISO 8601 format (YYYY-MM-DD).
     * @type {Date}
     * @memberof CreditBankIncomeSource
     */
    end_date?: Date;
    /**
     * 
     * @type {CreditBankIncomePayFrequency}
     * @memberof CreditBankIncomeSource
     */
    pay_frequency?: CreditBankIncomePayFrequency;
    /**
     * Total amount of earnings in the user’s bank account for the specific income source for days requested by the client.
     * @type {number}
     * @memberof CreditBankIncomeSource
     */
    total_amount?: number;
    /**
     * Number of transactions for the income source within the start and end date.
     * @type {number}
     * @memberof CreditBankIncomeSource
     */
    transaction_count?: number;
    /**
     * 
     * @type {Array<CreditBankIncomeHistoricalSummary>}
     * @memberof CreditBankIncomeSource
     */
    historical_summary?: Array<CreditBankIncomeHistoricalSummary>;
}

/**
 * Check if a given object implements the CreditBankIncomeSource interface.
 */
export function instanceOfCreditBankIncomeSource(value: object): boolean {
    return true;
}

export function CreditBankIncomeSourceFromJSON(json: any): CreditBankIncomeSource {
    return CreditBankIncomeSourceFromJSONTyped(json, false);
}

export function CreditBankIncomeSourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreditBankIncomeSource {
    if (json == null) {
        return json;
    }
    return {
        
        'income_source_id': json['income_source_id'] == null ? undefined : json['income_source_id'],
        'income_description': json['income_description'] == null ? undefined : json['income_description'],
        'income_category': json['income_category'] == null ? undefined : CreditBankIncomeCategoryFromJSON(json['income_category']),
        'account_id': json['account_id'] == null ? undefined : json['account_id'],
        'start_date': json['start_date'] == null ? undefined : (new Date(json['start_date'])),
        'end_date': json['end_date'] == null ? undefined : (new Date(json['end_date'])),
        'pay_frequency': json['pay_frequency'] == null ? undefined : CreditBankIncomePayFrequencyFromJSON(json['pay_frequency']),
        'total_amount': json['total_amount'] == null ? undefined : json['total_amount'],
        'transaction_count': json['transaction_count'] == null ? undefined : json['transaction_count'],
        'historical_summary': json['historical_summary'] == null ? undefined : ((json['historical_summary'] as Array<any>).map(CreditBankIncomeHistoricalSummaryFromJSON)),
    };
}

export function CreditBankIncomeSourceToJSON(value?: CreditBankIncomeSource | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'income_source_id': value['income_source_id'],
        'income_description': value['income_description'],
        'income_category': CreditBankIncomeCategoryToJSON(value['income_category']),
        'account_id': value['account_id'],
        'start_date': value['start_date'] == null ? undefined : ((value['start_date']).toISOString().substring(0,10)),
        'end_date': value['end_date'] == null ? undefined : ((value['end_date']).toISOString().substring(0,10)),
        'pay_frequency': CreditBankIncomePayFrequencyToJSON(value['pay_frequency']),
        'total_amount': value['total_amount'],
        'transaction_count': value['transaction_count'],
        'historical_summary': value['historical_summary'] == null ? undefined : ((value['historical_summary'] as Array<any>).map(CreditBankIncomeHistoricalSummaryToJSON)),
    };
}

