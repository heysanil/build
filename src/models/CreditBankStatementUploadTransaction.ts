/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * An object containing data about a transaction appearing on a user-uploaded bank statement.
 * @export
 * @interface CreditBankStatementUploadTransaction
 */
export interface CreditBankStatementUploadTransaction {
    /**
     * The value of the transaction. A negative amount indicates that money moved into the account (such as a paycheck being deposited).
     * @type {number}
     * @memberof CreditBankStatementUploadTransaction
     */
    amount: number | null;
    /**
     * The date of when the transaction was made, in ISO 8601 format (YYYY-MM-DD).
     * @type {Date}
     * @memberof CreditBankStatementUploadTransaction
     */
    date: Date | null;
    /**
     * The raw description of the transaction as it appears on the bank statement.
     * @type {string}
     * @memberof CreditBankStatementUploadTransaction
     */
    original_description: string | null;
    /**
     * The unique id of the bank account that this transaction occurs in
     * @type {string}
     * @memberof CreditBankStatementUploadTransaction
     */
    account_id: string | null;
}

/**
 * Check if a given object implements the CreditBankStatementUploadTransaction interface.
 */
export function instanceOfCreditBankStatementUploadTransaction(value: object): boolean {
    if (!('amount' in value)) return false;
    if (!('date' in value)) return false;
    if (!('original_description' in value)) return false;
    if (!('account_id' in value)) return false;
    return true;
}

export function CreditBankStatementUploadTransactionFromJSON(json: any): CreditBankStatementUploadTransaction {
    return CreditBankStatementUploadTransactionFromJSONTyped(json, false);
}

export function CreditBankStatementUploadTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreditBankStatementUploadTransaction {
    if (json == null) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'date': (json['date'] == null ? null : new Date(json['date'])),
        'original_description': json['original_description'],
        'account_id': json['account_id'],
    };
}

export function CreditBankStatementUploadTransactionToJSON(value?: CreditBankStatementUploadTransaction | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'amount': value['amount'],
        'date': (value['date'] == null ? null : (value['date'] as any).toISOString().substring(0,10)),
        'original_description': value['original_description'],
        'account_id': value['account_id'],
    };
}

