/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreditDocumentMetadata } from './CreditDocumentMetadata';
import {
    CreditDocumentMetadataFromJSON,
    CreditDocumentMetadataFromJSONTyped,
    CreditDocumentMetadataToJSON,
} from './CreditDocumentMetadata';
import type { CreditPayStubEmployee } from './CreditPayStubEmployee';
import {
    CreditPayStubEmployeeFromJSON,
    CreditPayStubEmployeeFromJSONTyped,
    CreditPayStubEmployeeToJSON,
} from './CreditPayStubEmployee';
import type { CreditPayStubEmployer } from './CreditPayStubEmployer';
import {
    CreditPayStubEmployerFromJSON,
    CreditPayStubEmployerFromJSONTyped,
    CreditPayStubEmployerToJSON,
} from './CreditPayStubEmployer';
import type { W2Box12 } from './W2Box12';
import {
    W2Box12FromJSON,
    W2Box12FromJSONTyped,
    W2Box12ToJSON,
} from './W2Box12';
import type { W2StateAndLocalWages } from './W2StateAndLocalWages';
import {
    W2StateAndLocalWagesFromJSON,
    W2StateAndLocalWagesFromJSONTyped,
    W2StateAndLocalWagesToJSON,
} from './W2StateAndLocalWages';

/**
 * W2 is an object that represents income data taken from a W2 tax document.
 * @export
 * @interface CreditW2
 */
export interface CreditW2 {
    [key: string]: any | any;
    /**
     * 
     * @type {CreditDocumentMetadata}
     * @memberof CreditW2
     */
    document_metadata: CreditDocumentMetadata;
    /**
     * An identifier of the document referenced by the document metadata.
     * @type {string}
     * @memberof CreditW2
     */
    document_id: string;
    /**
     * 
     * @type {CreditPayStubEmployer}
     * @memberof CreditW2
     */
    employer: CreditPayStubEmployer;
    /**
     * 
     * @type {CreditPayStubEmployee}
     * @memberof CreditW2
     */
    employee: CreditPayStubEmployee;
    /**
     * The tax year of the W2 document.
     * @type {string}
     * @memberof CreditW2
     */
    tax_year: string | null;
    /**
     * An employee identification number or EIN.
     * @type {string}
     * @memberof CreditW2
     */
    employer_id_number: string | null;
    /**
     * Wages from tips and other compensation.
     * @type {string}
     * @memberof CreditW2
     */
    wages_tips_other_comp: string | null;
    /**
     * Federal income tax withheld for the tax year.
     * @type {string}
     * @memberof CreditW2
     */
    federal_income_tax_withheld: string | null;
    /**
     * Wages from social security.
     * @type {string}
     * @memberof CreditW2
     */
    social_security_wages: string | null;
    /**
     * Social security tax withheld for the tax year.
     * @type {string}
     * @memberof CreditW2
     */
    social_security_tax_withheld: string | null;
    /**
     * Wages and tips from medicare.
     * @type {string}
     * @memberof CreditW2
     */
    medicare_wages_and_tips: string | null;
    /**
     * Medicare tax withheld for the tax year.
     * @type {string}
     * @memberof CreditW2
     */
    medicare_tax_withheld: string | null;
    /**
     * Tips from social security.
     * @type {string}
     * @memberof CreditW2
     */
    social_security_tips: string | null;
    /**
     * Allocated tips.
     * @type {string}
     * @memberof CreditW2
     */
    allocated_tips: string | null;
    /**
     * Contents from box 9 on the W2.
     * @type {string}
     * @memberof CreditW2
     */
    box_9: string | null;
    /**
     * Dependent care benefits.
     * @type {string}
     * @memberof CreditW2
     */
    dependent_care_benefits: string | null;
    /**
     * Nonqualified plans.
     * @type {string}
     * @memberof CreditW2
     */
    nonqualified_plans: string | null;
    /**
     * 
     * @type {Array<W2Box12>}
     * @memberof CreditW2
     */
    box_12: Array<W2Box12>;
    /**
     * Statutory employee.
     * @type {string}
     * @memberof CreditW2
     */
    statutory_employee: string | null;
    /**
     * Retirement plan.
     * @type {string}
     * @memberof CreditW2
     */
    retirement_plan: string | null;
    /**
     * Third party sick pay.
     * @type {string}
     * @memberof CreditW2
     */
    third_party_sick_pay: string | null;
    /**
     * Other.
     * @type {string}
     * @memberof CreditW2
     */
    other: string | null;
    /**
     * 
     * @type {Array<W2StateAndLocalWages>}
     * @memberof CreditW2
     */
    state_and_local_wages: Array<W2StateAndLocalWages>;
}

/**
 * Check if a given object implements the CreditW2 interface.
 */
export function instanceOfCreditW2(value: object): boolean {
    if (!('document_metadata' in value)) return false;
    if (!('document_id' in value)) return false;
    if (!('employer' in value)) return false;
    if (!('employee' in value)) return false;
    if (!('tax_year' in value)) return false;
    if (!('employer_id_number' in value)) return false;
    if (!('wages_tips_other_comp' in value)) return false;
    if (!('federal_income_tax_withheld' in value)) return false;
    if (!('social_security_wages' in value)) return false;
    if (!('social_security_tax_withheld' in value)) return false;
    if (!('medicare_wages_and_tips' in value)) return false;
    if (!('medicare_tax_withheld' in value)) return false;
    if (!('social_security_tips' in value)) return false;
    if (!('allocated_tips' in value)) return false;
    if (!('box_9' in value)) return false;
    if (!('dependent_care_benefits' in value)) return false;
    if (!('nonqualified_plans' in value)) return false;
    if (!('box_12' in value)) return false;
    if (!('statutory_employee' in value)) return false;
    if (!('retirement_plan' in value)) return false;
    if (!('third_party_sick_pay' in value)) return false;
    if (!('other' in value)) return false;
    if (!('state_and_local_wages' in value)) return false;
    return true;
}

export function CreditW2FromJSON(json: any): CreditW2 {
    return CreditW2FromJSONTyped(json, false);
}

export function CreditW2FromJSONTyped(json: any, ignoreDiscriminator: boolean): CreditW2 {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'document_metadata': CreditDocumentMetadataFromJSON(json['document_metadata']),
        'document_id': json['document_id'],
        'employer': CreditPayStubEmployerFromJSON(json['employer']),
        'employee': CreditPayStubEmployeeFromJSON(json['employee']),
        'tax_year': json['tax_year'],
        'employer_id_number': json['employer_id_number'],
        'wages_tips_other_comp': json['wages_tips_other_comp'],
        'federal_income_tax_withheld': json['federal_income_tax_withheld'],
        'social_security_wages': json['social_security_wages'],
        'social_security_tax_withheld': json['social_security_tax_withheld'],
        'medicare_wages_and_tips': json['medicare_wages_and_tips'],
        'medicare_tax_withheld': json['medicare_tax_withheld'],
        'social_security_tips': json['social_security_tips'],
        'allocated_tips': json['allocated_tips'],
        'box_9': json['box_9'],
        'dependent_care_benefits': json['dependent_care_benefits'],
        'nonqualified_plans': json['nonqualified_plans'],
        'box_12': ((json['box_12'] as Array<any>).map(W2Box12FromJSON)),
        'statutory_employee': json['statutory_employee'],
        'retirement_plan': json['retirement_plan'],
        'third_party_sick_pay': json['third_party_sick_pay'],
        'other': json['other'],
        'state_and_local_wages': ((json['state_and_local_wages'] as Array<any>).map(W2StateAndLocalWagesFromJSON)),
    };
}

export function CreditW2ToJSON(value?: CreditW2 | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'document_metadata': CreditDocumentMetadataToJSON(value['document_metadata']),
        'document_id': value['document_id'],
        'employer': CreditPayStubEmployerToJSON(value['employer']),
        'employee': CreditPayStubEmployeeToJSON(value['employee']),
        'tax_year': value['tax_year'],
        'employer_id_number': value['employer_id_number'],
        'wages_tips_other_comp': value['wages_tips_other_comp'],
        'federal_income_tax_withheld': value['federal_income_tax_withheld'],
        'social_security_wages': value['social_security_wages'],
        'social_security_tax_withheld': value['social_security_tax_withheld'],
        'medicare_wages_and_tips': value['medicare_wages_and_tips'],
        'medicare_tax_withheld': value['medicare_tax_withheld'],
        'social_security_tips': value['social_security_tips'],
        'allocated_tips': value['allocated_tips'],
        'box_9': value['box_9'],
        'dependent_care_benefits': value['dependent_care_benefits'],
        'nonqualified_plans': value['nonqualified_plans'],
        'box_12': ((value['box_12'] as Array<any>).map(W2Box12ToJSON)),
        'statutory_employee': value['statutory_employee'],
        'retirement_plan': value['retirement_plan'],
        'third_party_sick_pay': value['third_party_sick_pay'],
        'other': value['other'],
        'state_and_local_wages': ((value['state_and_local_wages'] as Array<any>).map(W2StateAndLocalWagesToJSON)),
    };
}

