/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * DepositSwitchGetResponse defines the response schema for `/deposit_switch/get`
 * @export
 * @interface DepositSwitchGetResponse
 */
export interface DepositSwitchGetResponse {
    [key: string]: any | any;
    /**
     * The ID of the deposit switch.
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    deposit_switch_id: string;
    /**
     * The ID of the bank account the direct deposit was switched to.
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    target_account_id: string | null;
    /**
     * The ID of the Item the direct deposit was switched to.
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    target_item_id: string | null;
    /**
     * 
     * The state, or status, of the deposit switch.
     * 
     * - `initialized` – The deposit switch has been initialized with the user entering the information required to submit the deposit switch request.
     * 
     * - `processing` – The deposit switch request has been submitted and is being processed.
     * 
     * - `completed` – The user's employer has fulfilled the deposit switch request.
     * 
     * - `error` – There was an error processing the deposit switch request.
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    state: DepositSwitchGetResponseStateEnum;
    /**
     * The method used to make the deposit switch.
     * 
     * - `instant` – User instantly switched their direct deposit to a new or existing bank account by connecting their payroll or employer account.
     * 
     * - `mail` – User requested that Plaid contact their employer by mail to make the direct deposit switch.
     * 
     * - `pdf` – User generated a PDF or email to be sent to their employer with the information necessary to make the deposit switch.'
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    switch_method?: DepositSwitchGetResponseSwitchMethodEnum;
    /**
     * When `true`, user’s direct deposit goes to multiple banks. When false, user’s direct deposit only goes to the target account. Always `null` if the deposit switch has not been completed.
     * @type {boolean}
     * @memberof DepositSwitchGetResponse
     */
    account_has_multiple_allocations: boolean | null;
    /**
     * When `true`, the target account is allocated the remainder of direct deposit after all other allocations have been deducted. When `false`, user’s direct deposit is allocated as a percent or amount. Always `null` if the deposit switch has not been completed.
     * @type {boolean}
     * @memberof DepositSwitchGetResponse
     */
    is_allocated_remainder: boolean | null;
    /**
     * The percentage of direct deposit allocated to the target account. Always `null` if the target account is not allocated a percentage or if the deposit switch has not been completed or if `is_allocated_remainder` is true.
     * @type {number}
     * @memberof DepositSwitchGetResponse
     */
    percent_allocated: number | null;
    /**
     * The dollar amount of direct deposit allocated to the target account. Always `null` if the target account is not allocated an amount or if the deposit switch has not been completed.
     * @type {number}
     * @memberof DepositSwitchGetResponse
     */
    amount_allocated: number | null;
    /**
     * The name of the employer selected by the user. If the user did not select an employer, the value returned is `null`.
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    employer_name?: string;
    /**
     * The ID of the employer selected by the user. If the user did not select an employer, the value returned is `null`.
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    employer_id?: string;
    /**
     * The name of the institution selected by the user. If the user did not select an institution, the value returned is `null`.
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    institution_name?: string;
    /**
     * The ID of the institution selected by the user. If the user did not select an institution, the value returned is `null`.
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    institution_id?: string;
    /**
     * [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date the deposit switch was created.
     * 
     * @type {Date}
     * @memberof DepositSwitchGetResponse
     */
    date_created: Date;
    /**
     * [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date the deposit switch was completed. Always `null` if the deposit switch has not been completed.
     * 
     * @type {Date}
     * @memberof DepositSwitchGetResponse
     */
    date_completed: Date | null;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof DepositSwitchGetResponse
     */
    request_id: string;
}


/**
 * @export
 */
export const DepositSwitchGetResponseStateEnum = {
    Initialized: 'initialized',
    Processing: 'processing',
    Completed: 'completed',
    Error: 'error'
} as const;
export type DepositSwitchGetResponseStateEnum = typeof DepositSwitchGetResponseStateEnum[keyof typeof DepositSwitchGetResponseStateEnum];

/**
 * @export
 */
export const DepositSwitchGetResponseSwitchMethodEnum = {
    Instant: 'instant',
    Mail: 'mail',
    Pdf: 'pdf',
    Null: 'null'
} as const;
export type DepositSwitchGetResponseSwitchMethodEnum = typeof DepositSwitchGetResponseSwitchMethodEnum[keyof typeof DepositSwitchGetResponseSwitchMethodEnum];


/**
 * Check if a given object implements the DepositSwitchGetResponse interface.
 */
export function instanceOfDepositSwitchGetResponse(value: object): boolean {
    if (!('deposit_switch_id' in value)) return false;
    if (!('target_account_id' in value)) return false;
    if (!('target_item_id' in value)) return false;
    if (!('state' in value)) return false;
    if (!('account_has_multiple_allocations' in value)) return false;
    if (!('is_allocated_remainder' in value)) return false;
    if (!('percent_allocated' in value)) return false;
    if (!('amount_allocated' in value)) return false;
    if (!('date_created' in value)) return false;
    if (!('date_completed' in value)) return false;
    if (!('request_id' in value)) return false;
    return true;
}

export function DepositSwitchGetResponseFromJSON(json: any): DepositSwitchGetResponse {
    return DepositSwitchGetResponseFromJSONTyped(json, false);
}

export function DepositSwitchGetResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DepositSwitchGetResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'deposit_switch_id': json['deposit_switch_id'],
        'target_account_id': json['target_account_id'],
        'target_item_id': json['target_item_id'],
        'state': json['state'],
        'switch_method': json['switch_method'] == null ? undefined : json['switch_method'],
        'account_has_multiple_allocations': json['account_has_multiple_allocations'],
        'is_allocated_remainder': json['is_allocated_remainder'],
        'percent_allocated': json['percent_allocated'],
        'amount_allocated': json['amount_allocated'],
        'employer_name': json['employer_name'] == null ? undefined : json['employer_name'],
        'employer_id': json['employer_id'] == null ? undefined : json['employer_id'],
        'institution_name': json['institution_name'] == null ? undefined : json['institution_name'],
        'institution_id': json['institution_id'] == null ? undefined : json['institution_id'],
        'date_created': (new Date(json['date_created'])),
        'date_completed': (json['date_completed'] == null ? null : new Date(json['date_completed'])),
        'request_id': json['request_id'],
    };
}

export function DepositSwitchGetResponseToJSON(value?: DepositSwitchGetResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'deposit_switch_id': value['deposit_switch_id'],
        'target_account_id': value['target_account_id'],
        'target_item_id': value['target_item_id'],
        'state': value['state'],
        'switch_method': value['switch_method'],
        'account_has_multiple_allocations': value['account_has_multiple_allocations'],
        'is_allocated_remainder': value['is_allocated_remainder'],
        'percent_allocated': value['percent_allocated'],
        'amount_allocated': value['amount_allocated'],
        'employer_name': value['employer_name'],
        'employer_id': value['employer_id'],
        'institution_name': value['institution_name'],
        'institution_id': value['institution_id'],
        'date_created': ((value['date_created']).toISOString().substring(0,10)),
        'date_completed': (value['date_completed'] == null ? null : (value['date_completed'] as any).toISOString().substring(0,10)),
        'request_id': value['request_id'],
    };
}

