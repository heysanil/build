/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EarningsBreakdown } from './EarningsBreakdown';
import {
    EarningsBreakdownFromJSON,
    EarningsBreakdownFromJSONTyped,
    EarningsBreakdownToJSON,
} from './EarningsBreakdown';
import type { EarningsTotal } from './EarningsTotal';
import {
    EarningsTotalFromJSON,
    EarningsTotalFromJSONTyped,
    EarningsTotalToJSON,
} from './EarningsTotal';

/**
 * An object representing both a breakdown of earnings on a paystub and the total earnings.
 * @export
 * @interface Earnings
 */
export interface Earnings {
    [key: string]: any | any;
    /**
     * 
     * @type {Array<EarningsTotal>}
     * @memberof Earnings
     * @deprecated
     */
    subtotals?: Array<EarningsTotal>;
    /**
     * 
     * @type {Array<EarningsTotal>}
     * @memberof Earnings
     * @deprecated
     */
    totals?: Array<EarningsTotal>;
    /**
     * 
     * @type {Array<EarningsBreakdown>}
     * @memberof Earnings
     */
    breakdown?: Array<EarningsBreakdown>;
    /**
     * 
     * @type {EarningsTotal}
     * @memberof Earnings
     */
    total?: EarningsTotal;
}

/**
 * Check if a given object implements the Earnings interface.
 */
export function instanceOfEarnings(value: object): boolean {
    return true;
}

export function EarningsFromJSON(json: any): Earnings {
    return EarningsFromJSONTyped(json, false);
}

export function EarningsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Earnings {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'subtotals': json['subtotals'] == null ? undefined : ((json['subtotals'] as Array<any>).map(EarningsTotalFromJSON)),
        'totals': json['totals'] == null ? undefined : ((json['totals'] as Array<any>).map(EarningsTotalFromJSON)),
        'breakdown': json['breakdown'] == null ? undefined : ((json['breakdown'] as Array<any>).map(EarningsBreakdownFromJSON)),
        'total': json['total'] == null ? undefined : EarningsTotalFromJSON(json['total']),
    };
}

export function EarningsToJSON(value?: Earnings | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'subtotals': value['subtotals'] == null ? undefined : ((value['subtotals'] as Array<any>).map(EarningsTotalToJSON)),
        'totals': value['totals'] == null ? undefined : ((value['totals'] as Array<any>).map(EarningsTotalToJSON)),
        'breakdown': value['breakdown'] == null ? undefined : ((value['breakdown'] as Array<any>).map(EarningsBreakdownToJSON)),
        'total': EarningsTotalToJSON(value['total']),
    };
}

