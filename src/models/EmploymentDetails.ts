/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Pay } from './Pay';
import {
    PayFromJSON,
    PayFromJSONTyped,
    PayToJSON,
} from './Pay';

/**
 * An object representing employment details found on a paystub.
 * @export
 * @interface EmploymentDetails
 */
export interface EmploymentDetails {
    [key: string]: any | any;
    /**
     * 
     * @type {Pay}
     * @memberof EmploymentDetails
     * @deprecated
     */
    annual_salary?: Pay;
    /**
     * Date on which the employee was hired, in the YYYY-MM-DD format.
     * @type {Date}
     * @memberof EmploymentDetails
     */
    hire_date?: Date;
}

/**
 * Check if a given object implements the EmploymentDetails interface.
 */
export function instanceOfEmploymentDetails(value: object): boolean {
    return true;
}

export function EmploymentDetailsFromJSON(json: any): EmploymentDetails {
    return EmploymentDetailsFromJSONTyped(json, false);
}

export function EmploymentDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmploymentDetails {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'annual_salary': json['annual_salary'] == null ? undefined : PayFromJSON(json['annual_salary']),
        'hire_date': json['hire_date'] == null ? undefined : (new Date(json['hire_date'])),
    };
}

export function EmploymentDetailsToJSON(value?: EmploymentDetails | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'annual_salary': PayToJSON(value['annual_salary']),
        'hire_date': value['hire_date'] == null ? undefined : ((value['hire_date'] as any).toISOString().substring(0,10)),
    };
}

