/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IncidentUpdate } from './IncidentUpdate';
import {
    IncidentUpdateFromJSON,
    IncidentUpdateFromJSONTyped,
    IncidentUpdateToJSON,
} from './IncidentUpdate';

/**
 * A status health incident
 * @export
 * @interface HealthIncident
 */
export interface HealthIncident {
    [key: string]: any | any;
    /**
     * The start date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2020-10-30T15:26:48Z"`.
     * @type {Date}
     * @memberof HealthIncident
     */
    start_date: Date;
    /**
     * The end date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2020-10-30T15:26:48Z"`.
     * @type {Date}
     * @memberof HealthIncident
     */
    end_date?: Date;
    /**
     * The title of the incident
     * @type {string}
     * @memberof HealthIncident
     */
    title: string;
    /**
     * Updates on the health incident.
     * @type {Array<IncidentUpdate>}
     * @memberof HealthIncident
     */
    incident_updates: Array<IncidentUpdate>;
}

/**
 * Check if a given object implements the HealthIncident interface.
 */
export function instanceOfHealthIncident(value: object): boolean {
    if (!('start_date' in value)) return false;
    if (!('title' in value)) return false;
    if (!('incident_updates' in value)) return false;
    return true;
}

export function HealthIncidentFromJSON(json: any): HealthIncident {
    return HealthIncidentFromJSONTyped(json, false);
}

export function HealthIncidentFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthIncident {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'start_date': (new Date(json['start_date'])),
        'end_date': json['end_date'] == null ? undefined : (new Date(json['end_date'])),
        'title': json['title'],
        'incident_updates': ((json['incident_updates'] as Array<any>).map(IncidentUpdateFromJSON)),
    };
}

export function HealthIncidentToJSON(value?: HealthIncident | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'start_date': ((value['start_date']).toISOString()),
        'end_date': value['end_date'] == null ? undefined : ((value['end_date'] as any).toISOString()),
        'title': value['title'],
        'incident_updates': ((value['incident_updates'] as Array<any>).map(IncidentUpdateToJSON)),
    };
}

