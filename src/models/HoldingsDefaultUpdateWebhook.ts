/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlaidError } from './PlaidError';
import {
    PlaidErrorFromJSON,
    PlaidErrorFromJSONTyped,
    PlaidErrorToJSON,
} from './PlaidError';
import type { WebhookEnvironmentValues } from './WebhookEnvironmentValues';
import {
    WebhookEnvironmentValuesFromJSON,
    WebhookEnvironmentValuesFromJSONTyped,
    WebhookEnvironmentValuesToJSON,
} from './WebhookEnvironmentValues';

/**
 * Fired when new or updated holdings have been detected on an investment account. The webhook typically fires in response to any newly added holdings or price changes to existing holdings, most commonly after market close.
 * @export
 * @interface HoldingsDefaultUpdateWebhook
 */
export interface HoldingsDefaultUpdateWebhook {
    [key: string]: any | any;
    /**
     * `HOLDINGS`
     * @type {string}
     * @memberof HoldingsDefaultUpdateWebhook
     */
    webhook_type: string;
    /**
     * `DEFAULT_UPDATE`
     * @type {string}
     * @memberof HoldingsDefaultUpdateWebhook
     */
    webhook_code: string;
    /**
     * The `item_id` of the Item associated with this webhook, warning, or error
     * @type {string}
     * @memberof HoldingsDefaultUpdateWebhook
     */
    item_id: string;
    /**
     * 
     * @type {PlaidError}
     * @memberof HoldingsDefaultUpdateWebhook
     */
    error?: PlaidError;
    /**
     * The number of new holdings reported since the last time this webhook was fired.
     * @type {number}
     * @memberof HoldingsDefaultUpdateWebhook
     */
    new_holdings: number;
    /**
     * The number of updated holdings reported since the last time this webhook was fired.
     * @type {number}
     * @memberof HoldingsDefaultUpdateWebhook
     */
    updated_holdings: number;
    /**
     * 
     * @type {WebhookEnvironmentValues}
     * @memberof HoldingsDefaultUpdateWebhook
     */
    environment: WebhookEnvironmentValues;
}

/**
 * Check if a given object implements the HoldingsDefaultUpdateWebhook interface.
 */
export function instanceOfHoldingsDefaultUpdateWebhook(value: object): boolean {
    if (!('webhook_type' in value)) return false;
    if (!('webhook_code' in value)) return false;
    if (!('item_id' in value)) return false;
    if (!('new_holdings' in value)) return false;
    if (!('updated_holdings' in value)) return false;
    if (!('environment' in value)) return false;
    return true;
}

export function HoldingsDefaultUpdateWebhookFromJSON(json: any): HoldingsDefaultUpdateWebhook {
    return HoldingsDefaultUpdateWebhookFromJSONTyped(json, false);
}

export function HoldingsDefaultUpdateWebhookFromJSONTyped(json: any, ignoreDiscriminator: boolean): HoldingsDefaultUpdateWebhook {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'webhook_type': json['webhook_type'],
        'webhook_code': json['webhook_code'],
        'item_id': json['item_id'],
        'error': json['error'] == null ? undefined : PlaidErrorFromJSON(json['error']),
        'new_holdings': json['new_holdings'],
        'updated_holdings': json['updated_holdings'],
        'environment': WebhookEnvironmentValuesFromJSON(json['environment']),
    };
}

export function HoldingsDefaultUpdateWebhookToJSON(value?: HoldingsDefaultUpdateWebhook | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'webhook_type': value['webhook_type'],
        'webhook_code': value['webhook_code'],
        'item_id': value['item_id'],
        'error': PlaidErrorToJSON(value['error']),
        'new_holdings': value['new_holdings'],
        'updated_holdings': value['updated_holdings'],
        'environment': WebhookEnvironmentValuesToJSON(value['environment']),
    };
}

