/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AddressDataNullableNoRequiredFields } from './AddressDataNullableNoRequiredFields';
import {
    AddressDataNullableNoRequiredFieldsFromJSON,
    AddressDataNullableNoRequiredFieldsFromJSONTyped,
    AddressDataNullableNoRequiredFieldsToJSON,
} from './AddressDataNullableNoRequiredFields';

/**
 * The user's legal name, phone number, email address and address used to perform fuzzy match. If Financial Account Matching is enabled in the Identity Verification product, leave this field empty to automatically match against PII collected from the Identity Verification checks.
 * @export
 * @interface IdentityMatchUser
 */
export interface IdentityMatchUser {
    [key: string]: any | any;
    /**
     * The user's full legal name.
     * @type {string}
     * @memberof IdentityMatchUser
     */
    legal_name?: string;
    /**
     * The user's phone number, in E.164 format: +{countrycode}{number}. For example: "+14151234567". Phone numbers provided in other formats will be parsed on a best-effort basis.
     * @type {string}
     * @memberof IdentityMatchUser
     */
    phone_number?: string;
    /**
     * The user's email address.
     * @type {string}
     * @memberof IdentityMatchUser
     */
    email_address?: string;
    /**
     * 
     * @type {AddressDataNullableNoRequiredFields}
     * @memberof IdentityMatchUser
     */
    address?: AddressDataNullableNoRequiredFields;
}

/**
 * Check if a given object implements the IdentityMatchUser interface.
 */
export function instanceOfIdentityMatchUser(value: object): boolean {
    return true;
}

export function IdentityMatchUserFromJSON(json: any): IdentityMatchUser {
    return IdentityMatchUserFromJSONTyped(json, false);
}

export function IdentityMatchUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdentityMatchUser {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'legal_name': json['legal_name'] == null ? undefined : json['legal_name'],
        'phone_number': json['phone_number'] == null ? undefined : json['phone_number'],
        'email_address': json['email_address'] == null ? undefined : json['email_address'],
        'address': json['address'] == null ? undefined : AddressDataNullableNoRequiredFieldsFromJSON(json['address']),
    };
}

export function IdentityMatchUserToJSON(value?: IdentityMatchUser | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'legal_name': value['legal_name'],
        'phone_number': value['phone_number'],
        'email_address': value['email_address'],
        'address': AddressDataNullableNoRequiredFieldsToJSON(value['address']),
    };
}

