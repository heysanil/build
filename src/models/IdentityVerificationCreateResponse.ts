/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentaryVerification } from './DocumentaryVerification';
import {
    DocumentaryVerificationFromJSON,
    DocumentaryVerificationFromJSONTyped,
    DocumentaryVerificationToJSON,
} from './DocumentaryVerification';
import type { IdentityVerificationStatus } from './IdentityVerificationStatus';
import {
    IdentityVerificationStatusFromJSON,
    IdentityVerificationStatusFromJSONTyped,
    IdentityVerificationStatusToJSON,
} from './IdentityVerificationStatus';
import type { IdentityVerificationStepSummary } from './IdentityVerificationStepSummary';
import {
    IdentityVerificationStepSummaryFromJSON,
    IdentityVerificationStepSummaryFromJSONTyped,
    IdentityVerificationStepSummaryToJSON,
} from './IdentityVerificationStepSummary';
import type { IdentityVerificationTemplateReference } from './IdentityVerificationTemplateReference';
import {
    IdentityVerificationTemplateReferenceFromJSON,
    IdentityVerificationTemplateReferenceFromJSONTyped,
    IdentityVerificationTemplateReferenceToJSON,
} from './IdentityVerificationTemplateReference';
import type { IdentityVerificationUserData } from './IdentityVerificationUserData';
import {
    IdentityVerificationUserDataFromJSON,
    IdentityVerificationUserDataFromJSONTyped,
    IdentityVerificationUserDataToJSON,
} from './IdentityVerificationUserData';
import type { KYCCheckDetails } from './KYCCheckDetails';
import {
    KYCCheckDetailsFromJSON,
    KYCCheckDetailsFromJSONTyped,
    KYCCheckDetailsToJSON,
} from './KYCCheckDetails';
import type { RiskCheckDetails } from './RiskCheckDetails';
import {
    RiskCheckDetailsFromJSON,
    RiskCheckDetailsFromJSONTyped,
    RiskCheckDetailsToJSON,
} from './RiskCheckDetails';
import type { SelfieCheck } from './SelfieCheck';
import {
    SelfieCheckFromJSON,
    SelfieCheckFromJSONTyped,
    SelfieCheckToJSON,
} from './SelfieCheck';

/**
 * A identity verification attempt represents a customer's attempt to verify their identity, reflecting the required steps for completing the session, the results for each step, and information collected in the process.
 * @export
 * @interface IdentityVerificationCreateResponse
 */
export interface IdentityVerificationCreateResponse {
    [key: string]: any | any;
    /**
     * ID of the associated Identity Verification attempt.
     * @type {string}
     * @memberof IdentityVerificationCreateResponse
     */
    id: string;
    /**
     * A unique ID that identifies the end user in your system. This ID can also be used to associate user-specific data from other Plaid products. Financial Account Matching requires this field and the `/link/token/create` `client_user_id` to be consistent. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`.
     * @type {string}
     * @memberof IdentityVerificationCreateResponse
     */
    client_user_id: string;
    /**
     * An ISO8601 formatted timestamp.
     * @type {Date}
     * @memberof IdentityVerificationCreateResponse
     */
    created_at: Date;
    /**
     * An ISO8601 formatted timestamp.
     * @type {Date}
     * @memberof IdentityVerificationCreateResponse
     */
    completed_at: Date | null;
    /**
     * The ID for the Identity Verification preceding this session. This field will only be filled if the current Identity Verification is a retry of a previous attempt.
     * @type {string}
     * @memberof IdentityVerificationCreateResponse
     */
    previous_attempt_id: string | null;
    /**
     * A shareable URL that can be sent directly to the user to complete verification
     * @type {string}
     * @memberof IdentityVerificationCreateResponse
     */
    shareable_url: string | null;
    /**
     * 
     * @type {IdentityVerificationTemplateReference}
     * @memberof IdentityVerificationCreateResponse
     */
    template: IdentityVerificationTemplateReference;
    /**
     * 
     * @type {IdentityVerificationUserData}
     * @memberof IdentityVerificationCreateResponse
     */
    user: IdentityVerificationUserData;
    /**
     * 
     * @type {IdentityVerificationStatus}
     * @memberof IdentityVerificationCreateResponse
     */
    status: IdentityVerificationStatus;
    /**
     * 
     * @type {IdentityVerificationStepSummary}
     * @memberof IdentityVerificationCreateResponse
     */
    steps: IdentityVerificationStepSummary;
    /**
     * 
     * @type {DocumentaryVerification}
     * @memberof IdentityVerificationCreateResponse
     */
    documentary_verification: DocumentaryVerification | null;
    /**
     * 
     * @type {SelfieCheck}
     * @memberof IdentityVerificationCreateResponse
     */
    selfie_check: SelfieCheck | null;
    /**
     * 
     * @type {KYCCheckDetails}
     * @memberof IdentityVerificationCreateResponse
     */
    kyc_check: KYCCheckDetails | null;
    /**
     * 
     * @type {RiskCheckDetails}
     * @memberof IdentityVerificationCreateResponse
     */
    risk_check: RiskCheckDetails | null;
    /**
     * ID of the associated screening.
     * @type {string}
     * @memberof IdentityVerificationCreateResponse
     */
    watchlist_screening_id: string | null;
    /**
     * An ISO8601 formatted timestamp.
     * @type {Date}
     * @memberof IdentityVerificationCreateResponse
     */
    redacted_at: Date | null;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof IdentityVerificationCreateResponse
     */
    request_id: string;
}

/**
 * Check if a given object implements the IdentityVerificationCreateResponse interface.
 */
export function instanceOfIdentityVerificationCreateResponse(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('client_user_id' in value)) return false;
    if (!('created_at' in value)) return false;
    if (!('completed_at' in value)) return false;
    if (!('previous_attempt_id' in value)) return false;
    if (!('shareable_url' in value)) return false;
    if (!('template' in value)) return false;
    if (!('user' in value)) return false;
    if (!('status' in value)) return false;
    if (!('steps' in value)) return false;
    if (!('documentary_verification' in value)) return false;
    if (!('selfie_check' in value)) return false;
    if (!('kyc_check' in value)) return false;
    if (!('risk_check' in value)) return false;
    if (!('watchlist_screening_id' in value)) return false;
    if (!('redacted_at' in value)) return false;
    if (!('request_id' in value)) return false;
    return true;
}

export function IdentityVerificationCreateResponseFromJSON(json: any): IdentityVerificationCreateResponse {
    return IdentityVerificationCreateResponseFromJSONTyped(json, false);
}

export function IdentityVerificationCreateResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdentityVerificationCreateResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'id': json['id'],
        'client_user_id': json['client_user_id'],
        'created_at': (new Date(json['created_at'])),
        'completed_at': (json['completed_at'] == null ? null : new Date(json['completed_at'])),
        'previous_attempt_id': json['previous_attempt_id'],
        'shareable_url': json['shareable_url'],
        'template': IdentityVerificationTemplateReferenceFromJSON(json['template']),
        'user': IdentityVerificationUserDataFromJSON(json['user']),
        'status': IdentityVerificationStatusFromJSON(json['status']),
        'steps': IdentityVerificationStepSummaryFromJSON(json['steps']),
        'documentary_verification': DocumentaryVerificationFromJSON(json['documentary_verification']),
        'selfie_check': SelfieCheckFromJSON(json['selfie_check']),
        'kyc_check': KYCCheckDetailsFromJSON(json['kyc_check']),
        'risk_check': RiskCheckDetailsFromJSON(json['risk_check']),
        'watchlist_screening_id': json['watchlist_screening_id'],
        'redacted_at': (json['redacted_at'] == null ? null : new Date(json['redacted_at'])),
        'request_id': json['request_id'],
    };
}

export function IdentityVerificationCreateResponseToJSON(value?: IdentityVerificationCreateResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'id': value['id'],
        'client_user_id': value['client_user_id'],
        'created_at': ((value['created_at']).toISOString()),
        'completed_at': (value['completed_at'] == null ? null : (value['completed_at'] as any).toISOString()),
        'previous_attempt_id': value['previous_attempt_id'],
        'shareable_url': value['shareable_url'],
        'template': IdentityVerificationTemplateReferenceToJSON(value['template']),
        'user': IdentityVerificationUserDataToJSON(value['user']),
        'status': IdentityVerificationStatusToJSON(value['status']),
        'steps': IdentityVerificationStepSummaryToJSON(value['steps']),
        'documentary_verification': DocumentaryVerificationToJSON(value['documentary_verification']),
        'selfie_check': SelfieCheckToJSON(value['selfie_check']),
        'kyc_check': KYCCheckDetailsToJSON(value['kyc_check']),
        'risk_check': RiskCheckDetailsToJSON(value['risk_check']),
        'watchlist_screening_id': value['watchlist_screening_id'],
        'redacted_at': (value['redacted_at'] == null ? null : (value['redacted_at'] as any).toISOString()),
        'request_id': value['request_id'],
    };
}

