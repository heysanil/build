/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IdentityVerificationRequestUserName } from './IdentityVerificationRequestUserName';
import {
    IdentityVerificationRequestUserNameFromJSON,
    IdentityVerificationRequestUserNameFromJSONTyped,
    IdentityVerificationRequestUserNameToJSON,
} from './IdentityVerificationRequestUserName';
import type { UserAddress } from './UserAddress';
import {
    UserAddressFromJSON,
    UserAddressFromJSONTyped,
    UserAddressToJSON,
} from './UserAddress';
import type { UserIDNumber } from './UserIDNumber';
import {
    UserIDNumberFromJSON,
    UserIDNumberFromJSONTyped,
    UserIDNumberToJSON,
} from './UserIDNumber';

/**
 * User information collected outside of Link, most likely via your own onboarding process.
 * 
 * Each of the following identity fields are optional:
 * 
 * `email_address`
 * 
 * `phone_number`
 * 
 * `date_of_birth`
 * 
 * `name`
 * 
 * `address`
 * 
 * `id_number`
 * 
 * Specifically, these fields are optional in that they can either be fully provided (satisfying every required field in their subschema) or omitted from the request entirely by not providing the key or value.
 * Providing these fields via the API will result in Link skipping the data collection process for the associated user. All verification steps enabled in the associated Identity Verification Template will still be run. Verification steps will either be run immediately, or once the user completes the `accept_tos` step, depending on the value provided to the `gave_consent` field.
 * @export
 * @interface IdentityVerificationRequestUser
 */
export interface IdentityVerificationRequestUser {
    [key: string]: any | any;
    /**
     * A valid email address.
     * @type {string}
     * @memberof IdentityVerificationRequestUser
     */
    email_address?: string;
    /**
     * A phone number in E.164 format.
     * @type {string}
     * @memberof IdentityVerificationRequestUser
     */
    phone_number?: string;
    /**
     * A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
     * @type {Date}
     * @memberof IdentityVerificationRequestUser
     */
    date_of_birth?: Date;
    /**
     * 
     * @type {IdentityVerificationRequestUserName}
     * @memberof IdentityVerificationRequestUser
     */
    name?: IdentityVerificationRequestUserName;
    /**
     * 
     * @type {UserAddress}
     * @memberof IdentityVerificationRequestUser
     */
    address?: UserAddress;
    /**
     * 
     * @type {UserIDNumber}
     * @memberof IdentityVerificationRequestUser
     */
    id_number?: UserIDNumber;
}

/**
 * Check if a given object implements the IdentityVerificationRequestUser interface.
 */
export function instanceOfIdentityVerificationRequestUser(value: object): boolean {
    return true;
}

export function IdentityVerificationRequestUserFromJSON(json: any): IdentityVerificationRequestUser {
    return IdentityVerificationRequestUserFromJSONTyped(json, false);
}

export function IdentityVerificationRequestUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdentityVerificationRequestUser {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'email_address': json['email_address'] == null ? undefined : json['email_address'],
        'phone_number': json['phone_number'] == null ? undefined : json['phone_number'],
        'date_of_birth': json['date_of_birth'] == null ? undefined : (new Date(json['date_of_birth'])),
        'name': json['name'] == null ? undefined : IdentityVerificationRequestUserNameFromJSON(json['name']),
        'address': json['address'] == null ? undefined : UserAddressFromJSON(json['address']),
        'id_number': json['id_number'] == null ? undefined : UserIDNumberFromJSON(json['id_number']),
    };
}

export function IdentityVerificationRequestUserToJSON(value?: IdentityVerificationRequestUser | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'email_address': value['email_address'],
        'phone_number': value['phone_number'],
        'date_of_birth': value['date_of_birth'] == null ? undefined : ((value['date_of_birth']).toISOString().substring(0,10)),
        'name': IdentityVerificationRequestUserNameToJSON(value['name']),
        'address': UserAddressToJSON(value['address']),
        'id_number': UserIDNumberToJSON(value['id_number']),
    };
}

