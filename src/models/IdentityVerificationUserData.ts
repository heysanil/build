/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IdentityVerificationResponseUserName } from './IdentityVerificationResponseUserName';
import {
    IdentityVerificationResponseUserNameFromJSON,
    IdentityVerificationResponseUserNameFromJSONTyped,
    IdentityVerificationResponseUserNameToJSON,
} from './IdentityVerificationResponseUserName';
import type { IdentityVerificationUserAddress } from './IdentityVerificationUserAddress';
import {
    IdentityVerificationUserAddressFromJSON,
    IdentityVerificationUserAddressFromJSONTyped,
    IdentityVerificationUserAddressToJSON,
} from './IdentityVerificationUserAddress';
import type { UserIDNumber } from './UserIDNumber';
import {
    UserIDNumberFromJSON,
    UserIDNumberFromJSONTyped,
    UserIDNumberToJSON,
} from './UserIDNumber';

/**
 * The identity data that was either collected from the user or provided via API in order to perform an Identity Verification.
 * @export
 * @interface IdentityVerificationUserData
 */
export interface IdentityVerificationUserData {
    [key: string]: any | any;
    /**
     * A phone number in E.164 format.
     * @type {string}
     * @memberof IdentityVerificationUserData
     */
    phone_number?: string;
    /**
     * A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
     * @type {Date}
     * @memberof IdentityVerificationUserData
     */
    date_of_birth: Date | null;
    /**
     * An IPv4 or IPV6 address.
     * @type {string}
     * @memberof IdentityVerificationUserData
     */
    ip_address: string | null;
    /**
     * A valid email address.
     * @type {string}
     * @memberof IdentityVerificationUserData
     */
    email_address: string | null;
    /**
     * 
     * @type {IdentityVerificationResponseUserName}
     * @memberof IdentityVerificationUserData
     */
    name: IdentityVerificationResponseUserName | null;
    /**
     * 
     * @type {IdentityVerificationUserAddress}
     * @memberof IdentityVerificationUserData
     */
    address: IdentityVerificationUserAddress | null;
    /**
     * 
     * @type {UserIDNumber}
     * @memberof IdentityVerificationUserData
     */
    id_number: UserIDNumber | null;
}

/**
 * Check if a given object implements the IdentityVerificationUserData interface.
 */
export function instanceOfIdentityVerificationUserData(value: object): boolean {
    if (!('date_of_birth' in value)) return false;
    if (!('ip_address' in value)) return false;
    if (!('email_address' in value)) return false;
    if (!('name' in value)) return false;
    if (!('address' in value)) return false;
    if (!('id_number' in value)) return false;
    return true;
}

export function IdentityVerificationUserDataFromJSON(json: any): IdentityVerificationUserData {
    return IdentityVerificationUserDataFromJSONTyped(json, false);
}

export function IdentityVerificationUserDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdentityVerificationUserData {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'phone_number': json['phone_number'] == null ? undefined : json['phone_number'],
        'date_of_birth': (json['date_of_birth'] == null ? null : new Date(json['date_of_birth'])),
        'ip_address': json['ip_address'],
        'email_address': json['email_address'],
        'name': IdentityVerificationResponseUserNameFromJSON(json['name']),
        'address': IdentityVerificationUserAddressFromJSON(json['address']),
        'id_number': UserIDNumberFromJSON(json['id_number']),
    };
}

export function IdentityVerificationUserDataToJSON(value?: IdentityVerificationUserData | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'phone_number': value['phone_number'],
        'date_of_birth': (value['date_of_birth'] == null ? null : (value['date_of_birth'] as any).toISOString().substring(0,10)),
        'ip_address': value['ip_address'],
        'email_address': value['email_address'],
        'name': IdentityVerificationResponseUserNameToJSON(value['name']),
        'address': IdentityVerificationUserAddressToJSON(value['address']),
        'id_number': UserIDNumberToJSON(value['id_number']),
    };
}

