/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * An update on the health incident
 * @export
 * @interface IncidentUpdate
 */
export interface IncidentUpdate {
    [key: string]: any | any;
    /**
     * The content of the update.
     * @type {string}
     * @memberof IncidentUpdate
     */
    description?: string;
    /**
     * The status of the incident.
     * @type {string}
     * @memberof IncidentUpdate
     */
    status?: IncidentUpdateStatusEnum;
    /**
     * The date when the update was published, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `"2020-10-30T15:26:48Z"`.
     * @type {Date}
     * @memberof IncidentUpdate
     */
    updated_date?: Date;
}


/**
 * @export
 */
export const IncidentUpdateStatusEnum = {
    Investigating: 'INVESTIGATING',
    Identified: 'IDENTIFIED',
    Scheduled: 'SCHEDULED',
    Resolved: 'RESOLVED',
    Unknown: 'UNKNOWN'
} as const;
export type IncidentUpdateStatusEnum = typeof IncidentUpdateStatusEnum[keyof typeof IncidentUpdateStatusEnum];


/**
 * Check if a given object implements the IncidentUpdate interface.
 */
export function instanceOfIncidentUpdate(value: object): boolean {
    return true;
}

export function IncidentUpdateFromJSON(json: any): IncidentUpdate {
    return IncidentUpdateFromJSONTyped(json, false);
}

export function IncidentUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): IncidentUpdate {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'description': json['description'] == null ? undefined : json['description'],
        'status': json['status'] == null ? undefined : json['status'],
        'updated_date': json['updated_date'] == null ? undefined : (new Date(json['updated_date'])),
    };
}

export function IncidentUpdateToJSON(value?: IncidentUpdate | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'description': value['description'],
        'status': value['status'],
        'updated_date': value['updated_date'] == null ? undefined : ((value['updated_date']).toISOString()),
    };
}

