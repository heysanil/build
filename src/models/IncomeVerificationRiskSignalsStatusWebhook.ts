/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WebhookEnvironmentValues } from './WebhookEnvironmentValues';
import {
    WebhookEnvironmentValuesFromJSON,
    WebhookEnvironmentValuesFromJSONTyped,
    WebhookEnvironmentValuesToJSON,
} from './WebhookEnvironmentValues';

/**
 * Fired when risk signals have been processed for documents uploaded via Document Income. It will typically take a minute or two for this webhook to fire after the end user has uploaded their documents in the Document Income flow. Once this webhook has fired, `/credit/payroll_income/risk_signals/get` may then be called to determine whether the documents were successfully processed and to retrieve risk data.
 * @export
 * @interface IncomeVerificationRiskSignalsStatusWebhook
 */
export interface IncomeVerificationRiskSignalsStatusWebhook {
    [key: string]: any | any;
    /**
     * `"INCOME"`
     * @type {string}
     * @memberof IncomeVerificationRiskSignalsStatusWebhook
     */
    webhook_type: string;
    /**
     * `INCOME_VERIFICATION_RISK_SIGNALS`
     * @type {string}
     * @memberof IncomeVerificationRiskSignalsStatusWebhook
     */
    webhook_code: string;
    /**
     * The Item ID associated with the verification.
     * @type {string}
     * @memberof IncomeVerificationRiskSignalsStatusWebhook
     */
    item_id: string;
    /**
     * The Plaid `user_id` of the User associated with this webhook, warning, or error.
     * @type {string}
     * @memberof IncomeVerificationRiskSignalsStatusWebhook
     */
    user_id?: string;
    /**
     * `RISK_SIGNALS_PROCESSING_COMPLETE`: The income verification fraud detection processing has completed. If the user uploaded multiple documents, this webhook will fire when all documents have finished processing. Call the `/credit/payroll_income/risk_signals/get` endpoint to get all risk signal data.
     * @type {string}
     * @memberof IncomeVerificationRiskSignalsStatusWebhook
     */
    risk_signals_status?: string;
    /**
     * 
     * @type {WebhookEnvironmentValues}
     * @memberof IncomeVerificationRiskSignalsStatusWebhook
     */
    environment: WebhookEnvironmentValues;
}

/**
 * Check if a given object implements the IncomeVerificationRiskSignalsStatusWebhook interface.
 */
export function instanceOfIncomeVerificationRiskSignalsStatusWebhook(value: object): boolean {
    if (!('webhook_type' in value)) return false;
    if (!('webhook_code' in value)) return false;
    if (!('item_id' in value)) return false;
    if (!('environment' in value)) return false;
    return true;
}

export function IncomeVerificationRiskSignalsStatusWebhookFromJSON(json: any): IncomeVerificationRiskSignalsStatusWebhook {
    return IncomeVerificationRiskSignalsStatusWebhookFromJSONTyped(json, false);
}

export function IncomeVerificationRiskSignalsStatusWebhookFromJSONTyped(json: any, ignoreDiscriminator: boolean): IncomeVerificationRiskSignalsStatusWebhook {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'webhook_type': json['webhook_type'],
        'webhook_code': json['webhook_code'],
        'item_id': json['item_id'],
        'user_id': json['user_id'] == null ? undefined : json['user_id'],
        'risk_signals_status': json['risk_signals_status'] == null ? undefined : json['risk_signals_status'],
        'environment': WebhookEnvironmentValuesFromJSON(json['environment']),
    };
}

export function IncomeVerificationRiskSignalsStatusWebhookToJSON(value?: IncomeVerificationRiskSignalsStatusWebhook | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'webhook_type': value['webhook_type'],
        'webhook_code': value['webhook_code'],
        'item_id': value['item_id'],
        'user_id': value['user_id'],
        'risk_signals_status': value['risk_signals_status'],
        'environment': WebhookEnvironmentValuesToJSON(value['environment']),
    };
}

