/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CountryCode } from './CountryCode';
import {
    CountryCodeFromJSON,
    CountryCodeFromJSONTyped,
    CountryCodeToJSON,
} from './CountryCode';
import type { InstitutionsGetByIdRequestOptions } from './InstitutionsGetByIdRequestOptions';
import {
    InstitutionsGetByIdRequestOptionsFromJSON,
    InstitutionsGetByIdRequestOptionsFromJSONTyped,
    InstitutionsGetByIdRequestOptionsToJSON,
} from './InstitutionsGetByIdRequestOptions';

/**
 * InstitutionsGetByIdRequest defines the request schema for `/institutions/get_by_id`
 * @export
 * @interface InstitutionsGetByIdRequest
 */
export interface InstitutionsGetByIdRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * @type {string}
     * @memberof InstitutionsGetByIdRequest
     */
    client_id?: string;
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * @type {string}
     * @memberof InstitutionsGetByIdRequest
     */
    secret?: string;
    /**
     * The ID of the institution to get details about
     * @type {string}
     * @memberof InstitutionsGetByIdRequest
     */
    institution_id: string;
    /**
     * Specify which country or countries to include institutions from, using the ISO-3166-1 alpha-2 country code standard. In API versions 2019-05-29 and earlier, the `country_codes` parameter is an optional parameter within the `options` object and will default to `[US]` if it is not supplied.
     * 
     * @type {Array<CountryCode>}
     * @memberof InstitutionsGetByIdRequest
     */
    country_codes: Array<CountryCode>;
    /**
     * 
     * @type {InstitutionsGetByIdRequestOptions}
     * @memberof InstitutionsGetByIdRequest
     */
    options?: InstitutionsGetByIdRequestOptions;
}

/**
 * Check if a given object implements the InstitutionsGetByIdRequest interface.
 */
export function instanceOfInstitutionsGetByIdRequest(value: object): boolean {
    if (!('institution_id' in value)) return false;
    if (!('country_codes' in value)) return false;
    return true;
}

export function InstitutionsGetByIdRequestFromJSON(json: any): InstitutionsGetByIdRequest {
    return InstitutionsGetByIdRequestFromJSONTyped(json, false);
}

export function InstitutionsGetByIdRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstitutionsGetByIdRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'institution_id': json['institution_id'],
        'country_codes': ((json['country_codes'] as Array<any>).map(CountryCodeFromJSON)),
        'options': json['options'] == null ? undefined : InstitutionsGetByIdRequestOptionsFromJSON(json['options']),
    };
}

export function InstitutionsGetByIdRequestToJSON(value?: InstitutionsGetByIdRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'client_id': value['client_id'],
        'secret': value['secret'],
        'institution_id': value['institution_id'],
        'country_codes': ((value['country_codes'] as Array<any>).map(CountryCodeToJSON)),
        'options': InstitutionsGetByIdRequestOptionsToJSON(value['options']),
    };
}

