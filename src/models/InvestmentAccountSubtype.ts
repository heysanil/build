/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Valid account subtypes for investment accounts. For a list containing descriptions of each subtype, see [Account schemas](https://plaid.com/docs/api/accounts/#StandaloneAccountType-investment).
 * @export
 */
export const InvestmentAccountSubtype = {
    _529: '529',
    _401a: '401a',
    _401k: '401k',
    _403B: '403B',
    _457b: '457b',
    Brokerage: 'brokerage',
    CashIsa: 'cash isa',
    CryptoExchange: 'crypto exchange',
    EducationSavingsAccount: 'education savings account',
    FixedAnnuity: 'fixed annuity',
    Gic: 'gic',
    HealthReimbursementArrangement: 'health reimbursement arrangement',
    Hsa: 'hsa',
    Ira: 'ira',
    Isa: 'isa',
    Keogh: 'keogh',
    Lif: 'lif',
    LifeInsurance: 'life insurance',
    Lira: 'lira',
    Lrif: 'lrif',
    Lrsp: 'lrsp',
    MutualFund: 'mutual fund',
    NonCustodialWallet: 'non-custodial wallet',
    NonTaxableBrokerageAccount: 'non-taxable brokerage account',
    Other: 'other',
    OtherAnnuity: 'other annuity',
    OtherInsurance: 'other insurance',
    Pension: 'pension',
    Prif: 'prif',
    ProfitSharingPlan: 'profit sharing plan',
    Qshr: 'qshr',
    Rdsp: 'rdsp',
    Resp: 'resp',
    Retirement: 'retirement',
    Rlif: 'rlif',
    Roth: 'roth',
    Roth401k: 'roth 401k',
    Rrif: 'rrif',
    Rrsp: 'rrsp',
    Sarsep: 'sarsep',
    SepIra: 'sep ira',
    SimpleIra: 'simple ira',
    Sipp: 'sipp',
    StockPlan: 'stock plan',
    Tfsa: 'tfsa',
    Trust: 'trust',
    Ugma: 'ugma',
    Utma: 'utma',
    VariableAnnuity: 'variable annuity',
    All: 'all'
} as const;
export type InvestmentAccountSubtype = typeof InvestmentAccountSubtype[keyof typeof InvestmentAccountSubtype];


export function InvestmentAccountSubtypeFromJSON(json: any): InvestmentAccountSubtype {
    return InvestmentAccountSubtypeFromJSONTyped(json, false);
}

export function InvestmentAccountSubtypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvestmentAccountSubtype {
    return json as InvestmentAccountSubtype;
}

export function InvestmentAccountSubtypeToJSON(value?: InvestmentAccountSubtype | null): any {
    return value as any;
}

