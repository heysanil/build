/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SecurityOverride } from './SecurityOverride';
import {
    SecurityOverrideFromJSON,
    SecurityOverrideFromJSONTyped,
    SecurityOverrideToJSON,
} from './SecurityOverride';

/**
 * Specify the list of investments transactions on the account.
 * @export
 * @interface InvestmentsTransactionsOverride
 */
export interface InvestmentsTransactionsOverride {
    /**
     * Posting date for the transaction. Must be formatted as an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date.
     * @type {Date}
     * @memberof InvestmentsTransactionsOverride
     */
    date: Date;
    /**
     * The institution's description of the transaction.
     * @type {string}
     * @memberof InvestmentsTransactionsOverride
     */
    name: string;
    /**
     * The number of units of the security involved in this transaction. Must be positive if the type is a buy and negative if the type is a sell.
     * @type {number}
     * @memberof InvestmentsTransactionsOverride
     */
    quantity: number;
    /**
     * The price of the security at which this transaction occurred.
     * @type {number}
     * @memberof InvestmentsTransactionsOverride
     */
    price: number;
    /**
     * The combined value of all fees applied to this transaction.
     * @type {number}
     * @memberof InvestmentsTransactionsOverride
     */
    fees?: number;
    /**
     * The type of the investment transaction. Possible values are:
     * `buy`: Buying an investment
     * `sell`: Selling an investment
     * `cash`: Activity that modifies a cash position
     * `fee`: A fee on the account
     * `transfer`: Activity that modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer
     * @type {string}
     * @memberof InvestmentsTransactionsOverride
     */
    type: string;
    /**
     * Either a valid `iso_currency_code` or `unofficial_currency_code`
     * @type {string}
     * @memberof InvestmentsTransactionsOverride
     */
    currency: string;
    /**
     * 
     * @type {SecurityOverride}
     * @memberof InvestmentsTransactionsOverride
     */
    security?: SecurityOverride;
}

/**
 * Check if a given object implements the InvestmentsTransactionsOverride interface.
 */
export function instanceOfInvestmentsTransactionsOverride(value: object): boolean {
    if (!('date' in value)) return false;
    if (!('name' in value)) return false;
    if (!('quantity' in value)) return false;
    if (!('price' in value)) return false;
    if (!('type' in value)) return false;
    if (!('currency' in value)) return false;
    return true;
}

export function InvestmentsTransactionsOverrideFromJSON(json: any): InvestmentsTransactionsOverride {
    return InvestmentsTransactionsOverrideFromJSONTyped(json, false);
}

export function InvestmentsTransactionsOverrideFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvestmentsTransactionsOverride {
    if (json == null) {
        return json;
    }
    return {
        
        'date': (new Date(json['date'])),
        'name': json['name'],
        'quantity': json['quantity'],
        'price': json['price'],
        'fees': json['fees'] == null ? undefined : json['fees'],
        'type': json['type'],
        'currency': json['currency'],
        'security': json['security'] == null ? undefined : SecurityOverrideFromJSON(json['security']),
    };
}

export function InvestmentsTransactionsOverrideToJSON(value?: InvestmentsTransactionsOverride | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'date': ((value['date']).toISOString().substring(0,10)),
        'name': value['name'],
        'quantity': value['quantity'],
        'price': value['price'],
        'fees': value['fees'],
        'type': value['type'],
        'currency': value['currency'],
        'security': SecurityOverrideToJSON(value['security']),
    };
}

