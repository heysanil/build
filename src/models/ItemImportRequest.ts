/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ItemImportRequestOptions } from './ItemImportRequestOptions';
import {
    ItemImportRequestOptionsFromJSON,
    ItemImportRequestOptionsFromJSONTyped,
    ItemImportRequestOptionsToJSON,
} from './ItemImportRequestOptions';
import type { ItemImportRequestUserAuth } from './ItemImportRequestUserAuth';
import {
    ItemImportRequestUserAuthFromJSON,
    ItemImportRequestUserAuthFromJSONTyped,
    ItemImportRequestUserAuthToJSON,
} from './ItemImportRequestUserAuth';
import type { Products } from './Products';
import {
    ProductsFromJSON,
    ProductsFromJSONTyped,
    ProductsToJSON,
} from './Products';

/**
 * ItemImportRequest defines the request schema for `/item/import`
 * @export
 * @interface ItemImportRequest
 */
export interface ItemImportRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * @type {string}
     * @memberof ItemImportRequest
     */
    client_id?: string;
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * @type {string}
     * @memberof ItemImportRequest
     */
    secret?: string;
    /**
     * Array of product strings
     * @type {Array<Products>}
     * @memberof ItemImportRequest
     */
    products: Array<Products>;
    /**
     * 
     * @type {ItemImportRequestUserAuth}
     * @memberof ItemImportRequest
     */
    user_auth: ItemImportRequestUserAuth;
    /**
     * 
     * @type {ItemImportRequestOptions}
     * @memberof ItemImportRequest
     */
    options?: ItemImportRequestOptions;
}

/**
 * Check if a given object implements the ItemImportRequest interface.
 */
export function instanceOfItemImportRequest(value: object): boolean {
    if (!('products' in value)) return false;
    if (!('user_auth' in value)) return false;
    return true;
}

export function ItemImportRequestFromJSON(json: any): ItemImportRequest {
    return ItemImportRequestFromJSONTyped(json, false);
}

export function ItemImportRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemImportRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'products': ((json['products'] as Array<any>).map(ProductsFromJSON)),
        'user_auth': ItemImportRequestUserAuthFromJSON(json['user_auth']),
        'options': json['options'] == null ? undefined : ItemImportRequestOptionsFromJSON(json['options']),
    };
}

export function ItemImportRequestToJSON(value?: ItemImportRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'client_id': value['client_id'],
        'secret': value['secret'],
        'products': ((value['products'] as Array<any>).map(ProductsToJSON)),
        'user_auth': ItemImportRequestUserAuthToJSON(value['user_auth']),
        'options': ItemImportRequestOptionsToJSON(value['options']),
    };
}

