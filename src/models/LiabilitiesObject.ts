/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreditCardLiability } from './CreditCardLiability';
import {
    CreditCardLiabilityFromJSON,
    CreditCardLiabilityFromJSONTyped,
    CreditCardLiabilityToJSON,
} from './CreditCardLiability';
import type { MortgageLiability } from './MortgageLiability';
import {
    MortgageLiabilityFromJSON,
    MortgageLiabilityFromJSONTyped,
    MortgageLiabilityToJSON,
} from './MortgageLiability';
import type { StudentLoan } from './StudentLoan';
import {
    StudentLoanFromJSON,
    StudentLoanFromJSONTyped,
    StudentLoanToJSON,
} from './StudentLoan';

/**
 * An object containing liability accounts
 * @export
 * @interface LiabilitiesObject
 */
export interface LiabilitiesObject {
    [key: string]: any | any;
    /**
     * The credit accounts returned.
     * @type {Array<CreditCardLiability>}
     * @memberof LiabilitiesObject
     */
    credit: Array<CreditCardLiability> | null;
    /**
     * The mortgage accounts returned.
     * @type {Array<MortgageLiability>}
     * @memberof LiabilitiesObject
     */
    mortgage: Array<MortgageLiability> | null;
    /**
     * The student loan accounts returned.
     * @type {Array<StudentLoan>}
     * @memberof LiabilitiesObject
     */
    student: Array<StudentLoan> | null;
}

/**
 * Check if a given object implements the LiabilitiesObject interface.
 */
export function instanceOfLiabilitiesObject(value: object): boolean {
    if (!('credit' in value)) return false;
    if (!('mortgage' in value)) return false;
    if (!('student' in value)) return false;
    return true;
}

export function LiabilitiesObjectFromJSON(json: any): LiabilitiesObject {
    return LiabilitiesObjectFromJSONTyped(json, false);
}

export function LiabilitiesObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiabilitiesObject {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'credit': (json['credit'] == null ? null : (json['credit'] as Array<any>).map(CreditCardLiabilityFromJSON)),
        'mortgage': (json['mortgage'] == null ? null : (json['mortgage'] as Array<any>).map(MortgageLiabilityFromJSON)),
        'student': (json['student'] == null ? null : (json['student'] as Array<any>).map(StudentLoanFromJSON)),
    };
}

export function LiabilitiesObjectToJSON(value?: LiabilitiesObject | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'credit': (value['credit'] == null ? null : (value['credit'] as Array<any>).map(CreditCardLiabilityToJSON)),
        'mortgage': (value['mortgage'] == null ? null : (value['mortgage'] as Array<any>).map(MortgageLiabilityToJSON)),
        'student': (value['student'] == null ? null : (value['student'] as Array<any>).map(StudentLoanToJSON)),
    };
}

