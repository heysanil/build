/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LinkDeliveryCommunicationMethod } from './LinkDeliveryCommunicationMethod';
import {
    LinkDeliveryCommunicationMethodFromJSON,
    LinkDeliveryCommunicationMethodFromJSONTyped,
    LinkDeliveryCommunicationMethodToJSON,
} from './LinkDeliveryCommunicationMethod';

/**
 * Metadata related to the recipient. If the information required to populate this field is not available, leave it blank.
 * @export
 * @interface LinkDeliveryRecipient
 */
export interface LinkDeliveryRecipient {
    /**
     * The list of communication methods to send the Hosted Link session URL to. If delivery is not required, leave this field blank.
     * @type {Array<LinkDeliveryCommunicationMethod>}
     * @memberof LinkDeliveryRecipient
     */
    communication_methods?: Array<LinkDeliveryCommunicationMethod>;
    /**
     * First name of the recipient. Will be used in the body of the email / text (if configured). If this information is not available, leave this field blank.
     * @type {string}
     * @memberof LinkDeliveryRecipient
     */
    first_name?: string;
}

/**
 * Check if a given object implements the LinkDeliveryRecipient interface.
 */
export function instanceOfLinkDeliveryRecipient(value: object): boolean {
    return true;
}

export function LinkDeliveryRecipientFromJSON(json: any): LinkDeliveryRecipient {
    return LinkDeliveryRecipientFromJSONTyped(json, false);
}

export function LinkDeliveryRecipientFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkDeliveryRecipient {
    if (json == null) {
        return json;
    }
    return {
        
        'communication_methods': json['communication_methods'] == null ? undefined : ((json['communication_methods'] as Array<any>).map(LinkDeliveryCommunicationMethodFromJSON)),
        'first_name': json['first_name'] == null ? undefined : json['first_name'],
    };
}

export function LinkDeliveryRecipientToJSON(value?: LinkDeliveryRecipient | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'communication_methods': value['communication_methods'] == null ? undefined : ((value['communication_methods'] as Array<any>).map(LinkDeliveryCommunicationMethodToJSON)),
        'first_name': value['first_name'],
    };
}

