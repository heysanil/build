/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Metadata about an event that occured while the user was going through Link
 * @export
 * @interface LinkEventMetadata
 */
export interface LinkEventMetadata {
    [key: string]: any | any;
    /**
     * The error code that the user encountered. Emitted by `ERROR`, `EXIT`.
     * @type {string}
     * @memberof LinkEventMetadata
     */
    error_code?: string;
    /**
     * The error message that the user encountered. Emitted by: `ERROR`, `EXIT`.
     * @type {string}
     * @memberof LinkEventMetadata
     */
    error_message?: string;
    /**
     * The error type that the user encountered. Emitted by: `ERROR`, `EXIT`.
     * @type {string}
     * @memberof LinkEventMetadata
     */
    error_type?: string;
    /**
     * The status key indicates the point at which the user exited the Link flow. Emitted by: `EXIT`.
     * @type {string}
     * @memberof LinkEventMetadata
     */
    exit_status?: string;
    /**
     * The ID of the selected institution. Emitted by: all events.
     * @type {string}
     * @memberof LinkEventMetadata
     */
    institution_id?: string;
    /**
     * The name of the selected institution. Emitted by: all events.
     * @type {string}
     * @memberof LinkEventMetadata
     */
    institution_name?: string;
    /**
     * The query used to search for institutions. Emitted by: `SEARCH_INSTITUTION`.
     * @type {string}
     * @memberof LinkEventMetadata
     */
    institution_search_query?: string;
    /**
     * The request ID for the last request made by Link. This can be shared with Plaid Support to expedite investigation. Emitted by: all events.
     * @type {string}
     * @memberof LinkEventMetadata
     */
    request_id: string;
    /**
     * If set, the user has encountered one of the following MFA types: code, device, questions, selections. Emitted by: `SUBMIT_MFA` and `TRANSITION_VIEW` when view_name is `MFA`.
     * @type {string}
     * @memberof LinkEventMetadata
     */
    mfa_type?: string;
    /**
     * The name of the view that is being transitioned to. Emitted by: `TRANSITION_VIEW`.
     * @type {string}
     * @memberof LinkEventMetadata
     */
    view_name?: string;
    /**
     * Either the verification method for a matched institution selected by the user or the Auth Type Select flow type selected by the user. If selection is used to describe selected verification method, then possible values are `phoneotp` or `password`;  if selection is used to describe the selected Auth Type Select flow, then possible values are `flow_type_manual` or `flow_type_instant`. Emitted by: `MATCHED_SELECT_VERIFY_METHOD` and `SELECT_AUTH_TYPE`.
     * @type {string}
     * @memberof LinkEventMetadata
     */
    selection?: string;
    /**
     * The name of the selected brand.
     * @type {string}
     * @memberof LinkEventMetadata
     */
    brand_name?: string;
    /**
     * The reason this institution was matched, which will be either `returning_user` or `routing_number`. Emitted by: `MATCHED_SELECT_INSTITUTION`.
     * @type {string}
     * @memberof LinkEventMetadata
     */
    match_reason?: string;
    /**
     * The routing number submitted by user at the micro-deposits routing number pane. Emitted by `SUBMIT_ROUTING_NUMBER`.
     * @type {string}
     * @memberof LinkEventMetadata
     */
    routing_number?: string;
    /**
     * The account number mask extracted from the user-provided account number. If the user-inputted account number is four digits long, `account_number_mask` is empty. Emitted by `SUBMIT_ACCOUNT_NUMBER`.
     * @type {string}
     * @memberof LinkEventMetadata
     */
    account_number_mask?: string;
}

/**
 * Check if a given object implements the LinkEventMetadata interface.
 */
export function instanceOfLinkEventMetadata(value: object): boolean {
    if (!('request_id' in value)) return false;
    return true;
}

export function LinkEventMetadataFromJSON(json: any): LinkEventMetadata {
    return LinkEventMetadataFromJSONTyped(json, false);
}

export function LinkEventMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkEventMetadata {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'error_code': json['error_code'] == null ? undefined : json['error_code'],
        'error_message': json['error_message'] == null ? undefined : json['error_message'],
        'error_type': json['error_type'] == null ? undefined : json['error_type'],
        'exit_status': json['exit_status'] == null ? undefined : json['exit_status'],
        'institution_id': json['institution_id'] == null ? undefined : json['institution_id'],
        'institution_name': json['institution_name'] == null ? undefined : json['institution_name'],
        'institution_search_query': json['institution_search_query'] == null ? undefined : json['institution_search_query'],
        'request_id': json['request_id'],
        'mfa_type': json['mfa_type'] == null ? undefined : json['mfa_type'],
        'view_name': json['view_name'] == null ? undefined : json['view_name'],
        'selection': json['selection'] == null ? undefined : json['selection'],
        'brand_name': json['brand_name'] == null ? undefined : json['brand_name'],
        'match_reason': json['match_reason'] == null ? undefined : json['match_reason'],
        'routing_number': json['routing_number'] == null ? undefined : json['routing_number'],
        'account_number_mask': json['account_number_mask'] == null ? undefined : json['account_number_mask'],
    };
}

export function LinkEventMetadataToJSON(value?: LinkEventMetadata | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'error_code': value['error_code'],
        'error_message': value['error_message'],
        'error_type': value['error_type'],
        'exit_status': value['exit_status'],
        'institution_id': value['institution_id'],
        'institution_name': value['institution_name'],
        'institution_search_query': value['institution_search_query'],
        'request_id': value['request_id'],
        'mfa_type': value['mfa_type'],
        'view_name': value['view_name'],
        'selection': value['selection'],
        'brand_name': value['brand_name'],
        'match_reason': value['match_reason'],
        'routing_number': value['routing_number'],
        'account_number_mask': value['account_number_mask'],
    };
}

