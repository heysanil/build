/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LinkEvent } from './LinkEvent';
import {
    LinkEventFromJSON,
    LinkEventFromJSONTyped,
    LinkEventToJSON,
} from './LinkEvent';

/**
 * Contains a summary of the events from a link session
 * @export
 * @interface LinkEventsWebhook
 */
export interface LinkEventsWebhook {
    [key: string]: any | any;
    /**
     * `LINK`
     * @type {string}
     * @memberof LinkEventsWebhook
     */
    webhook_type: string;
    /**
     * `EVENTS`
     * @type {string}
     * @memberof LinkEventsWebhook
     */
    webhook_code: string;
    /**
     * The link events emitted during the link session
     * @type {Array<LinkEvent>}
     * @memberof LinkEventsWebhook
     */
    events: Array<LinkEvent>;
    /**
     * An identifier for the link session these events occurred in
     * @type {string}
     * @memberof LinkEventsWebhook
     */
    link_session_id: string;
    /**
     * The link token used to create the link session these events are from
     * @type {string}
     * @memberof LinkEventsWebhook
     */
    link_token: string;
}

/**
 * Check if a given object implements the LinkEventsWebhook interface.
 */
export function instanceOfLinkEventsWebhook(value: object): boolean {
    if (!('webhook_type' in value)) return false;
    if (!('webhook_code' in value)) return false;
    if (!('events' in value)) return false;
    if (!('link_session_id' in value)) return false;
    if (!('link_token' in value)) return false;
    return true;
}

export function LinkEventsWebhookFromJSON(json: any): LinkEventsWebhook {
    return LinkEventsWebhookFromJSONTyped(json, false);
}

export function LinkEventsWebhookFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkEventsWebhook {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'webhook_type': json['webhook_type'],
        'webhook_code': json['webhook_code'],
        'events': ((json['events'] as Array<any>).map(LinkEventFromJSON)),
        'link_session_id': json['link_session_id'],
        'link_token': json['link_token'],
    };
}

export function LinkEventsWebhookToJSON(value?: LinkEventsWebhook | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'webhook_type': value['webhook_type'],
        'webhook_code': value['webhook_code'],
        'events': ((value['events'] as Array<any>).map(LinkEventToJSON)),
        'link_session_id': value['link_session_id'],
        'link_token': value['link_token'],
    };
}

