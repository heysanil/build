/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ConsumerReportPermissiblePurpose } from './ConsumerReportPermissiblePurpose';
import {
    ConsumerReportPermissiblePurposeFromJSON,
    ConsumerReportPermissiblePurposeFromJSONTyped,
    ConsumerReportPermissiblePurposeToJSON,
} from './ConsumerReportPermissiblePurpose';
import type { CountryCode } from './CountryCode';
import {
    CountryCodeFromJSON,
    CountryCodeFromJSONTyped,
    CountryCodeToJSON,
} from './CountryCode';
import type { LinkTokenAccountFilters } from './LinkTokenAccountFilters';
import {
    LinkTokenAccountFiltersFromJSON,
    LinkTokenAccountFiltersFromJSONTyped,
    LinkTokenAccountFiltersToJSON,
} from './LinkTokenAccountFilters';
import type { LinkTokenCreateCardSwitch } from './LinkTokenCreateCardSwitch';
import {
    LinkTokenCreateCardSwitchFromJSON,
    LinkTokenCreateCardSwitchFromJSONTyped,
    LinkTokenCreateCardSwitchToJSON,
} from './LinkTokenCreateCardSwitch';
import type { LinkTokenCreateHostedLink } from './LinkTokenCreateHostedLink';
import {
    LinkTokenCreateHostedLinkFromJSON,
    LinkTokenCreateHostedLinkFromJSONTyped,
    LinkTokenCreateHostedLinkToJSON,
} from './LinkTokenCreateHostedLink';
import type { LinkTokenCreateIdentity } from './LinkTokenCreateIdentity';
import {
    LinkTokenCreateIdentityFromJSON,
    LinkTokenCreateIdentityFromJSONTyped,
    LinkTokenCreateIdentityToJSON,
} from './LinkTokenCreateIdentity';
import type { LinkTokenCreateInstitutionData } from './LinkTokenCreateInstitutionData';
import {
    LinkTokenCreateInstitutionDataFromJSON,
    LinkTokenCreateInstitutionDataFromJSONTyped,
    LinkTokenCreateInstitutionDataToJSON,
} from './LinkTokenCreateInstitutionData';
import type { LinkTokenCreateRequestAuth } from './LinkTokenCreateRequestAuth';
import {
    LinkTokenCreateRequestAuthFromJSON,
    LinkTokenCreateRequestAuthFromJSONTyped,
    LinkTokenCreateRequestAuthToJSON,
} from './LinkTokenCreateRequestAuth';
import type { LinkTokenCreateRequestBaseReport } from './LinkTokenCreateRequestBaseReport';
import {
    LinkTokenCreateRequestBaseReportFromJSON,
    LinkTokenCreateRequestBaseReportFromJSONTyped,
    LinkTokenCreateRequestBaseReportToJSON,
} from './LinkTokenCreateRequestBaseReport';
import type { LinkTokenCreateRequestCreditPartnerInsights } from './LinkTokenCreateRequestCreditPartnerInsights';
import {
    LinkTokenCreateRequestCreditPartnerInsightsFromJSON,
    LinkTokenCreateRequestCreditPartnerInsightsFromJSONTyped,
    LinkTokenCreateRequestCreditPartnerInsightsToJSON,
} from './LinkTokenCreateRequestCreditPartnerInsights';
import type { LinkTokenCreateRequestDepositSwitch } from './LinkTokenCreateRequestDepositSwitch';
import {
    LinkTokenCreateRequestDepositSwitchFromJSON,
    LinkTokenCreateRequestDepositSwitchFromJSONTyped,
    LinkTokenCreateRequestDepositSwitchToJSON,
} from './LinkTokenCreateRequestDepositSwitch';
import type { LinkTokenCreateRequestEmployment } from './LinkTokenCreateRequestEmployment';
import {
    LinkTokenCreateRequestEmploymentFromJSON,
    LinkTokenCreateRequestEmploymentFromJSONTyped,
    LinkTokenCreateRequestEmploymentToJSON,
} from './LinkTokenCreateRequestEmployment';
import type { LinkTokenCreateRequestIdentityVerification } from './LinkTokenCreateRequestIdentityVerification';
import {
    LinkTokenCreateRequestIdentityVerificationFromJSON,
    LinkTokenCreateRequestIdentityVerificationFromJSONTyped,
    LinkTokenCreateRequestIdentityVerificationToJSON,
} from './LinkTokenCreateRequestIdentityVerification';
import type { LinkTokenCreateRequestIncomeVerification } from './LinkTokenCreateRequestIncomeVerification';
import {
    LinkTokenCreateRequestIncomeVerificationFromJSON,
    LinkTokenCreateRequestIncomeVerificationFromJSONTyped,
    LinkTokenCreateRequestIncomeVerificationToJSON,
} from './LinkTokenCreateRequestIncomeVerification';
import type { LinkTokenCreateRequestPaymentInitiation } from './LinkTokenCreateRequestPaymentInitiation';
import {
    LinkTokenCreateRequestPaymentInitiationFromJSON,
    LinkTokenCreateRequestPaymentInitiationFromJSONTyped,
    LinkTokenCreateRequestPaymentInitiationToJSON,
} from './LinkTokenCreateRequestPaymentInitiation';
import type { LinkTokenCreateRequestStatements } from './LinkTokenCreateRequestStatements';
import {
    LinkTokenCreateRequestStatementsFromJSON,
    LinkTokenCreateRequestStatementsFromJSONTyped,
    LinkTokenCreateRequestStatementsToJSON,
} from './LinkTokenCreateRequestStatements';
import type { LinkTokenCreateRequestTransfer } from './LinkTokenCreateRequestTransfer';
import {
    LinkTokenCreateRequestTransferFromJSON,
    LinkTokenCreateRequestTransferFromJSONTyped,
    LinkTokenCreateRequestTransferToJSON,
} from './LinkTokenCreateRequestTransfer';
import type { LinkTokenCreateRequestUpdate } from './LinkTokenCreateRequestUpdate';
import {
    LinkTokenCreateRequestUpdateFromJSON,
    LinkTokenCreateRequestUpdateFromJSONTyped,
    LinkTokenCreateRequestUpdateToJSON,
} from './LinkTokenCreateRequestUpdate';
import type { LinkTokenCreateRequestUser } from './LinkTokenCreateRequestUser';
import {
    LinkTokenCreateRequestUserFromJSON,
    LinkTokenCreateRequestUserFromJSONTyped,
    LinkTokenCreateRequestUserToJSON,
} from './LinkTokenCreateRequestUser';
import type { LinkTokenEUConfig } from './LinkTokenEUConfig';
import {
    LinkTokenEUConfigFromJSON,
    LinkTokenEUConfigFromJSONTyped,
    LinkTokenEUConfigToJSON,
} from './LinkTokenEUConfig';
import type { LinkTokenInvestments } from './LinkTokenInvestments';
import {
    LinkTokenInvestmentsFromJSON,
    LinkTokenInvestmentsFromJSONTyped,
    LinkTokenInvestmentsToJSON,
} from './LinkTokenInvestments';
import type { LinkTokenInvestmentsAuth } from './LinkTokenInvestmentsAuth';
import {
    LinkTokenInvestmentsAuthFromJSON,
    LinkTokenInvestmentsAuthFromJSONTyped,
    LinkTokenInvestmentsAuthToJSON,
} from './LinkTokenInvestmentsAuth';
import type { LinkTokenTransactions } from './LinkTokenTransactions';
import {
    LinkTokenTransactionsFromJSON,
    LinkTokenTransactionsFromJSONTyped,
    LinkTokenTransactionsToJSON,
} from './LinkTokenTransactions';
import type { Products } from './Products';
import {
    ProductsFromJSON,
    ProductsFromJSONTyped,
    ProductsToJSON,
} from './Products';

/**
 * LinkTokenCreateRequest defines the request schema for `/link/token/create`
 * @export
 * @interface LinkTokenCreateRequest
 */
export interface LinkTokenCreateRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    client_id?: string;
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    secret?: string;
    /**
     * The name of your application, as it should be displayed in Link. Maximum length of 30 characters. If a value longer than 30 characters is provided, Link will display "This Application" instead.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    client_name: string;
    /**
     * The language that Link should be displayed in. When initializing with Identity Verification, this field is not used; for more details, see [Identity Verification supported languages](https://www.plaid.com/docs/identity-verification/#supported-languages).
     * 
     * Supported languages are:
     * - Danish (`'da'`)
     * - Dutch (`'nl'`)
     * - English (`'en'`)
     * - Estonian (`'et'`)
     * - French (`'fr'`)
     * - German (`'de'`)
     * - Italian (`'it'`)
     * - Latvian (`'lv'`)
     * - Lithuanian (`'lt'`)
     * - Norwegian (`'no'`)
     * - Polish (`'pl'`)
     * - Portuguese (`'pt'`)
     * - Romanian (`'ro'`)
     * - Spanish (`'es'`)
     * - Swedish (`'sv'`)
     * 
     * When using a Link customization, the language configured here must match the setting in the customization, or the customization will not be applied.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    language: string;
    /**
     * Specify an array of Plaid-supported country codes using the ISO-3166-1 alpha-2 country code standard. Institutions from all listed countries will be shown. For a complete mapping of supported products by country, see https://plaid.com/global/.
     * 
     * If using Identity Verification, `country_codes` should be set to the country where your company is based, not the country where your user is located. For all other products, `country_codes` represents the location of your user's financial institution.
     * 
     * If Link is launched with multiple country codes, only products that you are enabled for in all countries will be used by Link. Note that while all countries are enabled by default in Sandbox and Development, in Production only US and Canada are enabled by default. Access to European institutions requires additional compliance steps. To request access to European institutions in the Production environment, [file a product access Support ticket](https://dashboard.plaid.com/support/new/product-and-development/product-troubleshooting/request-product-access) via the Plaid dashboard. If you initialize with a European country code, your users will see the European consent panel during the Link flow.
     * 
     * If using a Link customization, make sure the country codes in the customization match those specified in `country_codes`, or the customization may not be applied.
     * 
     * If using the Auth features Instant Match, Same-day Micro-deposits, or Automated Micro-deposits, `country_codes` must be set to `['US']`.
     * @type {Array<CountryCode>}
     * @memberof LinkTokenCreateRequest
     */
    country_codes: Array<CountryCode>;
    /**
     * 
     * @type {LinkTokenCreateRequestUser}
     * @memberof LinkTokenCreateRequest
     */
    user: LinkTokenCreateRequestUser;
    /**
     * List of Plaid product(s) you wish to use. If launching Link in update mode, should be omitted (unless you are using update mode to add Income or Assets to an Item); required otherwise.
     * 
     * `balance` is *not* a valid value, the Balance product does not require explicit initialization and will automatically be initialized when any other product is initialized.
     * 
     * The products specified here will determine which institutions will be available to your users in Link. Only institutions that support *all* requested products can be selected; a if a user attempts to select an institution that does not support a listed product, a "Connectivity not supported" error message will appear in Link. To maximize the number of institutions available, initialize Link with the minimal product set required for your use case. Additional products can be included via the [`optional_products`](https://plaid.com/docs/api/tokens/#link-token-create-request-optional-products) or  [`required_if_supported_products`](https://plaid.com/docs/api/tokens/#link-token-create-request-required-if-supported-products) fields, or can be initialized by calling the endpoint after obtaining an access token. For details and exceptions, see [Choosing when to initialize products](https://plaid.com/docs/link/initializing-products/).
     * 
     * Note that, unless you have opted to disable Instant Match support, institutions that support Instant Match will also be shown in Link if `auth` is specified as a product, even though these institutions do not contain `auth` in their product array.
     * 
     * In Production, you will be billed for each product that you specify when initializing Link. Note that a product cannot be removed from an Item once the Item has been initialized with that product. To stop billing on an Item for subscription-based products, such as Liabilities, Investments, and Transactions, remove the Item via `/item/remove`.
     * @type {Array<Products>}
     * @memberof LinkTokenCreateRequest
     */
    products?: Array<Products>;
    /**
     * List of Plaid product(s) you wish to use only if the institution and account(s) selected by the user support the product. Institutions that do not support these products will still be shown in Link. The products will only be extracted and billed if the user selects an institution and account type that supports them.
     * 
     * There should be no overlap between this array and the `products`, `optional_products`, or `additional_consented_products` arrays. The `products` array must have at least one product.
     * 
     * For more details on using this feature, see [Required if Supported Products](https://www.plaid.com/docs/link/initializing-products/#required-if-supported-products).
     * @type {Array<Products>}
     * @memberof LinkTokenCreateRequest
     */
    required_if_supported_products?: Array<Products>;
    /**
     * List of Plaid product(s) that you may wish to use but that are not required for your use case. Plaid will attempt to fetch data for these products on a best-effort basis, and failure to support these products will not affect Item creation.
     * 
     * There should be no overlap between this array and the `products`, `required_if_supported_products`, or `additional_consented_products` arrays. The `products` array must have at least one product.
     * 
     * For more details on using this feature, see [Optional Products](https://www.plaid.com/docs/link/initializing-products/#optional-products).
     * @type {Array<Products>}
     * @memberof LinkTokenCreateRequest
     */
    optional_products?: Array<Products>;
    /**
     * (Beta) This field has no effect unless you are participating in the [Data Transparency](https://plaid.com/docs/link/data-transparency-messaging-migration-guide) beta program.
     * List of additional Plaid product(s) you wish to collect consent for. These products will not be billed until you start using them by calling the relevant endpoints.
     * 
     * `balance` is *not* a valid value, the Balance product does not require explicit initialization and will automatically have consent collected.
     * 
     * Institutions that do not support these products will still be shown in Link.
     * 
     * There should be no overlap between this array and the `products` or `required_if_supported_products` arrays.
     * @type {Array<Products>}
     * @memberof LinkTokenCreateRequest
     */
    additional_consented_products?: Array<Products>;
    /**
     * The destination URL to which any webhooks should be sent. Note that webhooks for Payment Initiation (e-wallet transactions only), Transfer, Bank Transfer (including Auth micro-deposit notification webhooks) and Identity Verification are configured via the Dashboard instead.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    webhook?: string;
    /**
     * The `access_token` associated with the Item to update or reference, used when updating, modifying, or accessing an existing `access_token`. Used when launching Link in update mode, when completing the Same-day (manual) Micro-deposit flow, or (optionally) when initializing Link for a returning user as part of the Transfer UI flow.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    access_token?: string;
    /**
     * A list of access tokens associated with the items to update in Link update mode for the Assets product. Using this instead of the `access_token` field allows the updating of multiple items at once. This feature is in closed beta, please contact your account manager for more info.
     * @type {Array<string>}
     * @memberof LinkTokenCreateRequest
     */
    access_tokens?: Array<string>;
    /**
     * The name of the Link customization from the Plaid Dashboard to be applied to Link. If not specified, the `default` customization will be used. When using a Link customization, the language in the customization must match the language selected via the `language` parameter, and the countries in the customization should match the country codes selected via `country_codes`.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    link_customization_name?: string;
    /**
     * A URI indicating the destination where a user should be forwarded after completing the Link flow; used to support OAuth authentication flows when launching Link in the browser or via a webview. The `redirect_uri` should not contain any query parameters. When used in Production or Development, must be an https URI. To specify any subdomain, use `*` as a wildcard character, e.g. `https://*.example.com/oauth.html`. Note that any redirect URI must also be added to the Allowed redirect URIs list in the [developer dashboard](https://dashboard.plaid.com/team/api). If initializing on Android, `android_package_name` must be specified instead and `redirect_uri` should be left blank. If using Hosted Link (beta) the `redirect_uri` must be set to `https://hosted.plaid.com/oauth/redirect`.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    redirect_uri?: string;
    /**
     * The name of your app's Android package. Required if using the `link_token` to initialize Link on Android. Any package name specified here must also be added to the Allowed Android package names setting on the [developer dashboard](https://dashboard.plaid.com/team/api). When creating a `link_token` for initializing Link on other platforms, `android_package_name` must be left blank and `redirect_uri` should be used instead.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    android_package_name?: string;
    /**
     * 
     * @type {LinkTokenCreateInstitutionData}
     * @memberof LinkTokenCreateRequest
     */
    institution_data?: LinkTokenCreateInstitutionData;
    /**
     * 
     * @type {LinkTokenCreateCardSwitch}
     * @memberof LinkTokenCreateRequest
     */
    card_switch?: LinkTokenCreateCardSwitch;
    /**
     * 
     * @type {LinkTokenAccountFilters}
     * @memberof LinkTokenCreateRequest
     */
    account_filters?: LinkTokenAccountFilters;
    /**
     * 
     * @type {LinkTokenEUConfig}
     * @memberof LinkTokenCreateRequest
     */
    eu_config?: LinkTokenEUConfig;
    /**
     * Used for certain Europe-only configurations, as well as certain legacy use cases in other regions.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    institution_id?: string;
    /**
     * 
     * @type {LinkTokenCreateRequestPaymentInitiation}
     * @memberof LinkTokenCreateRequest
     */
    payment_initiation?: LinkTokenCreateRequestPaymentInitiation;
    /**
     * 
     * @type {LinkTokenCreateRequestDepositSwitch}
     * @memberof LinkTokenCreateRequest
     */
    deposit_switch?: LinkTokenCreateRequestDepositSwitch;
    /**
     * 
     * @type {LinkTokenCreateRequestEmployment}
     * @memberof LinkTokenCreateRequest
     */
    employment?: LinkTokenCreateRequestEmployment;
    /**
     * 
     * @type {LinkTokenCreateRequestIncomeVerification}
     * @memberof LinkTokenCreateRequest
     */
    income_verification?: LinkTokenCreateRequestIncomeVerification;
    /**
     * 
     * @type {LinkTokenCreateRequestBaseReport}
     * @memberof LinkTokenCreateRequest
     */
    base_report?: LinkTokenCreateRequestBaseReport;
    /**
     * 
     * @type {LinkTokenCreateRequestCreditPartnerInsights}
     * @memberof LinkTokenCreateRequest
     */
    credit_partner_insights?: LinkTokenCreateRequestCreditPartnerInsights;
    /**
     * 
     * @type {ConsumerReportPermissiblePurpose}
     * @memberof LinkTokenCreateRequest
     */
    consumer_report_permissible_purpose?: ConsumerReportPermissiblePurpose;
    /**
     * 
     * @type {LinkTokenCreateRequestAuth}
     * @memberof LinkTokenCreateRequest
     */
    auth?: LinkTokenCreateRequestAuth;
    /**
     * 
     * @type {LinkTokenCreateRequestTransfer}
     * @memberof LinkTokenCreateRequest
     */
    transfer?: LinkTokenCreateRequestTransfer;
    /**
     * 
     * @type {LinkTokenCreateRequestUpdate}
     * @memberof LinkTokenCreateRequest
     */
    update?: LinkTokenCreateRequestUpdate;
    /**
     * 
     * @type {LinkTokenCreateRequestIdentityVerification}
     * @memberof LinkTokenCreateRequest
     */
    identity_verification?: LinkTokenCreateRequestIdentityVerification;
    /**
     * 
     * @type {LinkTokenCreateRequestStatements}
     * @memberof LinkTokenCreateRequest
     */
    statements?: LinkTokenCreateRequestStatements;
    /**
     * A user token generated using `/user/create`. Any Item created during the Link session will be associated with the user.
     * @type {string}
     * @memberof LinkTokenCreateRequest
     */
    user_token?: string;
    /**
     * 
     * @type {LinkTokenInvestments}
     * @memberof LinkTokenCreateRequest
     */
    investments?: LinkTokenInvestments;
    /**
     * 
     * @type {LinkTokenInvestmentsAuth}
     * @memberof LinkTokenCreateRequest
     */
    investments_auth?: LinkTokenInvestmentsAuth;
    /**
     * 
     * @type {LinkTokenCreateHostedLink}
     * @memberof LinkTokenCreateRequest
     */
    hosted_link?: LinkTokenCreateHostedLink;
    /**
     * 
     * @type {LinkTokenTransactions}
     * @memberof LinkTokenCreateRequest
     */
    transactions?: LinkTokenTransactions;
    /**
     * If `true`, request a CRA connection. Defaults to `false`.
     * @type {boolean}
     * @memberof LinkTokenCreateRequest
     */
    cra_enabled?: boolean;
    /**
     * 
     * @type {LinkTokenCreateIdentity}
     * @memberof LinkTokenCreateRequest
     */
    identity?: LinkTokenCreateIdentity;
}

/**
 * Check if a given object implements the LinkTokenCreateRequest interface.
 */
export function instanceOfLinkTokenCreateRequest(value: object): boolean {
    if (!('client_name' in value)) return false;
    if (!('language' in value)) return false;
    if (!('country_codes' in value)) return false;
    if (!('user' in value)) return false;
    return true;
}

export function LinkTokenCreateRequestFromJSON(json: any): LinkTokenCreateRequest {
    return LinkTokenCreateRequestFromJSONTyped(json, false);
}

export function LinkTokenCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkTokenCreateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'client_name': json['client_name'],
        'language': json['language'],
        'country_codes': ((json['country_codes'] as Array<any>).map(CountryCodeFromJSON)),
        'user': LinkTokenCreateRequestUserFromJSON(json['user']),
        'products': json['products'] == null ? undefined : ((json['products'] as Array<any>).map(ProductsFromJSON)),
        'required_if_supported_products': json['required_if_supported_products'] == null ? undefined : ((json['required_if_supported_products'] as Array<any>).map(ProductsFromJSON)),
        'optional_products': json['optional_products'] == null ? undefined : ((json['optional_products'] as Array<any>).map(ProductsFromJSON)),
        'additional_consented_products': json['additional_consented_products'] == null ? undefined : ((json['additional_consented_products'] as Array<any>).map(ProductsFromJSON)),
        'webhook': json['webhook'] == null ? undefined : json['webhook'],
        'access_token': json['access_token'] == null ? undefined : json['access_token'],
        'access_tokens': json['access_tokens'] == null ? undefined : json['access_tokens'],
        'link_customization_name': json['link_customization_name'] == null ? undefined : json['link_customization_name'],
        'redirect_uri': json['redirect_uri'] == null ? undefined : json['redirect_uri'],
        'android_package_name': json['android_package_name'] == null ? undefined : json['android_package_name'],
        'institution_data': json['institution_data'] == null ? undefined : LinkTokenCreateInstitutionDataFromJSON(json['institution_data']),
        'card_switch': json['card_switch'] == null ? undefined : LinkTokenCreateCardSwitchFromJSON(json['card_switch']),
        'account_filters': json['account_filters'] == null ? undefined : LinkTokenAccountFiltersFromJSON(json['account_filters']),
        'eu_config': json['eu_config'] == null ? undefined : LinkTokenEUConfigFromJSON(json['eu_config']),
        'institution_id': json['institution_id'] == null ? undefined : json['institution_id'],
        'payment_initiation': json['payment_initiation'] == null ? undefined : LinkTokenCreateRequestPaymentInitiationFromJSON(json['payment_initiation']),
        'deposit_switch': json['deposit_switch'] == null ? undefined : LinkTokenCreateRequestDepositSwitchFromJSON(json['deposit_switch']),
        'employment': json['employment'] == null ? undefined : LinkTokenCreateRequestEmploymentFromJSON(json['employment']),
        'income_verification': json['income_verification'] == null ? undefined : LinkTokenCreateRequestIncomeVerificationFromJSON(json['income_verification']),
        'base_report': json['base_report'] == null ? undefined : LinkTokenCreateRequestBaseReportFromJSON(json['base_report']),
        'credit_partner_insights': json['credit_partner_insights'] == null ? undefined : LinkTokenCreateRequestCreditPartnerInsightsFromJSON(json['credit_partner_insights']),
        'consumer_report_permissible_purpose': json['consumer_report_permissible_purpose'] == null ? undefined : ConsumerReportPermissiblePurposeFromJSON(json['consumer_report_permissible_purpose']),
        'auth': json['auth'] == null ? undefined : LinkTokenCreateRequestAuthFromJSON(json['auth']),
        'transfer': json['transfer'] == null ? undefined : LinkTokenCreateRequestTransferFromJSON(json['transfer']),
        'update': json['update'] == null ? undefined : LinkTokenCreateRequestUpdateFromJSON(json['update']),
        'identity_verification': json['identity_verification'] == null ? undefined : LinkTokenCreateRequestIdentityVerificationFromJSON(json['identity_verification']),
        'statements': json['statements'] == null ? undefined : LinkTokenCreateRequestStatementsFromJSON(json['statements']),
        'user_token': json['user_token'] == null ? undefined : json['user_token'],
        'investments': json['investments'] == null ? undefined : LinkTokenInvestmentsFromJSON(json['investments']),
        'investments_auth': json['investments_auth'] == null ? undefined : LinkTokenInvestmentsAuthFromJSON(json['investments_auth']),
        'hosted_link': json['hosted_link'] == null ? undefined : LinkTokenCreateHostedLinkFromJSON(json['hosted_link']),
        'transactions': json['transactions'] == null ? undefined : LinkTokenTransactionsFromJSON(json['transactions']),
        'cra_enabled': json['cra_enabled'] == null ? undefined : json['cra_enabled'],
        'identity': json['identity'] == null ? undefined : LinkTokenCreateIdentityFromJSON(json['identity']),
    };
}

export function LinkTokenCreateRequestToJSON(value?: LinkTokenCreateRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'client_id': value['client_id'],
        'secret': value['secret'],
        'client_name': value['client_name'],
        'language': value['language'],
        'country_codes': ((value['country_codes'] as Array<any>).map(CountryCodeToJSON)),
        'user': LinkTokenCreateRequestUserToJSON(value['user']),
        'products': value['products'] == null ? undefined : ((value['products'] as Array<any>).map(ProductsToJSON)),
        'required_if_supported_products': value['required_if_supported_products'] == null ? undefined : ((value['required_if_supported_products'] as Array<any>).map(ProductsToJSON)),
        'optional_products': value['optional_products'] == null ? undefined : ((value['optional_products'] as Array<any>).map(ProductsToJSON)),
        'additional_consented_products': value['additional_consented_products'] == null ? undefined : ((value['additional_consented_products'] as Array<any>).map(ProductsToJSON)),
        'webhook': value['webhook'],
        'access_token': value['access_token'],
        'access_tokens': value['access_tokens'],
        'link_customization_name': value['link_customization_name'],
        'redirect_uri': value['redirect_uri'],
        'android_package_name': value['android_package_name'],
        'institution_data': LinkTokenCreateInstitutionDataToJSON(value['institution_data']),
        'card_switch': LinkTokenCreateCardSwitchToJSON(value['card_switch']),
        'account_filters': LinkTokenAccountFiltersToJSON(value['account_filters']),
        'eu_config': LinkTokenEUConfigToJSON(value['eu_config']),
        'institution_id': value['institution_id'],
        'payment_initiation': LinkTokenCreateRequestPaymentInitiationToJSON(value['payment_initiation']),
        'deposit_switch': LinkTokenCreateRequestDepositSwitchToJSON(value['deposit_switch']),
        'employment': LinkTokenCreateRequestEmploymentToJSON(value['employment']),
        'income_verification': LinkTokenCreateRequestIncomeVerificationToJSON(value['income_verification']),
        'base_report': LinkTokenCreateRequestBaseReportToJSON(value['base_report']),
        'credit_partner_insights': LinkTokenCreateRequestCreditPartnerInsightsToJSON(value['credit_partner_insights']),
        'consumer_report_permissible_purpose': ConsumerReportPermissiblePurposeToJSON(value['consumer_report_permissible_purpose']),
        'auth': LinkTokenCreateRequestAuthToJSON(value['auth']),
        'transfer': LinkTokenCreateRequestTransferToJSON(value['transfer']),
        'update': LinkTokenCreateRequestUpdateToJSON(value['update']),
        'identity_verification': LinkTokenCreateRequestIdentityVerificationToJSON(value['identity_verification']),
        'statements': LinkTokenCreateRequestStatementsToJSON(value['statements']),
        'user_token': value['user_token'],
        'investments': LinkTokenInvestmentsToJSON(value['investments']),
        'investments_auth': LinkTokenInvestmentsAuthToJSON(value['investments_auth']),
        'hosted_link': LinkTokenCreateHostedLinkToJSON(value['hosted_link']),
        'transactions': LinkTokenTransactionsToJSON(value['transactions']),
        'cra_enabled': value['cra_enabled'],
        'identity': LinkTokenCreateIdentityToJSON(value['identity']),
    };
}

