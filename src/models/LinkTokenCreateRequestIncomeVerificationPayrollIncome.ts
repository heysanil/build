/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IncomeVerificationDocParsingConfig } from './IncomeVerificationDocParsingConfig';
import {
    IncomeVerificationDocParsingConfigFromJSON,
    IncomeVerificationDocParsingConfigFromJSONTyped,
    IncomeVerificationDocParsingConfigToJSON,
} from './IncomeVerificationDocParsingConfig';
import type { IncomeVerificationPayrollFlowType } from './IncomeVerificationPayrollFlowType';
import {
    IncomeVerificationPayrollFlowTypeFromJSON,
    IncomeVerificationPayrollFlowTypeFromJSONTyped,
    IncomeVerificationPayrollFlowTypeToJSON,
} from './IncomeVerificationPayrollFlowType';

/**
 * Specifies options for initializing Link for use with Payroll Income (including Document Income). Further customization options for Document Income, such as customizing which document types may be uploaded, are also available via the [Link Customization pane](https://dashboard.plaid.com/link) in the Dashboard. (Requires Production enablement.)
 * @export
 * @interface LinkTokenCreateRequestIncomeVerificationPayrollIncome
 */
export interface LinkTokenCreateRequestIncomeVerificationPayrollIncome {
    /**
     * The types of payroll income verification to enable for the Link session. If none are specified, then users will see both document and digital payroll income.
     * @type {Array<IncomeVerificationPayrollFlowType>}
     * @memberof LinkTokenCreateRequestIncomeVerificationPayrollIncome
     */
    flow_types?: Array<IncomeVerificationPayrollFlowType>;
    /**
     * An identifier to indicate whether the income verification Link token will be used for update mode. This field is only relevant for participants in the Payroll Income Refresh beta.
     * @type {boolean}
     * @memberof LinkTokenCreateRequestIncomeVerificationPayrollIncome
     */
    is_update_mode?: boolean;
    /**
     * Uniquely identify a payroll income Item to update with.  This field is only relevant for participants in the Payroll Income Refresh beta.
     * @type {string}
     * @memberof LinkTokenCreateRequestIncomeVerificationPayrollIncome
     */
    item_id_to_update?: string;
    /**
     * The types of analysis to enable for document uploads. If this field is not provided, then docs will undergo OCR parsing only.
     * @type {Array<IncomeVerificationDocParsingConfig>}
     * @memberof LinkTokenCreateRequestIncomeVerificationPayrollIncome
     */
    parsing_config?: Array<IncomeVerificationDocParsingConfig>;
}

/**
 * Check if a given object implements the LinkTokenCreateRequestIncomeVerificationPayrollIncome interface.
 */
export function instanceOfLinkTokenCreateRequestIncomeVerificationPayrollIncome(value: object): boolean {
    return true;
}

export function LinkTokenCreateRequestIncomeVerificationPayrollIncomeFromJSON(json: any): LinkTokenCreateRequestIncomeVerificationPayrollIncome {
    return LinkTokenCreateRequestIncomeVerificationPayrollIncomeFromJSONTyped(json, false);
}

export function LinkTokenCreateRequestIncomeVerificationPayrollIncomeFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkTokenCreateRequestIncomeVerificationPayrollIncome {
    if (json == null) {
        return json;
    }
    return {
        
        'flow_types': json['flow_types'] == null ? undefined : ((json['flow_types'] as Array<any>).map(IncomeVerificationPayrollFlowTypeFromJSON)),
        'is_update_mode': json['is_update_mode'] == null ? undefined : json['is_update_mode'],
        'item_id_to_update': json['item_id_to_update'] == null ? undefined : json['item_id_to_update'],
        'parsing_config': json['parsing_config'] == null ? undefined : ((json['parsing_config'] as Array<any>).map(IncomeVerificationDocParsingConfigFromJSON)),
    };
}

export function LinkTokenCreateRequestIncomeVerificationPayrollIncomeToJSON(value?: LinkTokenCreateRequestIncomeVerificationPayrollIncome | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'flow_types': value['flow_types'] == null ? undefined : ((value['flow_types'] as Array<any>).map(IncomeVerificationPayrollFlowTypeToJSON)),
        'is_update_mode': value['is_update_mode'],
        'item_id_to_update': value['item_id_to_update'],
        'parsing_config': value['parsing_config'] == null ? undefined : ((value['parsing_config'] as Array<any>).map(IncomeVerificationDocParsingConfigToJSON)),
    };
}

