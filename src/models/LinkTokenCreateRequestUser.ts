/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LinkTokenCreateRequestUserAddress } from './LinkTokenCreateRequestUserAddress';
import {
    LinkTokenCreateRequestUserAddressFromJSON,
    LinkTokenCreateRequestUserAddressFromJSONTyped,
    LinkTokenCreateRequestUserAddressToJSON,
} from './LinkTokenCreateRequestUserAddress';
import type { LinkTokenCreateRequestUserIdNumber } from './LinkTokenCreateRequestUserIdNumber';
import {
    LinkTokenCreateRequestUserIdNumberFromJSON,
    LinkTokenCreateRequestUserIdNumberFromJSONTyped,
    LinkTokenCreateRequestUserIdNumberToJSON,
} from './LinkTokenCreateRequestUserIdNumber';
import type { LinkTokenCreateRequestUserName } from './LinkTokenCreateRequestUserName';
import {
    LinkTokenCreateRequestUserNameFromJSON,
    LinkTokenCreateRequestUserNameFromJSONTyped,
    LinkTokenCreateRequestUserNameToJSON,
} from './LinkTokenCreateRequestUserName';

/**
 * An object specifying information about the end user who will be linking their account.
 * @export
 * @interface LinkTokenCreateRequestUser
 */
export interface LinkTokenCreateRequestUser {
    /**
     * A unique ID representing the end user. Typically this will be a user ID number from your application. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`. It is currently used as a means of searching logs for the given user in the Plaid Dashboard.
     * @type {string}
     * @memberof LinkTokenCreateRequestUser
     */
    client_user_id: string;
    /**
     * The user's full legal name, used for [micro-deposit based verification flows](https://plaid.com/docs/auth/coverage/). For a small number of customers on legacy flows, providing this field is required to enable micro-deposit-based flows. For all other customers, this field is optional. Providing the user's name in this field when using micro-deposit-based verification will streamline the end user experience, as the user will not be prompted to enter their name during the Link flow; Plaid will use the provided legal name instead.
     * @type {string}
     * @memberof LinkTokenCreateRequestUser
     */
    legal_name?: string;
    /**
     * 
     * @type {LinkTokenCreateRequestUserName}
     * @memberof LinkTokenCreateRequestUser
     */
    name?: LinkTokenCreateRequestUserName;
    /**
     * The user's phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format. This field is optional, but required to enable the [returning user experience](https://plaid.com/docs/link/returning-user). Can also be used to prefill Link fields when used with Identity Verification.
     * @type {string}
     * @memberof LinkTokenCreateRequestUser
     */
    phone_number?: string;
    /**
     * The date and time the phone number was verified in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDThh:mm:ssZ`). This was previously an optional field used in the [returning user experience](https://plaid.com/docs/link/returning-user). This field is no longer required to enable the returning user experience.
     * 
     *  Only pass a verification time for a phone number that you have verified. If you have performed verification but don’t have the time, you may supply a signal value of the start of the UNIX epoch.
     * 
     *  Example: `2020-01-01T00:00:00Z`
     * 
     * @type {Date}
     * @memberof LinkTokenCreateRequestUser
     * @deprecated
     */
    phone_number_verified_time?: Date;
    /**
     * The user's email address. This field is optional, but required to enable the [pre-authenticated returning user flow](https://plaid.com/docs/link/returning-user/#pre-authenticated-rux). Can also be used to prefill Link fields when used with Identity Verification.
     * @type {string}
     * @memberof LinkTokenCreateRequestUser
     */
    email_address?: string;
    /**
     * The date and time the email address was verified in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDThh:mm:ssZ`). This was previously an optional field used in the [returning user experience](https://plaid.com/docs/link/returning-user). This field is no longer required to enable the returning user experience.
     * 
     *  Only pass a verification time for an email address that you have verified. If you have performed verification but don’t have the time, you may supply a signal value of the start of the UNIX epoch.
     * 
     *  Example: `2020-01-01T00:00:00Z`
     * @type {Date}
     * @memberof LinkTokenCreateRequestUser
     * @deprecated
     */
    email_address_verified_time?: Date;
    /**
     * Deprecated and not currently used, use the `id_number` field instead.
     * @type {string}
     * @memberof LinkTokenCreateRequestUser
     * @deprecated
     */
    ssn?: string;
    /**
     * To be provided in the format "yyyy-mm-dd". Can be used to prefill Link fields when used with Identity Verification.
     * @type {Date}
     * @memberof LinkTokenCreateRequestUser
     */
    date_of_birth?: Date;
    /**
     * 
     * @type {LinkTokenCreateRequestUserAddress}
     * @memberof LinkTokenCreateRequestUser
     */
    address?: LinkTokenCreateRequestUserAddress;
    /**
     * 
     * @type {LinkTokenCreateRequestUserIdNumber}
     * @memberof LinkTokenCreateRequestUser
     */
    id_number?: LinkTokenCreateRequestUserIdNumber;
}

/**
 * Check if a given object implements the LinkTokenCreateRequestUser interface.
 */
export function instanceOfLinkTokenCreateRequestUser(value: object): boolean {
    if (!('client_user_id' in value)) return false;
    return true;
}

export function LinkTokenCreateRequestUserFromJSON(json: any): LinkTokenCreateRequestUser {
    return LinkTokenCreateRequestUserFromJSONTyped(json, false);
}

export function LinkTokenCreateRequestUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkTokenCreateRequestUser {
    if (json == null) {
        return json;
    }
    return {
        
        'client_user_id': json['client_user_id'],
        'legal_name': json['legal_name'] == null ? undefined : json['legal_name'],
        'name': json['name'] == null ? undefined : LinkTokenCreateRequestUserNameFromJSON(json['name']),
        'phone_number': json['phone_number'] == null ? undefined : json['phone_number'],
        'phone_number_verified_time': json['phone_number_verified_time'] == null ? undefined : (new Date(json['phone_number_verified_time'])),
        'email_address': json['email_address'] == null ? undefined : json['email_address'],
        'email_address_verified_time': json['email_address_verified_time'] == null ? undefined : (new Date(json['email_address_verified_time'])),
        'ssn': json['ssn'] == null ? undefined : json['ssn'],
        'date_of_birth': json['date_of_birth'] == null ? undefined : (new Date(json['date_of_birth'])),
        'address': json['address'] == null ? undefined : LinkTokenCreateRequestUserAddressFromJSON(json['address']),
        'id_number': json['id_number'] == null ? undefined : LinkTokenCreateRequestUserIdNumberFromJSON(json['id_number']),
    };
}

export function LinkTokenCreateRequestUserToJSON(value?: LinkTokenCreateRequestUser | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'client_user_id': value['client_user_id'],
        'legal_name': value['legal_name'],
        'name': LinkTokenCreateRequestUserNameToJSON(value['name']),
        'phone_number': value['phone_number'],
        'phone_number_verified_time': value['phone_number_verified_time'] == null ? undefined : ((value['phone_number_verified_time'] as any).toISOString()),
        'email_address': value['email_address'],
        'email_address_verified_time': value['email_address_verified_time'] == null ? undefined : ((value['email_address_verified_time'] as any).toISOString()),
        'ssn': value['ssn'],
        'date_of_birth': value['date_of_birth'] == null ? undefined : ((value['date_of_birth'] as any).toISOString().substring(0,10)),
        'address': LinkTokenCreateRequestUserAddressToJSON(value['address']),
        'id_number': LinkTokenCreateRequestUserIdNumberToJSON(value['id_number']),
    };
}

