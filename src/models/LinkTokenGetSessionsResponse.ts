/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LinkEvent } from './LinkEvent';
import {
    LinkEventFromJSON,
    LinkEventFromJSONTyped,
    LinkEventToJSON,
} from './LinkEvent';
import type { LinkSessionExit } from './LinkSessionExit';
import {
    LinkSessionExitFromJSON,
    LinkSessionExitFromJSONTyped,
    LinkSessionExitToJSON,
} from './LinkSessionExit';
import type { LinkSessionSuccess } from './LinkSessionSuccess';
import {
    LinkSessionSuccessFromJSON,
    LinkSessionSuccessFromJSONTyped,
    LinkSessionSuccessToJSON,
} from './LinkSessionSuccess';

/**
 * An object containing information about a link session. This field will only be present if your client is enabled for Hosted Link (beta). Session data will be provided for up to six hours after the session has ended.
 * @export
 * @interface LinkTokenGetSessionsResponse
 */
export interface LinkTokenGetSessionsResponse {
    [key: string]: any | any;
    /**
     * The unique ID for the link session.
     * @type {string}
     * @memberof LinkTokenGetSessionsResponse
     */
    link_session_id: string;
    /**
     * The timestamp at which the link session was first started, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
     * @type {Date}
     * @memberof LinkTokenGetSessionsResponse
     */
    started_at?: Date;
    /**
     * The timestamp at which the link session was finished, if available, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
     * @type {Date}
     * @memberof LinkTokenGetSessionsResponse
     */
    finished_at?: Date;
    /**
     * 
     * @type {LinkSessionSuccess}
     * @memberof LinkTokenGetSessionsResponse
     */
    on_success?: LinkSessionSuccess;
    /**
     * 
     * @type {LinkSessionExit}
     * @memberof LinkTokenGetSessionsResponse
     */
    on_exit?: LinkSessionExit;
    /**
     * List of customer-related Link events
     * @type {Array<LinkEvent>}
     * @memberof LinkTokenGetSessionsResponse
     */
    events?: Array<LinkEvent>;
}

/**
 * Check if a given object implements the LinkTokenGetSessionsResponse interface.
 */
export function instanceOfLinkTokenGetSessionsResponse(value: object): boolean {
    if (!('link_session_id' in value)) return false;
    return true;
}

export function LinkTokenGetSessionsResponseFromJSON(json: any): LinkTokenGetSessionsResponse {
    return LinkTokenGetSessionsResponseFromJSONTyped(json, false);
}

export function LinkTokenGetSessionsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinkTokenGetSessionsResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'link_session_id': json['link_session_id'],
        'started_at': json['started_at'] == null ? undefined : (new Date(json['started_at'])),
        'finished_at': json['finished_at'] == null ? undefined : (new Date(json['finished_at'])),
        'on_success': json['on_success'] == null ? undefined : LinkSessionSuccessFromJSON(json['on_success']),
        'on_exit': json['on_exit'] == null ? undefined : LinkSessionExitFromJSON(json['on_exit']),
        'events': json['events'] == null ? undefined : ((json['events'] as Array<any>).map(LinkEventFromJSON)),
    };
}

export function LinkTokenGetSessionsResponseToJSON(value?: LinkTokenGetSessionsResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'link_session_id': value['link_session_id'],
        'started_at': value['started_at'] == null ? undefined : ((value['started_at']).toISOString()),
        'finished_at': value['finished_at'] == null ? undefined : ((value['finished_at'] as any).toISOString()),
        'on_success': LinkSessionSuccessToJSON(value['on_success']),
        'on_exit': LinkSessionExitToJSON(value['on_exit']),
        'events': value['events'] == null ? undefined : ((value['events'] as Array<any>).map(LinkEventToJSON)),
    };
}

