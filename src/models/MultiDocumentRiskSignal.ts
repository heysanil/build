/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DocumentRiskSignal } from './DocumentRiskSignal';
import {
    DocumentRiskSignalFromJSON,
    DocumentRiskSignalFromJSONTyped,
    DocumentRiskSignalToJSON,
} from './DocumentRiskSignal';
import type { RiskSignalDocumentReference } from './RiskSignalDocumentReference';
import {
    RiskSignalDocumentReferenceFromJSON,
    RiskSignalDocumentReferenceFromJSONTyped,
    RiskSignalDocumentReferenceToJSON,
} from './RiskSignalDocumentReference';

/**
 * Object containing risk signals and relevant metadata for a set of uploaded documents
 * @export
 * @interface MultiDocumentRiskSignal
 */
export interface MultiDocumentRiskSignal {
    [key: string]: any | any;
    /**
     * Array of objects containing attributes that could indicate if a document is fraudulent
     * @type {Array<RiskSignalDocumentReference>}
     * @memberof MultiDocumentRiskSignal
     */
    document_references: Array<RiskSignalDocumentReference>;
    /**
     * Array of attributes that indicate whether or not there is fraud risk with a set of documents
     * @type {Array<DocumentRiskSignal>}
     * @memberof MultiDocumentRiskSignal
     */
    risk_signals: Array<DocumentRiskSignal>;
}

/**
 * Check if a given object implements the MultiDocumentRiskSignal interface.
 */
export function instanceOfMultiDocumentRiskSignal(value: object): boolean {
    if (!('document_references' in value)) return false;
    if (!('risk_signals' in value)) return false;
    return true;
}

export function MultiDocumentRiskSignalFromJSON(json: any): MultiDocumentRiskSignal {
    return MultiDocumentRiskSignalFromJSONTyped(json, false);
}

export function MultiDocumentRiskSignalFromJSONTyped(json: any, ignoreDiscriminator: boolean): MultiDocumentRiskSignal {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'document_references': ((json['document_references'] as Array<any>).map(RiskSignalDocumentReferenceFromJSON)),
        'risk_signals': ((json['risk_signals'] as Array<any>).map(DocumentRiskSignalFromJSON)),
    };
}

export function MultiDocumentRiskSignalToJSON(value?: MultiDocumentRiskSignal | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'document_references': ((value['document_references'] as Array<any>).map(RiskSignalDocumentReferenceToJSON)),
        'risk_signals': ((value['risk_signals'] as Array<any>).map(DocumentRiskSignalToJSON)),
    };
}

