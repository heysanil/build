/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreditPayStubPayBasisType } from './CreditPayStubPayBasisType';
import {
    CreditPayStubPayBasisTypeFromJSON,
    CreditPayStubPayBasisTypeFromJSONTyped,
    CreditPayStubPayBasisTypeToJSON,
} from './CreditPayStubPayBasisType';
import type { PayStubDistributionBreakdown } from './PayStubDistributionBreakdown';
import {
    PayStubDistributionBreakdownFromJSON,
    PayStubDistributionBreakdownFromJSONTyped,
    PayStubDistributionBreakdownToJSON,
} from './PayStubDistributionBreakdown';

/**
 * Details about the pay period.
 * @export
 * @interface PayStubPayPeriodDetails
 */
export interface PayStubPayPeriodDetails {
    [key: string]: any | any;
    /**
     * The amount of the paycheck.
     * @type {number}
     * @memberof PayStubPayPeriodDetails
     */
    pay_amount: number | null;
    /**
     * 
     * @type {Array<PayStubDistributionBreakdown>}
     * @memberof PayStubPayPeriodDetails
     */
    distribution_breakdown: Array<PayStubDistributionBreakdown>;
    /**
     * The date on which the pay period ended, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
     * @type {Date}
     * @memberof PayStubPayPeriodDetails
     */
    end_date: Date | null;
    /**
     * Total earnings before tax/deductions.
     * @type {number}
     * @memberof PayStubPayPeriodDetails
     */
    gross_earnings: number | null;
    /**
     * The ISO-4217 currency code of the net pay. Always `null` if `unofficial_currency_code` is non-null.
     * @type {string}
     * @memberof PayStubPayPeriodDetails
     */
    iso_currency_code: string | null;
    /**
     * The date on which the pay stub was issued, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
     * @type {Date}
     * @memberof PayStubPayPeriodDetails
     */
    pay_date: Date | null;
    /**
     * The frequency at which an individual is paid.
     * @type {string}
     * @memberof PayStubPayPeriodDetails
     */
    pay_frequency: string | null;
    /**
     * 
     * @type {CreditPayStubPayBasisType}
     * @memberof PayStubPayPeriodDetails
     */
    pay_basis?: CreditPayStubPayBasisType;
    /**
     * The date on which the pay period started, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ("yyyy-mm-dd").
     * @type {Date}
     * @memberof PayStubPayPeriodDetails
     */
    start_date: Date | null;
    /**
     * The unofficial currency code associated with the net pay. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.
     * 
     * See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
     * @type {string}
     * @memberof PayStubPayPeriodDetails
     */
    unofficial_currency_code: string | null;
}

/**
 * Check if a given object implements the PayStubPayPeriodDetails interface.
 */
export function instanceOfPayStubPayPeriodDetails(value: object): boolean {
    if (!('pay_amount' in value)) return false;
    if (!('distribution_breakdown' in value)) return false;
    if (!('end_date' in value)) return false;
    if (!('gross_earnings' in value)) return false;
    if (!('iso_currency_code' in value)) return false;
    if (!('pay_date' in value)) return false;
    if (!('pay_frequency' in value)) return false;
    if (!('start_date' in value)) return false;
    if (!('unofficial_currency_code' in value)) return false;
    return true;
}

export function PayStubPayPeriodDetailsFromJSON(json: any): PayStubPayPeriodDetails {
    return PayStubPayPeriodDetailsFromJSONTyped(json, false);
}

export function PayStubPayPeriodDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PayStubPayPeriodDetails {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'pay_amount': json['pay_amount'],
        'distribution_breakdown': ((json['distribution_breakdown'] as Array<any>).map(PayStubDistributionBreakdownFromJSON)),
        'end_date': (json['end_date'] == null ? null : new Date(json['end_date'])),
        'gross_earnings': json['gross_earnings'],
        'iso_currency_code': json['iso_currency_code'],
        'pay_date': (json['pay_date'] == null ? null : new Date(json['pay_date'])),
        'pay_frequency': json['pay_frequency'],
        'pay_basis': json['pay_basis'] == null ? undefined : CreditPayStubPayBasisTypeFromJSON(json['pay_basis']),
        'start_date': (json['start_date'] == null ? null : new Date(json['start_date'])),
        'unofficial_currency_code': json['unofficial_currency_code'],
    };
}

export function PayStubPayPeriodDetailsToJSON(value?: PayStubPayPeriodDetails | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'pay_amount': value['pay_amount'],
        'distribution_breakdown': ((value['distribution_breakdown'] as Array<any>).map(PayStubDistributionBreakdownToJSON)),
        'end_date': (value['end_date'] == null ? null : (value['end_date'] as any).toISOString().substring(0,10)),
        'gross_earnings': value['gross_earnings'],
        'iso_currency_code': value['iso_currency_code'],
        'pay_date': (value['pay_date'] == null ? null : (value['pay_date'] as any).toISOString().substring(0,10)),
        'pay_frequency': value['pay_frequency'],
        'pay_basis': CreditPayStubPayBasisTypeToJSON(value['pay_basis']),
        'start_date': (value['start_date'] == null ? null : (value['start_date'] as any).toISOString().substring(0,10)),
        'unofficial_currency_code': value['unofficial_currency_code'],
    };
}

