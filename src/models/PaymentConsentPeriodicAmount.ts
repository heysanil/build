/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PaymentConsentPeriodicAlignment } from './PaymentConsentPeriodicAlignment';
import {
    PaymentConsentPeriodicAlignmentFromJSON,
    PaymentConsentPeriodicAlignmentFromJSONTyped,
    PaymentConsentPeriodicAlignmentToJSON,
} from './PaymentConsentPeriodicAlignment';
import type { PaymentConsentPeriodicAmountAmount } from './PaymentConsentPeriodicAmountAmount';
import {
    PaymentConsentPeriodicAmountAmountFromJSON,
    PaymentConsentPeriodicAmountAmountFromJSONTyped,
    PaymentConsentPeriodicAmountAmountToJSON,
} from './PaymentConsentPeriodicAmountAmount';
import type { PaymentConsentPeriodicInterval } from './PaymentConsentPeriodicInterval';
import {
    PaymentConsentPeriodicIntervalFromJSON,
    PaymentConsentPeriodicIntervalFromJSONTyped,
    PaymentConsentPeriodicIntervalToJSON,
} from './PaymentConsentPeriodicInterval';

/**
 * Defines consent payments limitations per period.
 * @export
 * @interface PaymentConsentPeriodicAmount
 */
export interface PaymentConsentPeriodicAmount {
    /**
     * 
     * @type {PaymentConsentPeriodicAmountAmount}
     * @memberof PaymentConsentPeriodicAmount
     */
    amount: PaymentConsentPeriodicAmountAmount;
    /**
     * 
     * @type {PaymentConsentPeriodicInterval}
     * @memberof PaymentConsentPeriodicAmount
     */
    interval: PaymentConsentPeriodicInterval;
    /**
     * 
     * @type {PaymentConsentPeriodicAlignment}
     * @memberof PaymentConsentPeriodicAmount
     */
    alignment: PaymentConsentPeriodicAlignment;
}

/**
 * Check if a given object implements the PaymentConsentPeriodicAmount interface.
 */
export function instanceOfPaymentConsentPeriodicAmount(value: object): boolean {
    if (!('amount' in value)) return false;
    if (!('interval' in value)) return false;
    if (!('alignment' in value)) return false;
    return true;
}

export function PaymentConsentPeriodicAmountFromJSON(json: any): PaymentConsentPeriodicAmount {
    return PaymentConsentPeriodicAmountFromJSONTyped(json, false);
}

export function PaymentConsentPeriodicAmountFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentConsentPeriodicAmount {
    if (json == null) {
        return json;
    }
    return {
        
        'amount': PaymentConsentPeriodicAmountAmountFromJSON(json['amount']),
        'interval': PaymentConsentPeriodicIntervalFromJSON(json['interval']),
        'alignment': PaymentConsentPeriodicAlignmentFromJSON(json['alignment']),
    };
}

export function PaymentConsentPeriodicAmountToJSON(value?: PaymentConsentPeriodicAmount | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'amount': PaymentConsentPeriodicAmountAmountToJSON(value['amount']),
        'interval': PaymentConsentPeriodicIntervalToJSON(value['interval']),
        'alignment': PaymentConsentPeriodicAlignmentToJSON(value['alignment']),
    };
}

