/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Life span for the payment consent. After the `to` date the payment consent expires and can no longer be used for payment initiation.
 * @export
 * @interface PaymentConsentValidDateTime
 */
export interface PaymentConsentValidDateTime {
    /**
     * The date and time from which the consent should be active, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
     * @type {Date}
     * @memberof PaymentConsentValidDateTime
     */
    from?: Date;
    /**
     * The date and time at which the consent expires, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
     * @type {Date}
     * @memberof PaymentConsentValidDateTime
     */
    to?: Date;
}

/**
 * Check if a given object implements the PaymentConsentValidDateTime interface.
 */
export function instanceOfPaymentConsentValidDateTime(value: object): boolean {
    return true;
}

export function PaymentConsentValidDateTimeFromJSON(json: any): PaymentConsentValidDateTime {
    return PaymentConsentValidDateTimeFromJSONTyped(json, false);
}

export function PaymentConsentValidDateTimeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentConsentValidDateTime {
    if (json == null) {
        return json;
    }
    return {
        
        'from': json['from'] == null ? undefined : (new Date(json['from'])),
        'to': json['to'] == null ? undefined : (new Date(json['to'])),
    };
}

export function PaymentConsentValidDateTimeToJSON(value?: PaymentConsentValidDateTime | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'from': value['from'] == null ? undefined : ((value['from'] as any).toISOString()),
        'to': value['to'] == null ? undefined : ((value['to'] as any).toISOString()),
    };
}

