/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PaymentInitiationConsentStatus } from './PaymentInitiationConsentStatus';
import {
    PaymentInitiationConsentStatusFromJSON,
    PaymentInitiationConsentStatusFromJSONTyped,
    PaymentInitiationConsentStatusToJSON,
} from './PaymentInitiationConsentStatus';

/**
 * PaymentInitiationConsentCreateResponse defines the response schema for `/payment_initiation/consent/create`
 * @export
 * @interface PaymentInitiationConsentCreateResponse
 */
export interface PaymentInitiationConsentCreateResponse {
    [key: string]: any | any;
    /**
     * A unique ID identifying the payment consent.
     * @type {string}
     * @memberof PaymentInitiationConsentCreateResponse
     */
    consent_id: string;
    /**
     * 
     * @type {PaymentInitiationConsentStatus}
     * @memberof PaymentInitiationConsentCreateResponse
     */
    status: PaymentInitiationConsentStatus;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof PaymentInitiationConsentCreateResponse
     */
    request_id: string;
}

/**
 * Check if a given object implements the PaymentInitiationConsentCreateResponse interface.
 */
export function instanceOfPaymentInitiationConsentCreateResponse(value: object): boolean {
    if (!('consent_id' in value)) return false;
    if (!('status' in value)) return false;
    if (!('request_id' in value)) return false;
    return true;
}

export function PaymentInitiationConsentCreateResponseFromJSON(json: any): PaymentInitiationConsentCreateResponse {
    return PaymentInitiationConsentCreateResponseFromJSONTyped(json, false);
}

export function PaymentInitiationConsentCreateResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentInitiationConsentCreateResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'consent_id': json['consent_id'],
        'status': PaymentInitiationConsentStatusFromJSON(json['status']),
        'request_id': json['request_id'],
    };
}

export function PaymentInitiationConsentCreateResponseToJSON(value?: PaymentInitiationConsentCreateResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'consent_id': value['consent_id'],
        'status': PaymentInitiationConsentStatusToJSON(value['status']),
        'request_id': value['request_id'],
    };
}

