/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExternalPaymentOptions } from './ExternalPaymentOptions';
import {
    ExternalPaymentOptionsFromJSON,
    ExternalPaymentOptionsFromJSONTyped,
    ExternalPaymentOptionsToJSON,
} from './ExternalPaymentOptions';
import type { ExternalPaymentScheduleRequest } from './ExternalPaymentScheduleRequest';
import {
    ExternalPaymentScheduleRequestFromJSON,
    ExternalPaymentScheduleRequestFromJSONTyped,
    ExternalPaymentScheduleRequestToJSON,
} from './ExternalPaymentScheduleRequest';
import type { PaymentAmount } from './PaymentAmount';
import {
    PaymentAmountFromJSON,
    PaymentAmountFromJSONTyped,
    PaymentAmountToJSON,
} from './PaymentAmount';

/**
 * PaymentInitiationPaymentCreateRequest defines the request schema for `/payment_initiation/payment/create`
 * @export
 * @interface PaymentInitiationPaymentCreateRequest
 */
export interface PaymentInitiationPaymentCreateRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * @type {string}
     * @memberof PaymentInitiationPaymentCreateRequest
     */
    client_id?: string;
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * @type {string}
     * @memberof PaymentInitiationPaymentCreateRequest
     */
    secret?: string;
    /**
     * The ID of the recipient the payment is for.
     * @type {string}
     * @memberof PaymentInitiationPaymentCreateRequest
     */
    recipient_id: string;
    /**
     * A reference for the payment. This must be an alphanumeric string with at most 18 characters and must not contain any special characters (since not all institutions support them).
     * In order to track settlement via Payment Confirmation, each payment must have a unique reference. If the reference provided through the API is not unique, Plaid will adjust it.
     * Some institutions may limit the reference to less than 18 characters. If necessary, Plaid will adjust the reference by truncating it to fit the institution's requirements.
     * Both the originally provided and automatically adjusted references (if any) can be found in the `reference` and `adjusted_reference` fields, respectively.
     * @type {string}
     * @memberof PaymentInitiationPaymentCreateRequest
     */
    reference: string;
    /**
     * 
     * @type {PaymentAmount}
     * @memberof PaymentInitiationPaymentCreateRequest
     */
    amount: PaymentAmount;
    /**
     * 
     * @type {ExternalPaymentScheduleRequest}
     * @memberof PaymentInitiationPaymentCreateRequest
     */
    schedule?: ExternalPaymentScheduleRequest;
    /**
     * 
     * @type {ExternalPaymentOptions}
     * @memberof PaymentInitiationPaymentCreateRequest
     */
    options?: ExternalPaymentOptions;
}

/**
 * Check if a given object implements the PaymentInitiationPaymentCreateRequest interface.
 */
export function instanceOfPaymentInitiationPaymentCreateRequest(value: object): boolean {
    if (!('recipient_id' in value)) return false;
    if (!('reference' in value)) return false;
    if (!('amount' in value)) return false;
    return true;
}

export function PaymentInitiationPaymentCreateRequestFromJSON(json: any): PaymentInitiationPaymentCreateRequest {
    return PaymentInitiationPaymentCreateRequestFromJSONTyped(json, false);
}

export function PaymentInitiationPaymentCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentInitiationPaymentCreateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'recipient_id': json['recipient_id'],
        'reference': json['reference'],
        'amount': PaymentAmountFromJSON(json['amount']),
        'schedule': json['schedule'] == null ? undefined : ExternalPaymentScheduleRequestFromJSON(json['schedule']),
        'options': json['options'] == null ? undefined : ExternalPaymentOptionsFromJSON(json['options']),
    };
}

export function PaymentInitiationPaymentCreateRequestToJSON(value?: PaymentInitiationPaymentCreateRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'client_id': value['client_id'],
        'secret': value['secret'],
        'recipient_id': value['recipient_id'],
        'reference': value['reference'],
        'amount': PaymentAmountToJSON(value['amount']),
        'schedule': ExternalPaymentScheduleRequestToJSON(value['schedule']),
        'options': ExternalPaymentOptionsToJSON(value['options']),
    };
}

