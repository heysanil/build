/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PaymentScheduleInterval } from './PaymentScheduleInterval';
import {
    PaymentScheduleIntervalFromJSON,
    PaymentScheduleIntervalFromJSONTyped,
    PaymentScheduleIntervalToJSON,
} from './PaymentScheduleInterval';

/**
 * Metadata specifically related to valid Payment Initiation standing order configurations for the institution.
 * @export
 * @interface PaymentInitiationStandingOrderMetadata
 */
export interface PaymentInitiationStandingOrderMetadata {
    [key: string]: any | any;
    /**
     * Indicates whether the institution supports closed-ended standing orders by providing an end date.
     * @type {boolean}
     * @memberof PaymentInitiationStandingOrderMetadata
     */
    supports_standing_order_end_date: boolean;
    /**
     * This is only applicable to `MONTHLY` standing orders. Indicates whether the institution supports negative integers (-1 to -5) for setting up a `MONTHLY` standing order relative to the end of the month.
     * @type {boolean}
     * @memberof PaymentInitiationStandingOrderMetadata
     */
    supports_standing_order_negative_execution_days: boolean;
    /**
     * A list of the valid standing order intervals supported by the institution.
     * @type {Array<PaymentScheduleInterval>}
     * @memberof PaymentInitiationStandingOrderMetadata
     */
    valid_standing_order_intervals: Array<PaymentScheduleInterval>;
}

/**
 * Check if a given object implements the PaymentInitiationStandingOrderMetadata interface.
 */
export function instanceOfPaymentInitiationStandingOrderMetadata(value: object): boolean {
    if (!('supports_standing_order_end_date' in value)) return false;
    if (!('supports_standing_order_negative_execution_days' in value)) return false;
    if (!('valid_standing_order_intervals' in value)) return false;
    return true;
}

export function PaymentInitiationStandingOrderMetadataFromJSON(json: any): PaymentInitiationStandingOrderMetadata {
    return PaymentInitiationStandingOrderMetadataFromJSONTyped(json, false);
}

export function PaymentInitiationStandingOrderMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentInitiationStandingOrderMetadata {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'supports_standing_order_end_date': json['supports_standing_order_end_date'],
        'supports_standing_order_negative_execution_days': json['supports_standing_order_negative_execution_days'],
        'valid_standing_order_intervals': ((json['valid_standing_order_intervals'] as Array<any>).map(PaymentScheduleIntervalFromJSON)),
    };
}

export function PaymentInitiationStandingOrderMetadataToJSON(value?: PaymentInitiationStandingOrderMetadata | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'supports_standing_order_end_date': value['supports_standing_order_end_date'],
        'supports_standing_order_negative_execution_days': value['supports_standing_order_negative_execution_days'],
        'valid_standing_order_intervals': ((value['valid_standing_order_intervals'] as Array<any>).map(PaymentScheduleIntervalToJSON)),
    };
}

