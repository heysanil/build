/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Deductions } from './Deductions';
import {
    DeductionsFromJSON,
    DeductionsFromJSONTyped,
    DeductionsToJSON,
} from './Deductions';
import type { Earnings } from './Earnings';
import {
    EarningsFromJSON,
    EarningsFromJSONTyped,
    EarningsToJSON,
} from './Earnings';
import type { Employee } from './Employee';
import {
    EmployeeFromJSON,
    EmployeeFromJSONTyped,
    EmployeeToJSON,
} from './Employee';
import type { EmploymentDetails } from './EmploymentDetails';
import {
    EmploymentDetailsFromJSON,
    EmploymentDetailsFromJSONTyped,
    EmploymentDetailsToJSON,
} from './EmploymentDetails';
import type { IncomeBreakdown } from './IncomeBreakdown';
import {
    IncomeBreakdownFromJSON,
    IncomeBreakdownFromJSONTyped,
    IncomeBreakdownToJSON,
} from './IncomeBreakdown';
import type { NetPay } from './NetPay';
import {
    NetPayFromJSON,
    NetPayFromJSONTyped,
    NetPayToJSON,
} from './NetPay';
import type { PayPeriodDetails } from './PayPeriodDetails';
import {
    PayPeriodDetailsFromJSON,
    PayPeriodDetailsFromJSONTyped,
    PayPeriodDetailsToJSON,
} from './PayPeriodDetails';
import type { PaystubDetails } from './PaystubDetails';
import {
    PaystubDetailsFromJSON,
    PaystubDetailsFromJSONTyped,
    PaystubDetailsToJSON,
} from './PaystubDetails';
import type { PaystubEmployer } from './PaystubEmployer';
import {
    PaystubEmployerFromJSON,
    PaystubEmployerFromJSONTyped,
    PaystubEmployerToJSON,
} from './PaystubEmployer';
import type { PaystubYTDDetails } from './PaystubYTDDetails';
import {
    PaystubYTDDetailsFromJSON,
    PaystubYTDDetailsFromJSONTyped,
    PaystubYTDDetailsToJSON,
} from './PaystubYTDDetails';

/**
 * An object representing data extracted from the end user's paystub.
 * @export
 * @interface Paystub
 */
export interface Paystub {
    [key: string]: any | any;
    /**
     * 
     * @type {Deductions}
     * @memberof Paystub
     */
    deductions: Deductions;
    /**
     * An identifier of the document referenced by the document metadata.
     * @type {string}
     * @memberof Paystub
     */
    doc_id: string;
    /**
     * 
     * @type {Earnings}
     * @memberof Paystub
     */
    earnings: Earnings;
    /**
     * 
     * @type {Employee}
     * @memberof Paystub
     */
    employee: Employee;
    /**
     * 
     * @type {PaystubEmployer}
     * @memberof Paystub
     */
    employer: PaystubEmployer;
    /**
     * 
     * @type {EmploymentDetails}
     * @memberof Paystub
     * @deprecated
     */
    employment_details?: EmploymentDetails;
    /**
     * 
     * @type {NetPay}
     * @memberof Paystub
     */
    net_pay: NetPay;
    /**
     * 
     * @type {PayPeriodDetails}
     * @memberof Paystub
     */
    pay_period_details: PayPeriodDetails;
    /**
     * 
     * @type {PaystubDetails}
     * @memberof Paystub
     * @deprecated
     */
    paystub_details?: PaystubDetails;
    /**
     * 
     * @type {Array<IncomeBreakdown>}
     * @memberof Paystub
     * @deprecated
     */
    income_breakdown?: Array<IncomeBreakdown>;
    /**
     * 
     * @type {PaystubYTDDetails}
     * @memberof Paystub
     * @deprecated
     */
    ytd_earnings?: PaystubYTDDetails;
}

/**
 * Check if a given object implements the Paystub interface.
 */
export function instanceOfPaystub(value: object): boolean {
    if (!('deductions' in value)) return false;
    if (!('doc_id' in value)) return false;
    if (!('earnings' in value)) return false;
    if (!('employee' in value)) return false;
    if (!('employer' in value)) return false;
    if (!('net_pay' in value)) return false;
    if (!('pay_period_details' in value)) return false;
    return true;
}

export function PaystubFromJSON(json: any): Paystub {
    return PaystubFromJSONTyped(json, false);
}

export function PaystubFromJSONTyped(json: any, ignoreDiscriminator: boolean): Paystub {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'deductions': DeductionsFromJSON(json['deductions']),
        'doc_id': json['doc_id'],
        'earnings': EarningsFromJSON(json['earnings']),
        'employee': EmployeeFromJSON(json['employee']),
        'employer': PaystubEmployerFromJSON(json['employer']),
        'employment_details': json['employment_details'] == null ? undefined : EmploymentDetailsFromJSON(json['employment_details']),
        'net_pay': NetPayFromJSON(json['net_pay']),
        'pay_period_details': PayPeriodDetailsFromJSON(json['pay_period_details']),
        'paystub_details': json['paystub_details'] == null ? undefined : PaystubDetailsFromJSON(json['paystub_details']),
        'income_breakdown': json['income_breakdown'] == null ? undefined : ((json['income_breakdown'] as Array<any>).map(IncomeBreakdownFromJSON)),
        'ytd_earnings': json['ytd_earnings'] == null ? undefined : PaystubYTDDetailsFromJSON(json['ytd_earnings']),
    };
}

export function PaystubToJSON(value?: Paystub | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'deductions': DeductionsToJSON(value['deductions']),
        'doc_id': value['doc_id'],
        'earnings': EarningsToJSON(value['earnings']),
        'employee': EmployeeToJSON(value['employee']),
        'employer': PaystubEmployerToJSON(value['employer']),
        'employment_details': EmploymentDetailsToJSON(value['employment_details']),
        'net_pay': NetPayToJSON(value['net_pay']),
        'pay_period_details': PayPeriodDetailsToJSON(value['pay_period_details']),
        'paystub_details': PaystubDetailsToJSON(value['paystub_details']),
        'income_breakdown': value['income_breakdown'] == null ? undefined : ((value['income_breakdown'] as Array<any>).map(IncomeBreakdownToJSON)),
        'ytd_earnings': PaystubYTDDetailsToJSON(value['ytd_earnings']),
    };
}

