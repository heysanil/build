/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A phone number
 * @export
 * @interface PhoneNumber
 */
export interface PhoneNumber {
    [key: string]: any | any;
    /**
     * The phone number.
     * @type {string}
     * @memberof PhoneNumber
     */
    data: string;
    /**
     * When `true`, identifies the phone number as the primary number on an account.
     * @type {boolean}
     * @memberof PhoneNumber
     */
    primary: boolean;
    /**
     * The type of phone number.
     * @type {string}
     * @memberof PhoneNumber
     */
    type: PhoneNumberTypeEnum;
}


/**
 * @export
 */
export const PhoneNumberTypeEnum = {
    Home: 'home',
    Work: 'work',
    Office: 'office',
    Mobile: 'mobile',
    Mobile1: 'mobile1',
    Other: 'other'
} as const;
export type PhoneNumberTypeEnum = typeof PhoneNumberTypeEnum[keyof typeof PhoneNumberTypeEnum];


/**
 * Check if a given object implements the PhoneNumber interface.
 */
export function instanceOfPhoneNumber(value: object): boolean {
    if (!('data' in value)) return false;
    if (!('primary' in value)) return false;
    if (!('type' in value)) return false;
    return true;
}

export function PhoneNumberFromJSON(json: any): PhoneNumber {
    return PhoneNumberFromJSONTyped(json, false);
}

export function PhoneNumberFromJSONTyped(json: any, ignoreDiscriminator: boolean): PhoneNumber {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'data': json['data'],
        'primary': json['primary'],
        'type': json['type'],
    };
}

export function PhoneNumberToJSON(value?: PhoneNumber | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'data': value['data'],
        'primary': value['primary'],
        'type': value['type'],
    };
}

