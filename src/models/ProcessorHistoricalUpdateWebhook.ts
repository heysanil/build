/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlaidError } from './PlaidError';
import {
    PlaidErrorFromJSON,
    PlaidErrorFromJSONTyped,
    PlaidErrorToJSON,
} from './PlaidError';
import type { WebhookEnvironmentValues } from './WebhookEnvironmentValues';
import {
    WebhookEnvironmentValuesFromJSON,
    WebhookEnvironmentValuesFromJSONTyped,
    WebhookEnvironmentValuesToJSON,
} from './WebhookEnvironmentValues';

/**
 * This webhook is only sent to [Plaid processor partners](https://plaid.com/docs/auth/partnerships/).
 * 
 * Fired when an Item's historical transaction pull is completed and Plaid has prepared as much historical transaction data as possible for the Item. Once this webhook has been fired, transaction data beyond the most recent 30 days can be fetched for the Item. If [Account Select v2](https://plaid.com/docs/link/customization/#account-select) is enabled, this webhook will also be fired if account selections for the Item are updated, with `new_transactions` set to the number of net new transactions pulled after the account selection update.
 * 
 * This webhook is intended for use with `/processor/transactions/get`; if you are using the newer `/processor/transactions/sync` endpoint, this webhook will still be fired to maintain backwards compatibility, but it is recommended to listen for and respond to the `SYNC_UPDATES_AVAILABLE` webhook instead.
 * @export
 * @interface ProcessorHistoricalUpdateWebhook
 */
export interface ProcessorHistoricalUpdateWebhook {
    [key: string]: any | any;
    /**
     * `TRANSACTIONS`
     * @type {string}
     * @memberof ProcessorHistoricalUpdateWebhook
     */
    webhook_type: string;
    /**
     * `HISTORICAL_UPDATE`
     * @type {string}
     * @memberof ProcessorHistoricalUpdateWebhook
     */
    webhook_code: string;
    /**
     * 
     * @type {PlaidError}
     * @memberof ProcessorHistoricalUpdateWebhook
     */
    error?: PlaidError;
    /**
     * The number of new, unfetched transactions available
     * @type {number}
     * @memberof ProcessorHistoricalUpdateWebhook
     */
    new_transactions: number;
    /**
     * The ID of the account.
     * @type {string}
     * @memberof ProcessorHistoricalUpdateWebhook
     */
    account_id: string;
    /**
     * 
     * @type {WebhookEnvironmentValues}
     * @memberof ProcessorHistoricalUpdateWebhook
     */
    environment: WebhookEnvironmentValues;
}

/**
 * Check if a given object implements the ProcessorHistoricalUpdateWebhook interface.
 */
export function instanceOfProcessorHistoricalUpdateWebhook(value: object): boolean {
    if (!('webhook_type' in value)) return false;
    if (!('webhook_code' in value)) return false;
    if (!('new_transactions' in value)) return false;
    if (!('account_id' in value)) return false;
    if (!('environment' in value)) return false;
    return true;
}

export function ProcessorHistoricalUpdateWebhookFromJSON(json: any): ProcessorHistoricalUpdateWebhook {
    return ProcessorHistoricalUpdateWebhookFromJSONTyped(json, false);
}

export function ProcessorHistoricalUpdateWebhookFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProcessorHistoricalUpdateWebhook {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'webhook_type': json['webhook_type'],
        'webhook_code': json['webhook_code'],
        'error': json['error'] == null ? undefined : PlaidErrorFromJSON(json['error']),
        'new_transactions': json['new_transactions'],
        'account_id': json['account_id'],
        'environment': WebhookEnvironmentValuesFromJSON(json['environment']),
    };
}

export function ProcessorHistoricalUpdateWebhookToJSON(value?: ProcessorHistoricalUpdateWebhook | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'webhook_type': value['webhook_type'],
        'webhook_code': value['webhook_code'],
        'error': PlaidErrorToJSON(value['error']),
        'new_transactions': value['new_transactions'],
        'account_id': value['account_id'],
        'environment': WebhookEnvironmentValuesToJSON(value['environment']),
    };
}

