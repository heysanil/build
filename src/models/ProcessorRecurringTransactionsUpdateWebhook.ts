/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WebhookEnvironmentValues } from './WebhookEnvironmentValues';
import {
    WebhookEnvironmentValuesFromJSON,
    WebhookEnvironmentValuesFromJSONTyped,
    WebhookEnvironmentValuesToJSON,
} from './WebhookEnvironmentValues';

/**
 * This webhook is only sent to [Plaid processor partners](https://plaid.com/docs/auth/partnerships/).
 * 
 * Fired when recurring transactions data is updated. This includes when a new recurring stream is detected or when a new transaction is added to an existing recurring stream. The `RECURRING_TRANSACTIONS_UPDATE` webhook will also fire when one or more attributes of the recurring stream changes, which is usually a result of the addition, update, or removal of transactions to the stream.
 * 
 * After receipt of this webhook, the updated data can be fetched from `/processor/transactions/recurring/get`.
 * @export
 * @interface ProcessorRecurringTransactionsUpdateWebhook
 */
export interface ProcessorRecurringTransactionsUpdateWebhook {
    [key: string]: any | any;
    /**
     * `TRANSACTIONS`
     * @type {string}
     * @memberof ProcessorRecurringTransactionsUpdateWebhook
     */
    webhook_type: string;
    /**
     * `RECURRING_TRANSACTIONS_UPDATE`
     * @type {string}
     * @memberof ProcessorRecurringTransactionsUpdateWebhook
     */
    webhook_code: string;
    /**
     * The ID of the account.
     * @type {string}
     * @memberof ProcessorRecurringTransactionsUpdateWebhook
     */
    account_id: string;
    /**
     * 
     * @type {WebhookEnvironmentValues}
     * @memberof ProcessorRecurringTransactionsUpdateWebhook
     */
    environment: WebhookEnvironmentValues;
}

/**
 * Check if a given object implements the ProcessorRecurringTransactionsUpdateWebhook interface.
 */
export function instanceOfProcessorRecurringTransactionsUpdateWebhook(value: object): boolean {
    if (!('webhook_type' in value)) return false;
    if (!('webhook_code' in value)) return false;
    if (!('account_id' in value)) return false;
    if (!('environment' in value)) return false;
    return true;
}

export function ProcessorRecurringTransactionsUpdateWebhookFromJSON(json: any): ProcessorRecurringTransactionsUpdateWebhook {
    return ProcessorRecurringTransactionsUpdateWebhookFromJSONTyped(json, false);
}

export function ProcessorRecurringTransactionsUpdateWebhookFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProcessorRecurringTransactionsUpdateWebhook {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'webhook_type': json['webhook_type'],
        'webhook_code': json['webhook_code'],
        'account_id': json['account_id'],
        'environment': WebhookEnvironmentValuesFromJSON(json['environment']),
    };
}

export function ProcessorRecurringTransactionsUpdateWebhookToJSON(value?: ProcessorRecurringTransactionsUpdateWebhook | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'webhook_type': value['webhook_type'],
        'webhook_code': value['webhook_code'],
        'account_id': value['account_id'],
        'environment': WebhookEnvironmentValuesToJSON(value['environment']),
    };
}

