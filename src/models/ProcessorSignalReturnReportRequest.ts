/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * ProcessorSignalReturnReportRequest defines the request schema for `/processor/signal/return/report`
 * @export
 * @interface ProcessorSignalReturnReportRequest
 */
export interface ProcessorSignalReturnReportRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * @type {string}
     * @memberof ProcessorSignalReturnReportRequest
     */
    client_id?: string;
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * @type {string}
     * @memberof ProcessorSignalReturnReportRequest
     */
    secret?: string;
    /**
     * The processor token obtained from the Plaid integration partner. Processor tokens are in the format: `processor-<environment>-<identifier>`
     * @type {string}
     * @memberof ProcessorSignalReturnReportRequest
     */
    processor_token: string;
    /**
     * Must be the same as the `client_transaction_id` supplied when calling `/processor/signal/evaluate`
     * @type {string}
     * @memberof ProcessorSignalReturnReportRequest
     */
    client_transaction_id: string;
    /**
     * Must be a valid ACH return code (e.g. "R01")
     * 
     * If formatted incorrectly, this will result in an [`INVALID_FIELD`](/docs/errors/invalid-request/#invalid_field) error.
     * @type {string}
     * @memberof ProcessorSignalReturnReportRequest
     */
    return_code: string;
    /**
     * Date and time when you receive the returns from your payment processors, in ISO 8601 format (`YYYY-MM-DDTHH:mm:ssZ`).
     * @type {Date}
     * @memberof ProcessorSignalReturnReportRequest
     */
    returned_at?: Date;
}

/**
 * Check if a given object implements the ProcessorSignalReturnReportRequest interface.
 */
export function instanceOfProcessorSignalReturnReportRequest(value: object): boolean {
    if (!('processor_token' in value)) return false;
    if (!('client_transaction_id' in value)) return false;
    if (!('return_code' in value)) return false;
    return true;
}

export function ProcessorSignalReturnReportRequestFromJSON(json: any): ProcessorSignalReturnReportRequest {
    return ProcessorSignalReturnReportRequestFromJSONTyped(json, false);
}

export function ProcessorSignalReturnReportRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProcessorSignalReturnReportRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'processor_token': json['processor_token'],
        'client_transaction_id': json['client_transaction_id'],
        'return_code': json['return_code'],
        'returned_at': json['returned_at'] == null ? undefined : (new Date(json['returned_at'])),
    };
}

export function ProcessorSignalReturnReportRequestToJSON(value?: ProcessorSignalReturnReportRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'client_id': value['client_id'],
        'secret': value['secret'],
        'processor_token': value['processor_token'],
        'client_transaction_id': value['client_transaction_id'],
        'return_code': value['return_code'],
        'returned_at': value['returned_at'] == null ? undefined : ((value['returned_at'] as any).toISOString()),
    };
}

