/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AccountBase } from './AccountBase';
import {
    AccountBaseFromJSON,
    AccountBaseFromJSONTyped,
    AccountBaseToJSON,
} from './AccountBase';
import type { Transaction } from './Transaction';
import {
    TransactionFromJSON,
    TransactionFromJSONTyped,
    TransactionToJSON,
} from './Transaction';

/**
 * ProcessorTransactionsGetResponse defines the response schema for `/processor/transactions/get`
 * @export
 * @interface ProcessorTransactionsGetResponse
 */
export interface ProcessorTransactionsGetResponse {
    [key: string]: any | any;
    /**
     * 
     * @type {AccountBase}
     * @memberof ProcessorTransactionsGetResponse
     */
    account: AccountBase;
    /**
     * An array containing transactions from the account. Transactions are returned in reverse chronological order, with the most recent at the beginning of the array. The maximum number of transactions returned is determined by the `count` parameter.
     * @type {Array<Transaction>}
     * @memberof ProcessorTransactionsGetResponse
     */
    transactions: Array<Transaction>;
    /**
     * The total number of transactions available within the date range specified. If `total_transactions` is larger than the size of the `transactions` array, more transactions are available and can be fetched via manipulating the `offset` parameter.
     * @type {number}
     * @memberof ProcessorTransactionsGetResponse
     */
    total_transactions: number;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof ProcessorTransactionsGetResponse
     */
    request_id: string;
}

/**
 * Check if a given object implements the ProcessorTransactionsGetResponse interface.
 */
export function instanceOfProcessorTransactionsGetResponse(value: object): boolean {
    if (!('account' in value)) return false;
    if (!('transactions' in value)) return false;
    if (!('total_transactions' in value)) return false;
    if (!('request_id' in value)) return false;
    return true;
}

export function ProcessorTransactionsGetResponseFromJSON(json: any): ProcessorTransactionsGetResponse {
    return ProcessorTransactionsGetResponseFromJSONTyped(json, false);
}

export function ProcessorTransactionsGetResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProcessorTransactionsGetResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'account': AccountBaseFromJSON(json['account']),
        'transactions': ((json['transactions'] as Array<any>).map(TransactionFromJSON)),
        'total_transactions': json['total_transactions'],
        'request_id': json['request_id'],
    };
}

export function ProcessorTransactionsGetResponseToJSON(value?: ProcessorTransactionsGetResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'account': AccountBaseToJSON(value['account']),
        'transactions': ((value['transactions'] as Array<any>).map(TransactionToJSON)),
        'total_transactions': value['total_transactions'],
        'request_id': value['request_id'],
    };
}

