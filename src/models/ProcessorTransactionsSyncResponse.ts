/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RemovedTransaction } from './RemovedTransaction';
import {
    RemovedTransactionFromJSON,
    RemovedTransactionFromJSONTyped,
    RemovedTransactionToJSON,
} from './RemovedTransaction';
import type { Transaction } from './Transaction';
import {
    TransactionFromJSON,
    TransactionFromJSONTyped,
    TransactionToJSON,
} from './Transaction';

/**
 * ProcessorTransactionsSyncResponse defines the response schema for `/processor/transactions/sync`
 * @export
 * @interface ProcessorTransactionsSyncResponse
 */
export interface ProcessorTransactionsSyncResponse {
    [key: string]: any | any;
    /**
     * Transactions that have been added to the Item since `cursor` ordered by ascending last modified time.
     * @type {Array<Transaction>}
     * @memberof ProcessorTransactionsSyncResponse
     */
    added: Array<Transaction>;
    /**
     * Transactions that have been modified on the Item since `cursor` ordered by ascending last modified time.
     * @type {Array<Transaction>}
     * @memberof ProcessorTransactionsSyncResponse
     */
    modified: Array<Transaction>;
    /**
     * Transactions that have been removed from the Item since `cursor` ordered by ascending last modified time.
     * @type {Array<RemovedTransaction>}
     * @memberof ProcessorTransactionsSyncResponse
     */
    removed: Array<RemovedTransaction>;
    /**
     * Cursor used for fetching any future updates after the latest update provided in this response. The cursor obtained after all pages have been pulled (indicated by `has_more` being `false`) will be valid for at least 1 year. This cursor should be persisted for later calls. If transactions are not yet available, this will be an empty string.
     * @type {string}
     * @memberof ProcessorTransactionsSyncResponse
     */
    next_cursor: string;
    /**
     * Represents if more than requested count of transaction updates exist. If true, the additional updates can be fetched by making an additional request with `cursor` set to `next_cursor`. If `has_more` is true, itâ€™s important to pull all available pages, to make it less likely for underlying data changes to conflict with pagination.
     * @type {boolean}
     * @memberof ProcessorTransactionsSyncResponse
     */
    has_more: boolean;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof ProcessorTransactionsSyncResponse
     */
    request_id: string;
}

/**
 * Check if a given object implements the ProcessorTransactionsSyncResponse interface.
 */
export function instanceOfProcessorTransactionsSyncResponse(value: object): boolean {
    if (!('added' in value)) return false;
    if (!('modified' in value)) return false;
    if (!('removed' in value)) return false;
    if (!('next_cursor' in value)) return false;
    if (!('has_more' in value)) return false;
    if (!('request_id' in value)) return false;
    return true;
}

export function ProcessorTransactionsSyncResponseFromJSON(json: any): ProcessorTransactionsSyncResponse {
    return ProcessorTransactionsSyncResponseFromJSONTyped(json, false);
}

export function ProcessorTransactionsSyncResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProcessorTransactionsSyncResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'added': ((json['added'] as Array<any>).map(TransactionFromJSON)),
        'modified': ((json['modified'] as Array<any>).map(TransactionFromJSON)),
        'removed': ((json['removed'] as Array<any>).map(RemovedTransactionFromJSON)),
        'next_cursor': json['next_cursor'],
        'has_more': json['has_more'],
        'request_id': json['request_id'],
    };
}

export function ProcessorTransactionsSyncResponseToJSON(value?: ProcessorTransactionsSyncResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'added': ((value['added'] as Array<any>).map(TransactionToJSON)),
        'modified': ((value['modified'] as Array<any>).map(TransactionToJSON)),
        'removed': ((value['removed'] as Array<any>).map(RemovedTransactionToJSON)),
        'next_cursor': value['next_cursor'],
        'has_more': value['has_more'],
        'request_id': value['request_id'],
    };
}

