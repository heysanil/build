/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProductStatusBreakdown } from './ProductStatusBreakdown';
import {
    ProductStatusBreakdownFromJSON,
    ProductStatusBreakdownFromJSONTyped,
    ProductStatusBreakdownToJSON,
} from './ProductStatusBreakdown';

/**
 * A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.
 * @export
 * @interface ProductStatus
 */
export interface ProductStatus {
    [key: string]: any | any;
    /**
     * This field is deprecated in favor of the `breakdown` object, which provides more granular institution health data.
     * 
     * `HEALTHY`: the majority of requests are successful
     * `DEGRADED`: only some requests are successful
     * `DOWN`: all requests are failing
     * @type {string}
     * @memberof ProductStatus
     * @deprecated
     */
    status: ProductStatusStatusEnum;
    /**
     * [ISO 8601](https://wikipedia.org/wiki/ISO_8601) formatted timestamp of the last status change for the institution.
     * 
     * @type {Date}
     * @memberof ProductStatus
     */
    last_status_change: Date;
    /**
     * 
     * @type {ProductStatusBreakdown}
     * @memberof ProductStatus
     */
    breakdown: ProductStatusBreakdown;
}


/**
 * @export
 */
export const ProductStatusStatusEnum = {
    Healthy: 'HEALTHY',
    Degraded: 'DEGRADED',
    Down: 'DOWN'
} as const;
export type ProductStatusStatusEnum = typeof ProductStatusStatusEnum[keyof typeof ProductStatusStatusEnum];


/**
 * Check if a given object implements the ProductStatus interface.
 */
export function instanceOfProductStatus(value: object): boolean {
    if (!('status' in value)) return false;
    if (!('last_status_change' in value)) return false;
    if (!('breakdown' in value)) return false;
    return true;
}

export function ProductStatusFromJSON(json: any): ProductStatus {
    return ProductStatusFromJSONTyped(json, false);
}

export function ProductStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductStatus {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'status': json['status'],
        'last_status_change': (new Date(json['last_status_change'])),
        'breakdown': ProductStatusBreakdownFromJSON(json['breakdown']),
    };
}

export function ProductStatusToJSON(value?: ProductStatus | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'status': value['status'],
        'last_status_change': ((value['last_status_change']).toISOString()),
        'breakdown': ProductStatusBreakdownToJSON(value['breakdown']),
    };
}

