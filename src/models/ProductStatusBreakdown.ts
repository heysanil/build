/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A detailed breakdown of the institution's performance for a request type. The values for `success`, `error_plaid`, and `error_institution` sum to 1. The time range used for calculating the breakdown may range from the most recent few minutes to the past six hours. In general, smaller institutions will show status that was calculated over a longer period of time. For Investment updates, which are refreshed less frequently, the period assessed may be 24 hours or more. For more details, see [Institution status details](https://plaid.com/docs/account/activity/#institution-status-details).
 * @export
 * @interface ProductStatusBreakdown
 */
export interface ProductStatusBreakdown {
    [key: string]: any | any;
    /**
     * The percentage of login attempts that are successful, expressed as a decimal.
     * @type {number}
     * @memberof ProductStatusBreakdown
     */
    success: number;
    /**
     * The percentage of logins that are failing due to an internal Plaid issue, expressed as a decimal.
     * 
     * @type {number}
     * @memberof ProductStatusBreakdown
     */
    error_plaid: number;
    /**
     * The percentage of logins that are failing due to an issue in the institution's system, expressed as a decimal.
     * @type {number}
     * @memberof ProductStatusBreakdown
     */
    error_institution: number;
    /**
     * The `refresh_interval` may be `DELAYED` or `STOPPED` even when the success rate is high. This value is only returned for Transactions status breakdowns.
     * @type {string}
     * @memberof ProductStatusBreakdown
     */
    refresh_interval?: ProductStatusBreakdownRefreshIntervalEnum;
}


/**
 * @export
 */
export const ProductStatusBreakdownRefreshIntervalEnum = {
    Normal: 'NORMAL',
    Delayed: 'DELAYED',
    Stopped: 'STOPPED'
} as const;
export type ProductStatusBreakdownRefreshIntervalEnum = typeof ProductStatusBreakdownRefreshIntervalEnum[keyof typeof ProductStatusBreakdownRefreshIntervalEnum];


/**
 * Check if a given object implements the ProductStatusBreakdown interface.
 */
export function instanceOfProductStatusBreakdown(value: object): boolean {
    if (!('success' in value)) return false;
    if (!('error_plaid' in value)) return false;
    if (!('error_institution' in value)) return false;
    return true;
}

export function ProductStatusBreakdownFromJSON(json: any): ProductStatusBreakdown {
    return ProductStatusBreakdownFromJSONTyped(json, false);
}

export function ProductStatusBreakdownFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductStatusBreakdown {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'success': json['success'],
        'error_plaid': json['error_plaid'],
        'error_institution': json['error_institution'],
        'refresh_interval': json['refresh_interval'] == null ? undefined : json['refresh_interval'],
    };
}

export function ProductStatusBreakdownToJSON(value?: ProductStatusBreakdown | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'success': value['success'],
        'error_plaid': value['error_plaid'],
        'error_institution': value['error_institution'],
        'refresh_interval': value['refresh_interval'],
    };
}

