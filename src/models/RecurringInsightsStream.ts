/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RecurringTransactionFrequency } from './RecurringTransactionFrequency';
import {
    RecurringTransactionFrequencyFromJSON,
    RecurringTransactionFrequencyFromJSONTyped,
    RecurringTransactionFrequencyToJSON,
} from './RecurringTransactionFrequency';
import type { TransactionStreamAmount } from './TransactionStreamAmount';
import {
    TransactionStreamAmountFromJSON,
    TransactionStreamAmountFromJSONTyped,
    TransactionStreamAmountToJSON,
} from './TransactionStreamAmount';
import type { TransactionStreamStatus } from './TransactionStreamStatus';
import {
    TransactionStreamStatusFromJSON,
    TransactionStreamStatusFromJSONTyped,
    TransactionStreamStatusToJSON,
} from './TransactionStreamStatus';

/**
 * Insights object for recurring transactions streams.
 * @export
 * @interface RecurringInsightsStream
 */
export interface RecurringInsightsStream {
    [key: string]: any | any;
    /**
     * A unique id for the stream.
     * @type {string}
     * @memberof RecurringInsightsStream
     */
    stream_id: string;
    /**
     * The client-provided raw description of the most recent transaction in the stream.
     * @type {string}
     * @memberof RecurringInsightsStream
     */
    description?: string;
    /**
     * The merchant or primary counterparty associated with the transaction stream.
     * @type {string}
     * @memberof RecurringInsightsStream
     */
    merchant_name: string;
    /**
     * The posted date of the earliest transaction in the stream.
     * @type {Date}
     * @memberof RecurringInsightsStream
     */
    oldest_transaction_date?: Date;
    /**
     * The posted date of the latest transaction in the stream.
     * @type {Date}
     * @memberof RecurringInsightsStream
     */
    newest_transaction_date?: Date;
    /**
     * The average number of days between each of the recurring transactions.
     * @type {number}
     * @memberof RecurringInsightsStream
     */
    average_days_apart: number;
    /**
     * 
     * @type {RecurringTransactionFrequency}
     * @memberof RecurringInsightsStream
     */
    frequency?: RecurringTransactionFrequency;
    /**
     * The number of transactions in this stream.
     * @type {number}
     * @memberof RecurringInsightsStream
     */
    transaction_count?: number;
    /**
     * An array of Plaid transaction IDs belonging to the stream, sorted by posted date.
     * @type {Array<string>}
     * @memberof RecurringInsightsStream
     */
    transaction_ids?: Array<string>;
    /**
     * 
     * @type {TransactionStreamAmount}
     * @memberof RecurringInsightsStream
     */
    average_amount?: TransactionStreamAmount;
    /**
     * 
     * @type {TransactionStreamAmount}
     * @memberof RecurringInsightsStream
     */
    newest_transaction_amount?: TransactionStreamAmount;
    /**
     * Indicates whether the transaction stream is still live.
     * @type {boolean}
     * @memberof RecurringInsightsStream
     */
    is_active: boolean;
    /**
     * 
     * @type {TransactionStreamStatus}
     * @memberof RecurringInsightsStream
     */
    status?: TransactionStreamStatus;
    /**
     * The primary category associated with the transaction stream.
     * @type {string}
     * @memberof RecurringInsightsStream
     */
    personal_finance_category_primary?: string;
    /**
     * The detailed category associated with the transaction stream.
     * @type {string}
     * @memberof RecurringInsightsStream
     */
    personal_finance_category_detailed?: string;
}

/**
 * Check if a given object implements the RecurringInsightsStream interface.
 */
export function instanceOfRecurringInsightsStream(value: object): boolean {
    if (!('stream_id' in value)) return false;
    if (!('merchant_name' in value)) return false;
    if (!('average_days_apart' in value)) return false;
    if (!('is_active' in value)) return false;
    return true;
}

export function RecurringInsightsStreamFromJSON(json: any): RecurringInsightsStream {
    return RecurringInsightsStreamFromJSONTyped(json, false);
}

export function RecurringInsightsStreamFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecurringInsightsStream {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'stream_id': json['stream_id'],
        'description': json['description'] == null ? undefined : json['description'],
        'merchant_name': json['merchant_name'],
        'oldest_transaction_date': json['oldest_transaction_date'] == null ? undefined : (new Date(json['oldest_transaction_date'])),
        'newest_transaction_date': json['newest_transaction_date'] == null ? undefined : (new Date(json['newest_transaction_date'])),
        'average_days_apart': json['average_days_apart'],
        'frequency': json['frequency'] == null ? undefined : RecurringTransactionFrequencyFromJSON(json['frequency']),
        'transaction_count': json['transaction_count'] == null ? undefined : json['transaction_count'],
        'transaction_ids': json['transaction_ids'] == null ? undefined : json['transaction_ids'],
        'average_amount': json['average_amount'] == null ? undefined : TransactionStreamAmountFromJSON(json['average_amount']),
        'newest_transaction_amount': json['newest_transaction_amount'] == null ? undefined : TransactionStreamAmountFromJSON(json['newest_transaction_amount']),
        'is_active': json['is_active'],
        'status': json['status'] == null ? undefined : TransactionStreamStatusFromJSON(json['status']),
        'personal_finance_category_primary': json['personal_finance_category_primary'] == null ? undefined : json['personal_finance_category_primary'],
        'personal_finance_category_detailed': json['personal_finance_category_detailed'] == null ? undefined : json['personal_finance_category_detailed'],
    };
}

export function RecurringInsightsStreamToJSON(value?: RecurringInsightsStream | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'stream_id': value['stream_id'],
        'description': value['description'],
        'merchant_name': value['merchant_name'],
        'oldest_transaction_date': value['oldest_transaction_date'] == null ? undefined : ((value['oldest_transaction_date']).toISOString().substring(0,10)),
        'newest_transaction_date': value['newest_transaction_date'] == null ? undefined : ((value['newest_transaction_date']).toISOString().substring(0,10)),
        'average_days_apart': value['average_days_apart'],
        'frequency': RecurringTransactionFrequencyToJSON(value['frequency']),
        'transaction_count': value['transaction_count'],
        'transaction_ids': value['transaction_ids'],
        'average_amount': TransactionStreamAmountToJSON(value['average_amount']),
        'newest_transaction_amount': TransactionStreamAmountToJSON(value['newest_transaction_amount']),
        'is_active': value['is_active'],
        'status': TransactionStreamStatusToJSON(value['status']),
        'personal_finance_category_primary': value['personal_finance_category_primary'],
        'personal_finance_category_detailed': value['personal_finance_category_detailed'],
    };
}

