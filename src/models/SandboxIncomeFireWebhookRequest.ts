/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SandboxIncomeWebhookFireRequestWebhookCode } from './SandboxIncomeWebhookFireRequestWebhookCode';
import {
    SandboxIncomeWebhookFireRequestWebhookCodeFromJSON,
    SandboxIncomeWebhookFireRequestWebhookCodeFromJSONTyped,
    SandboxIncomeWebhookFireRequestWebhookCodeToJSON,
} from './SandboxIncomeWebhookFireRequestWebhookCode';

/**
 * SandboxIncomeFireWebhookRequest defines the request schema for `/sandbox/income/fire_webhook`
 * @export
 * @interface SandboxIncomeFireWebhookRequest
 */
export interface SandboxIncomeFireWebhookRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * @type {string}
     * @memberof SandboxIncomeFireWebhookRequest
     */
    client_id?: string;
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * @type {string}
     * @memberof SandboxIncomeFireWebhookRequest
     */
    secret?: string;
    /**
     * The Item ID associated with the verification.
     * @type {string}
     * @memberof SandboxIncomeFireWebhookRequest
     */
    item_id: string;
    /**
     * The Plaid `user_id` of the User associated with this webhook, warning, or error.
     * @type {string}
     * @memberof SandboxIncomeFireWebhookRequest
     */
    user_id?: string;
    /**
     * The URL to which the webhook should be sent.
     * @type {string}
     * @memberof SandboxIncomeFireWebhookRequest
     */
    webhook: string;
    /**
     * `VERIFICATION_STATUS_PROCESSING_COMPLETE`: The income verification status processing has completed. If the user uploaded multiple documents, this webhook will fire when all documents have finished processing. Call the `/income/verification/paystubs/get` endpoint and check the document metadata to see which documents were successfully parsed.
     * 
     * `VERIFICATION_STATUS_PROCESSING_FAILED`: A failure occurred when attempting to process the verification documentation.
     * 
     * `VERIFICATION_STATUS_PENDING_APPROVAL`: (deprecated) The income verification has been sent to the user for review.
     * @type {string}
     * @memberof SandboxIncomeFireWebhookRequest
     */
    verification_status?: SandboxIncomeFireWebhookRequestVerificationStatusEnum;
    /**
     * 
     * @type {SandboxIncomeWebhookFireRequestWebhookCode}
     * @memberof SandboxIncomeFireWebhookRequest
     */
    webhook_code: SandboxIncomeWebhookFireRequestWebhookCode;
}


/**
 * @export
 */
export const SandboxIncomeFireWebhookRequestVerificationStatusEnum = {
    ProcessingComplete: 'VERIFICATION_STATUS_PROCESSING_COMPLETE',
    ProcessingFailed: 'VERIFICATION_STATUS_PROCESSING_FAILED',
    PendingApproval: 'VERIFICATION_STATUS_PENDING_APPROVAL'
} as const;
export type SandboxIncomeFireWebhookRequestVerificationStatusEnum = typeof SandboxIncomeFireWebhookRequestVerificationStatusEnum[keyof typeof SandboxIncomeFireWebhookRequestVerificationStatusEnum];


/**
 * Check if a given object implements the SandboxIncomeFireWebhookRequest interface.
 */
export function instanceOfSandboxIncomeFireWebhookRequest(value: object): boolean {
    if (!('item_id' in value)) return false;
    if (!('webhook' in value)) return false;
    if (!('webhook_code' in value)) return false;
    return true;
}

export function SandboxIncomeFireWebhookRequestFromJSON(json: any): SandboxIncomeFireWebhookRequest {
    return SandboxIncomeFireWebhookRequestFromJSONTyped(json, false);
}

export function SandboxIncomeFireWebhookRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SandboxIncomeFireWebhookRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'item_id': json['item_id'],
        'user_id': json['user_id'] == null ? undefined : json['user_id'],
        'webhook': json['webhook'],
        'verification_status': json['verification_status'] == null ? undefined : json['verification_status'],
        'webhook_code': SandboxIncomeWebhookFireRequestWebhookCodeFromJSON(json['webhook_code']),
    };
}

export function SandboxIncomeFireWebhookRequestToJSON(value?: SandboxIncomeFireWebhookRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'client_id': value['client_id'],
        'secret': value['secret'],
        'item_id': value['item_id'],
        'user_id': value['user_id'],
        'webhook': value['webhook'],
        'verification_status': value['verification_status'],
        'webhook_code': SandboxIncomeWebhookFireRequestWebhookCodeToJSON(value['webhook_code']),
    };
}

