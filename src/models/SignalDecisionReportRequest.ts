/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SignalDecisionOutcome } from './SignalDecisionOutcome';
import {
    SignalDecisionOutcomeFromJSON,
    SignalDecisionOutcomeFromJSONTyped,
    SignalDecisionOutcomeToJSON,
} from './SignalDecisionOutcome';
import type { SignalPaymentMethod } from './SignalPaymentMethod';
import {
    SignalPaymentMethodFromJSON,
    SignalPaymentMethodFromJSONTyped,
    SignalPaymentMethodToJSON,
} from './SignalPaymentMethod';

/**
 * SignalDecisionReportRequest defines the request schema for `/signal/decision/report`
 * @export
 * @interface SignalDecisionReportRequest
 */
export interface SignalDecisionReportRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * @type {string}
     * @memberof SignalDecisionReportRequest
     */
    client_id?: string;
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * @type {string}
     * @memberof SignalDecisionReportRequest
     */
    secret?: string;
    /**
     * Must be the same as the `client_transaction_id` supplied when calling `/signal/evaluate`
     * @type {string}
     * @memberof SignalDecisionReportRequest
     */
    client_transaction_id: string;
    /**
     * `true` if the ACH transaction was initiated, `false` otherwise.
     * 
     * This field must be returned as a boolean. If formatted incorrectly, this will result in an [`INVALID_FIELD`](/docs/errors/invalid-request/#invalid_field) error.
     * @type {boolean}
     * @memberof SignalDecisionReportRequest
     */
    initiated: boolean;
    /**
     * The actual number of days (hold time) since the ACH debit transaction that you wait before making funds available to your customers. The holding time could affect the ACH return rate.
     * 
     * For example, use 0 if you make funds available to your customers instantly or the same day following the debit transaction, or 1 if you make funds available the next day following the debit initialization.
     * @type {number}
     * @memberof SignalDecisionReportRequest
     */
    days_funds_on_hold?: number;
    /**
     * 
     * @type {SignalDecisionOutcome}
     * @memberof SignalDecisionReportRequest
     */
    decision_outcome?: SignalDecisionOutcome;
    /**
     * 
     * @type {SignalPaymentMethod}
     * @memberof SignalDecisionReportRequest
     */
    payment_method?: SignalPaymentMethod;
    /**
     * The amount (in USD) made available to your customers instantly following the debit transaction. It could be a partial amount of the requested transaction (example: 102.05).
     * @type {number}
     * @memberof SignalDecisionReportRequest
     */
    amount_instantly_available?: number;
}

/**
 * Check if a given object implements the SignalDecisionReportRequest interface.
 */
export function instanceOfSignalDecisionReportRequest(value: object): boolean {
    if (!('client_transaction_id' in value)) return false;
    if (!('initiated' in value)) return false;
    return true;
}

export function SignalDecisionReportRequestFromJSON(json: any): SignalDecisionReportRequest {
    return SignalDecisionReportRequestFromJSONTyped(json, false);
}

export function SignalDecisionReportRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SignalDecisionReportRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'client_transaction_id': json['client_transaction_id'],
        'initiated': json['initiated'],
        'days_funds_on_hold': json['days_funds_on_hold'] == null ? undefined : json['days_funds_on_hold'],
        'decision_outcome': json['decision_outcome'] == null ? undefined : SignalDecisionOutcomeFromJSON(json['decision_outcome']),
        'payment_method': json['payment_method'] == null ? undefined : SignalPaymentMethodFromJSON(json['payment_method']),
        'amount_instantly_available': json['amount_instantly_available'] == null ? undefined : json['amount_instantly_available'],
    };
}

export function SignalDecisionReportRequestToJSON(value?: SignalDecisionReportRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'client_id': value['client_id'],
        'secret': value['secret'],
        'client_transaction_id': value['client_transaction_id'],
        'initiated': value['initiated'],
        'days_funds_on_hold': value['days_funds_on_hold'],
        'decision_outcome': SignalDecisionOutcomeToJSON(value['decision_outcome']),
        'payment_method': SignalPaymentMethodToJSON(value['payment_method']),
        'amount_instantly_available': value['amount_instantly_available'],
    };
}

