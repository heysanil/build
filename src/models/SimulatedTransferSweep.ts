/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SweepStatus } from './SweepStatus';
import {
    SweepStatusFromJSON,
    SweepStatusFromJSONTyped,
    SweepStatusToJSON,
} from './SweepStatus';
import type { SweepTrigger } from './SweepTrigger';
import {
    SweepTriggerFromJSON,
    SweepTriggerFromJSONTyped,
    SweepTriggerToJSON,
} from './SweepTrigger';

/**
 * A sweep returned from the `/sandbox/transfer/sweep/simulate` endpoint.
 * Can be null if there are no transfers to include in a sweep.
 * @export
 * @interface SimulatedTransferSweep
 */
export interface SimulatedTransferSweep {
    [key: string]: any | any;
    /**
     * Identifier of the sweep.
     * @type {string}
     * @memberof SimulatedTransferSweep
     */
    id: string;
    /**
     * The id of the funding account to use, available in the Plaid Dashboard. This determines which of your business checking accounts will be credited or debited.
     * @type {string}
     * @memberof SimulatedTransferSweep
     */
    funding_account_id: string;
    /**
     * The datetime when the sweep occurred, in RFC 3339 format.
     * @type {Date}
     * @memberof SimulatedTransferSweep
     */
    created: Date;
    /**
     * Signed decimal amount of the sweep as it appears on your sweep account ledger (e.g. "-10.00")
     * 
     * If amount is not present, the sweep was net-settled to zero and outstanding debits and credits between the sweep account and Plaid are balanced.
     * @type {string}
     * @memberof SimulatedTransferSweep
     */
    amount: string;
    /**
     * The currency of the sweep, e.g. "USD".
     * @type {string}
     * @memberof SimulatedTransferSweep
     */
    iso_currency_code: string;
    /**
     * The date when the sweep settled, in the YYYY-MM-DD format.
     * @type {Date}
     * @memberof SimulatedTransferSweep
     */
    settled: Date | null;
    /**
     * 
     * @type {SweepStatus}
     * @memberof SimulatedTransferSweep
     */
    status?: SweepStatus;
    /**
     * 
     * @type {SweepTrigger}
     * @memberof SimulatedTransferSweep
     */
    trigger?: SweepTrigger;
    /**
     * The description of the deposit that will be passed to the receiving bank (up to 10 characters). Note that banks utilize this field differently, and may or may not show it on the bank statement.
     * @type {string}
     * @memberof SimulatedTransferSweep
     */
    description?: string;
    /**
     * The trace identifier for the transfer based on its network. This will only be set after the transfer has posted.
     * 
     * For `ach` or `same-day-ach` transfers, this is the ACH trace number.
     * For `rtp` transfers, this is the Transaction Identification number.
     * For `wire` transfers, this is the IMAD (Input Message Accountability Data) number.
     * @type {string}
     * @memberof SimulatedTransferSweep
     */
    network_trace_id?: string;
}

/**
 * Check if a given object implements the SimulatedTransferSweep interface.
 */
export function instanceOfSimulatedTransferSweep(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('funding_account_id' in value)) return false;
    if (!('created' in value)) return false;
    if (!('amount' in value)) return false;
    if (!('iso_currency_code' in value)) return false;
    if (!('settled' in value)) return false;
    return true;
}

export function SimulatedTransferSweepFromJSON(json: any): SimulatedTransferSweep {
    return SimulatedTransferSweepFromJSONTyped(json, false);
}

export function SimulatedTransferSweepFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimulatedTransferSweep {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'id': json['id'],
        'funding_account_id': json['funding_account_id'],
        'created': (new Date(json['created'])),
        'amount': json['amount'],
        'iso_currency_code': json['iso_currency_code'],
        'settled': (json['settled'] == null ? null : new Date(json['settled'])),
        'status': json['status'] == null ? undefined : SweepStatusFromJSON(json['status']),
        'trigger': json['trigger'] == null ? undefined : SweepTriggerFromJSON(json['trigger']),
        'description': json['description'] == null ? undefined : json['description'],
        'network_trace_id': json['network_trace_id'] == null ? undefined : json['network_trace_id'],
    };
}

export function SimulatedTransferSweepToJSON(value?: SimulatedTransferSweep | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'id': value['id'],
        'funding_account_id': value['funding_account_id'],
        'created': ((value['created']).toISOString()),
        'amount': value['amount'],
        'iso_currency_code': value['iso_currency_code'],
        'settled': (value['settled'] == null ? null : (value['settled'] as any).toISOString().substring(0,10)),
        'status': SweepStatusToJSON(value['status']),
        'trigger': SweepTriggerToJSON(value['trigger']),
        'description': value['description'],
        'network_trace_id': value['network_trace_id'],
    };
}

