/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The schema below describes the various `types` and corresponding `subtypes` that Plaid recognizes and reports for financial institution accounts.
 * @export
 * @interface StandaloneAccountType
 */
export interface StandaloneAccountType {
    [key: string]: any | any;
    /**
     * An account type holding cash, in which funds are deposited. Supported products for `depository` accounts are: Auth (`checking` and `savings` types only), Balance, Transactions, Identity, Payment Initiation, Assets, and Investments (`cash management` type only).
     * @type {string}
     * @memberof StandaloneAccountType
     */
    depository: string;
    /**
     * A credit card type account. Supported products for `credit` accounts are: Balance, Transactions, Identity, and Liabilities.
     * @type {string}
     * @memberof StandaloneAccountType
     */
    credit: string;
    /**
     * A loan type account. Supported products for `loan` accounts are: Balance, Liabilities, and Transactions.
     * @type {string}
     * @memberof StandaloneAccountType
     */
    loan: string;
    /**
     * An investment account. Supported products for `investment` accounts are: Balance and Investments. In API versions 2018-05-22 and earlier, this type is called `brokerage`.
     * @type {string}
     * @memberof StandaloneAccountType
     */
    investment: string;
    /**
     * Other or unknown account type. Supported products for `other` accounts are: Balance, Transactions, Identity, and Assets.
     * @type {string}
     * @memberof StandaloneAccountType
     */
    other: string;
}

/**
 * Check if a given object implements the StandaloneAccountType interface.
 */
export function instanceOfStandaloneAccountType(value: object): boolean {
    if (!('depository' in value)) return false;
    if (!('credit' in value)) return false;
    if (!('loan' in value)) return false;
    if (!('investment' in value)) return false;
    if (!('other' in value)) return false;
    return true;
}

export function StandaloneAccountTypeFromJSON(json: any): StandaloneAccountType {
    return StandaloneAccountTypeFromJSONTyped(json, false);
}

export function StandaloneAccountTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): StandaloneAccountType {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'depository': json['depository'],
        'credit': json['credit'],
        'loan': json['loan'],
        'investment': json['investment'],
        'other': json['other'],
    };
}

export function StandaloneAccountTypeToJSON(value?: StandaloneAccountType | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'depository': value['depository'],
        'credit': value['credit'],
        'loan': value['loan'],
        'investment': value['investment'],
        'other': value['other'],
    };
}

