/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Valid values for investment transaction types and subtypes. Note that transactions representing inflow of cash will appear as negative amounts, outflow of cash will appear as positive amounts.
 * @export
 * @interface StandaloneInvestmentTransactionType
 */
export interface StandaloneInvestmentTransactionType {
    [key: string]: any | any;
    /**
     * Buying an investment
     * @type {string}
     * @memberof StandaloneInvestmentTransactionType
     */
    buy: string;
    /**
     * Selling an investment
     * @type {string}
     * @memberof StandaloneInvestmentTransactionType
     */
    sell: string;
    /**
     * A cancellation of a pending transaction
     * @type {string}
     * @memberof StandaloneInvestmentTransactionType
     */
    cancel: string;
    /**
     * Activity that modifies a cash position
     * @type {string}
     * @memberof StandaloneInvestmentTransactionType
     */
    cash: string;
    /**
     * Fees on the account, e.g. commission, bookkeeping, options-related.
     * @type {string}
     * @memberof StandaloneInvestmentTransactionType
     */
    fee: string;
    /**
     * Activity that modifies a position, but not through buy/sell activity e.g. options exercise, portfolio transfer
     * @type {string}
     * @memberof StandaloneInvestmentTransactionType
     */
    transfer: string;
}

/**
 * Check if a given object implements the StandaloneInvestmentTransactionType interface.
 */
export function instanceOfStandaloneInvestmentTransactionType(value: object): boolean {
    if (!('buy' in value)) return false;
    if (!('sell' in value)) return false;
    if (!('cancel' in value)) return false;
    if (!('cash' in value)) return false;
    if (!('fee' in value)) return false;
    if (!('transfer' in value)) return false;
    return true;
}

export function StandaloneInvestmentTransactionTypeFromJSON(json: any): StandaloneInvestmentTransactionType {
    return StandaloneInvestmentTransactionTypeFromJSONTyped(json, false);
}

export function StandaloneInvestmentTransactionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): StandaloneInvestmentTransactionType {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'buy': json['buy'],
        'sell': json['sell'],
        'cancel': json['cancel'],
        'cash': json['cash'],
        'fee': json['fee'],
        'transfer': json['transfer'],
    };
}

export function StandaloneInvestmentTransactionTypeToJSON(value?: StandaloneInvestmentTransactionType | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'buy': value['buy'],
        'sell': value['sell'],
        'cancel': value['cancel'],
        'cash': value['cash'],
        'fee': value['fee'],
        'transfer': value['transfer'],
    };
}

