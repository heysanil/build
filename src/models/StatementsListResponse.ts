/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StatementsAccount } from './StatementsAccount';
import {
    StatementsAccountFromJSON,
    StatementsAccountFromJSONTyped,
    StatementsAccountToJSON,
} from './StatementsAccount';

/**
 * StatementsListResponse defines the response schema for `/statements/list`
 * @export
 * @interface StatementsListResponse
 */
export interface StatementsListResponse {
    [key: string]: any | any;
    /**
     * 
     * @type {Array<StatementsAccount>}
     * @memberof StatementsListResponse
     */
    accounts: Array<StatementsAccount>;
    /**
     * The Plaid Institution ID associated with the Item.
     * @type {string}
     * @memberof StatementsListResponse
     */
    institution_id: string;
    /**
     * The name of the institution associated with the Item.
     * @type {string}
     * @memberof StatementsListResponse
     */
    institution_name: string;
    /**
     * The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
     * @type {string}
     * @memberof StatementsListResponse
     */
    item_id: string;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof StatementsListResponse
     */
    request_id: string;
}

/**
 * Check if a given object implements the StatementsListResponse interface.
 */
export function instanceOfStatementsListResponse(value: object): boolean {
    if (!('accounts' in value)) return false;
    if (!('institution_id' in value)) return false;
    if (!('institution_name' in value)) return false;
    if (!('item_id' in value)) return false;
    if (!('request_id' in value)) return false;
    return true;
}

export function StatementsListResponseFromJSON(json: any): StatementsListResponse {
    return StatementsListResponseFromJSONTyped(json, false);
}

export function StatementsListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StatementsListResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'accounts': ((json['accounts'] as Array<any>).map(StatementsAccountFromJSON)),
        'institution_id': json['institution_id'],
        'institution_name': json['institution_name'],
        'item_id': json['item_id'],
        'request_id': json['request_id'],
    };
}

export function StatementsListResponseToJSON(value?: StatementsListResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'accounts': ((value['accounts'] as Array<any>).map(StatementsAccountToJSON)),
        'institution_id': value['institution_id'],
        'institution_name': value['institution_name'],
        'item_id': value['item_id'],
        'request_id': value['request_id'],
    };
}

