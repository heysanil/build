/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * StatementsRefreshRequest defines the request schema for `/statements/refresh`
 * @export
 * @interface StatementsRefreshRequest
 */
export interface StatementsRefreshRequest {
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof StatementsRefreshRequest
     */
    access_token: string;
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * @type {string}
     * @memberof StatementsRefreshRequest
     */
    client_id?: string;
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * @type {string}
     * @memberof StatementsRefreshRequest
     */
    secret?: string;
    /**
     * The start date for statements, in “YYYY-MM-DD” format, e.g. "2023-08-30". To determine whether a statement falls within the specified date range, Plaid will use the statement posted date. The statement posted date is typically either the last day of the statement period, or the following day.
     * @type {Date}
     * @memberof StatementsRefreshRequest
     */
    start_date: Date;
    /**
     * The end date for statements, in “YYYY-MM-DD” format, e.g. "2023-10-30". You can request up to two years of data. To determine whether a statement falls within the specified date range, Plaid will use the statement posted date. The statement posted date is typically either the last day of the statement period, or the following day.
     * @type {Date}
     * @memberof StatementsRefreshRequest
     */
    end_date: Date;
}

/**
 * Check if a given object implements the StatementsRefreshRequest interface.
 */
export function instanceOfStatementsRefreshRequest(value: object): boolean {
    if (!('access_token' in value)) return false;
    if (!('start_date' in value)) return false;
    if (!('end_date' in value)) return false;
    return true;
}

export function StatementsRefreshRequestFromJSON(json: any): StatementsRefreshRequest {
    return StatementsRefreshRequestFromJSONTyped(json, false);
}

export function StatementsRefreshRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StatementsRefreshRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'access_token': json['access_token'],
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'start_date': (new Date(json['start_date'])),
        'end_date': (new Date(json['end_date'])),
    };
}

export function StatementsRefreshRequestToJSON(value?: StatementsRefreshRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'access_token': value['access_token'],
        'client_id': value['client_id'],
        'secret': value['secret'],
        'start_date': ((value['start_date']).toISOString().substring(0,10)),
        'end_date': ((value['end_date']).toISOString().substring(0,10)),
    };
}

