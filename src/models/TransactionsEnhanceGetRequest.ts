/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ClientProvidedRawTransaction } from './ClientProvidedRawTransaction';
import {
    ClientProvidedRawTransactionFromJSON,
    ClientProvidedRawTransactionFromJSONTyped,
    ClientProvidedRawTransactionToJSON,
} from './ClientProvidedRawTransaction';

/**
 * TransactionsEnhanceGetRequest defines the request schema for `/transactions/enhance`.
 * @export
 * @interface TransactionsEnhanceGetRequest
 */
export interface TransactionsEnhanceGetRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * @type {string}
     * @memberof TransactionsEnhanceGetRequest
     */
    client_id?: string;
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * @type {string}
     * @memberof TransactionsEnhanceGetRequest
     */
    secret?: string;
    /**
     * The type of account for the requested transactions (`depository` or `credit`).
     * @type {string}
     * @memberof TransactionsEnhanceGetRequest
     */
    account_type: string;
    /**
     * An array of raw transactions to be enhanced.
     * @type {Array<ClientProvidedRawTransaction>}
     * @memberof TransactionsEnhanceGetRequest
     */
    transactions: Array<ClientProvidedRawTransaction>;
}

/**
 * Check if a given object implements the TransactionsEnhanceGetRequest interface.
 */
export function instanceOfTransactionsEnhanceGetRequest(value: object): boolean {
    if (!('account_type' in value)) return false;
    if (!('transactions' in value)) return false;
    return true;
}

export function TransactionsEnhanceGetRequestFromJSON(json: any): TransactionsEnhanceGetRequest {
    return TransactionsEnhanceGetRequestFromJSONTyped(json, false);
}

export function TransactionsEnhanceGetRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionsEnhanceGetRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'account_type': json['account_type'],
        'transactions': ((json['transactions'] as Array<any>).map(ClientProvidedRawTransactionFromJSON)),
    };
}

export function TransactionsEnhanceGetRequestToJSON(value?: TransactionsEnhanceGetRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'client_id': value['client_id'],
        'secret': value['secret'],
        'account_type': value['account_type'],
        'transactions': ((value['transactions'] as Array<any>).map(ClientProvidedRawTransactionToJSON)),
    };
}

