/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransactionsGetRequestOptions } from './TransactionsGetRequestOptions';
import {
    TransactionsGetRequestOptionsFromJSON,
    TransactionsGetRequestOptionsFromJSONTyped,
    TransactionsGetRequestOptionsToJSON,
} from './TransactionsGetRequestOptions';

/**
 * TransactionsGetRequest defines the request schema for `/transactions/get`
 * @export
 * @interface TransactionsGetRequest
 */
export interface TransactionsGetRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * @type {string}
     * @memberof TransactionsGetRequest
     */
    client_id?: string;
    /**
     * 
     * @type {TransactionsGetRequestOptions}
     * @memberof TransactionsGetRequest
     */
    options?: TransactionsGetRequestOptions;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof TransactionsGetRequest
     */
    access_token: string;
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * @type {string}
     * @memberof TransactionsGetRequest
     */
    secret?: string;
    /**
     * The earliest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.
     * @type {Date}
     * @memberof TransactionsGetRequest
     */
    start_date: Date;
    /**
     * The latest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.
     * @type {Date}
     * @memberof TransactionsGetRequest
     */
    end_date: Date;
}

/**
 * Check if a given object implements the TransactionsGetRequest interface.
 */
export function instanceOfTransactionsGetRequest(value: object): boolean {
    if (!('access_token' in value)) return false;
    if (!('start_date' in value)) return false;
    if (!('end_date' in value)) return false;
    return true;
}

export function TransactionsGetRequestFromJSON(json: any): TransactionsGetRequest {
    return TransactionsGetRequestFromJSONTyped(json, false);
}

export function TransactionsGetRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionsGetRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'options': json['options'] == null ? undefined : TransactionsGetRequestOptionsFromJSON(json['options']),
        'access_token': json['access_token'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'start_date': (new Date(json['start_date'])),
        'end_date': (new Date(json['end_date'])),
    };
}

export function TransactionsGetRequestToJSON(value?: TransactionsGetRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'client_id': value['client_id'],
        'options': TransactionsGetRequestOptionsToJSON(value['options']),
        'access_token': value['access_token'],
        'secret': value['secret'],
        'start_date': ((value['start_date']).toISOString().substring(0,10)),
        'end_date': ((value['end_date']).toISOString().substring(0,10)),
    };
}

