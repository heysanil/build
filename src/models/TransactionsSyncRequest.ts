/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransactionsSyncRequestOptions } from './TransactionsSyncRequestOptions';
import {
    TransactionsSyncRequestOptionsFromJSON,
    TransactionsSyncRequestOptionsFromJSONTyped,
    TransactionsSyncRequestOptionsToJSON,
} from './TransactionsSyncRequestOptions';

/**
 * TransactionsSyncRequest defines the request schema for `/transactions/sync`
 * @export
 * @interface TransactionsSyncRequest
 */
export interface TransactionsSyncRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * @type {string}
     * @memberof TransactionsSyncRequest
     */
    client_id?: string;
    /**
     * The access token associated with the Item data is being requested for.
     * @type {string}
     * @memberof TransactionsSyncRequest
     */
    access_token: string;
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * @type {string}
     * @memberof TransactionsSyncRequest
     */
    secret?: string;
    /**
     * The cursor value represents the last update requested. Providing it will cause the response to only return changes after this update.
     * If omitted, the entire history of updates will be returned, starting with the first-added transactions on the Item. The cursor also accepts the special value of `"now"`, which can be used to fast-forward the cursor as part of migrating an existing Item from `/transactions/get` to `/transactions/sync`. For more information, see the [Transactions sync migration guide](https://plaid.com/docs/transactions/sync-migration/). Note that using the `"now"` value is not supported for any use case other than migrating existing Items from `/transactions/get`.
     * 
     * The upper-bound length of this cursor is 256 characters of base64.
     * @type {string}
     * @memberof TransactionsSyncRequest
     */
    cursor?: string;
    /**
     * The number of transaction updates to fetch.
     * @type {number}
     * @memberof TransactionsSyncRequest
     */
    count?: number;
    /**
     * 
     * @type {TransactionsSyncRequestOptions}
     * @memberof TransactionsSyncRequest
     */
    options?: TransactionsSyncRequestOptions;
}

/**
 * Check if a given object implements the TransactionsSyncRequest interface.
 */
export function instanceOfTransactionsSyncRequest(value: object): boolean {
    if (!('access_token' in value)) return false;
    return true;
}

export function TransactionsSyncRequestFromJSON(json: any): TransactionsSyncRequest {
    return TransactionsSyncRequestFromJSONTyped(json, false);
}

export function TransactionsSyncRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionsSyncRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'access_token': json['access_token'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'cursor': json['cursor'] == null ? undefined : json['cursor'],
        'count': json['count'] == null ? undefined : json['count'],
        'options': json['options'] == null ? undefined : TransactionsSyncRequestOptionsFromJSON(json['options']),
    };
}

export function TransactionsSyncRequestToJSON(value?: TransactionsSyncRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'client_id': value['client_id'],
        'access_token': value['access_token'],
        'secret': value['secret'],
        'cursor': value['cursor'],
        'count': value['count'],
        'options': TransactionsSyncRequestOptionsToJSON(value['options']),
    };
}

