/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AccountBase } from './AccountBase';
import {
    AccountBaseFromJSON,
    AccountBaseFromJSONTyped,
    AccountBaseToJSON,
} from './AccountBase';
import type { RemovedTransaction } from './RemovedTransaction';
import {
    RemovedTransactionFromJSON,
    RemovedTransactionFromJSONTyped,
    RemovedTransactionToJSON,
} from './RemovedTransaction';
import type { Transaction } from './Transaction';
import {
    TransactionFromJSON,
    TransactionFromJSONTyped,
    TransactionToJSON,
} from './Transaction';
import type { TransactionsUpdateStatus } from './TransactionsUpdateStatus';
import {
    TransactionsUpdateStatusFromJSON,
    TransactionsUpdateStatusFromJSONTyped,
    TransactionsUpdateStatusToJSON,
} from './TransactionsUpdateStatus';

/**
 * TransactionsSyncResponse defines the response schema for `/transactions/sync`
 * @export
 * @interface TransactionsSyncResponse
 */
export interface TransactionsSyncResponse {
    [key: string]: any | any;
    /**
     * 
     * @type {TransactionsUpdateStatus}
     * @memberof TransactionsSyncResponse
     */
    transactions_update_status?: TransactionsUpdateStatus;
    /**
     * An array of accounts at a financial institution associated with the transactions in this response.
     * @type {Array<AccountBase>}
     * @memberof TransactionsSyncResponse
     */
    accounts?: Array<AccountBase>;
    /**
     * Transactions that have been added to the Item since `cursor` ordered by ascending last modified time.
     * @type {Array<Transaction>}
     * @memberof TransactionsSyncResponse
     */
    added: Array<Transaction>;
    /**
     * Transactions that have been modified on the Item since `cursor` ordered by ascending last modified time.
     * @type {Array<Transaction>}
     * @memberof TransactionsSyncResponse
     */
    modified: Array<Transaction>;
    /**
     * Transactions that have been removed from the Item since `cursor` ordered by ascending last modified time.
     * @type {Array<RemovedTransaction>}
     * @memberof TransactionsSyncResponse
     */
    removed: Array<RemovedTransaction>;
    /**
     * Cursor used for fetching any future updates after the latest update provided in this response. The cursor obtained after all pages have been pulled (indicated by `has_more` being `false`) will be valid for at least 1 year. This cursor should be persisted for later calls. If transactions are not yet available, this will be an empty string.
     * @type {string}
     * @memberof TransactionsSyncResponse
     */
    next_cursor: string;
    /**
     * Represents if more than requested count of transaction updates exist. If true, the additional updates can be fetched by making an additional request with `cursor` set to `next_cursor`. If `has_more` is true, itâ€™s important to pull all available pages, to make it less likely for underlying data changes to conflict with pagination.
     * @type {boolean}
     * @memberof TransactionsSyncResponse
     */
    has_more: boolean;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof TransactionsSyncResponse
     */
    request_id: string;
}

/**
 * Check if a given object implements the TransactionsSyncResponse interface.
 */
export function instanceOfTransactionsSyncResponse(value: object): boolean {
    if (!('added' in value)) return false;
    if (!('modified' in value)) return false;
    if (!('removed' in value)) return false;
    if (!('next_cursor' in value)) return false;
    if (!('has_more' in value)) return false;
    if (!('request_id' in value)) return false;
    return true;
}

export function TransactionsSyncResponseFromJSON(json: any): TransactionsSyncResponse {
    return TransactionsSyncResponseFromJSONTyped(json, false);
}

export function TransactionsSyncResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionsSyncResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'transactions_update_status': json['transactions_update_status'] == null ? undefined : TransactionsUpdateStatusFromJSON(json['transactions_update_status']),
        'accounts': json['accounts'] == null ? undefined : ((json['accounts'] as Array<any>).map(AccountBaseFromJSON)),
        'added': ((json['added'] as Array<any>).map(TransactionFromJSON)),
        'modified': ((json['modified'] as Array<any>).map(TransactionFromJSON)),
        'removed': ((json['removed'] as Array<any>).map(RemovedTransactionFromJSON)),
        'next_cursor': json['next_cursor'],
        'has_more': json['has_more'],
        'request_id': json['request_id'],
    };
}

export function TransactionsSyncResponseToJSON(value?: TransactionsSyncResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'transactions_update_status': TransactionsUpdateStatusToJSON(value['transactions_update_status']),
        'accounts': value['accounts'] == null ? undefined : ((value['accounts'] as Array<any>).map(AccountBaseToJSON)),
        'added': ((value['added'] as Array<any>).map(TransactionToJSON)),
        'modified': ((value['modified'] as Array<any>).map(TransactionToJSON)),
        'removed': ((value['removed'] as Array<any>).map(RemovedTransactionToJSON)),
        'next_cursor': value['next_cursor'],
        'has_more': value['has_more'],
        'request_id': value['request_id'],
    };
}

