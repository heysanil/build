/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OmittableTransferType } from './OmittableTransferType';
import {
    OmittableTransferTypeFromJSON,
    OmittableTransferTypeFromJSONTyped,
    OmittableTransferTypeToJSON,
} from './OmittableTransferType';
import type { TransferEventType } from './TransferEventType';
import {
    TransferEventTypeFromJSON,
    TransferEventTypeFromJSONTyped,
    TransferEventTypeToJSON,
} from './TransferEventType';
import type { TransferFailure } from './TransferFailure';
import {
    TransferFailureFromJSON,
    TransferFailureFromJSONTyped,
    TransferFailureToJSON,
} from './TransferFailure';

/**
 * Represents an event in the Transfers API.
 * @export
 * @interface TransferEvent
 */
export interface TransferEvent {
    [key: string]: any | any;
    /**
     * Plaid’s unique identifier for this event. IDs are sequential unsigned 64-bit integers.
     * @type {number}
     * @memberof TransferEvent
     */
    event_id: number;
    /**
     * The datetime when this event occurred. This will be of the form `2006-01-02T15:04:05Z`.
     * @type {Date}
     * @memberof TransferEvent
     */
    timestamp: Date;
    /**
     * 
     * @type {TransferEventType}
     * @memberof TransferEvent
     */
    event_type: TransferEventType;
    /**
     * The account ID associated with the transfer. This field is omitted for Plaid Ledger Sweep events.
     * @type {string}
     * @memberof TransferEvent
     */
    account_id?: string;
    /**
     * The id of the associated funding account, available in the Plaid Dashboard. If present, this indicates which of your business checking accounts will be credited or debited.
     * @type {string}
     * @memberof TransferEvent
     */
    funding_account_id: string | null;
    /**
     * Plaid’s unique identifier for a transfer. This field is `null` for Plaid Ledger Sweep events.
     * @type {string}
     * @memberof TransferEvent
     */
    transfer_id: string;
    /**
     * The ID of the origination account that this balance belongs to.
     * @type {string}
     * @memberof TransferEvent
     * @deprecated
     */
    origination_account_id: string | null;
    /**
     * 
     * @type {OmittableTransferType}
     * @memberof TransferEvent
     */
    transfer_type?: OmittableTransferType;
    /**
     * The amount of the transfer (decimal string with two digits of precision e.g. "10.00"). This field is omitted for Plaid Ledger Sweep events.
     * @type {string}
     * @memberof TransferEvent
     */
    transfer_amount?: string;
    /**
     * 
     * @type {TransferFailure}
     * @memberof TransferEvent
     */
    failure_reason: TransferFailure | null;
    /**
     * Plaid’s unique identifier for a sweep.
     * @type {string}
     * @memberof TransferEvent
     */
    sweep_id: string | null;
    /**
     * A signed amount of how much was `swept` or `return_swept` for this transfer (decimal string with two digits of precision e.g. "-5.50").
     * @type {string}
     * @memberof TransferEvent
     */
    sweep_amount: string | null;
    /**
     * Plaid’s unique identifier for a refund. A non-null value indicates the event is for the associated refund of the transfer.
     * @type {string}
     * @memberof TransferEvent
     */
    refund_id: string | null;
    /**
     * The Plaid client ID that is the originator of the transfer that this event applies to. Only present if the transfer was created on behalf of another client as a third-party sender (TPS).
     * @type {string}
     * @memberof TransferEvent
     */
    originator_client_id: string | null;
}

/**
 * Check if a given object implements the TransferEvent interface.
 */
export function instanceOfTransferEvent(value: object): boolean {
    if (!('event_id' in value)) return false;
    if (!('timestamp' in value)) return false;
    if (!('event_type' in value)) return false;
    if (!('funding_account_id' in value)) return false;
    if (!('transfer_id' in value)) return false;
    if (!('origination_account_id' in value)) return false;
    if (!('failure_reason' in value)) return false;
    if (!('sweep_id' in value)) return false;
    if (!('sweep_amount' in value)) return false;
    if (!('refund_id' in value)) return false;
    if (!('originator_client_id' in value)) return false;
    return true;
}

export function TransferEventFromJSON(json: any): TransferEvent {
    return TransferEventFromJSONTyped(json, false);
}

export function TransferEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferEvent {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'event_id': json['event_id'],
        'timestamp': (new Date(json['timestamp'])),
        'event_type': TransferEventTypeFromJSON(json['event_type']),
        'account_id': json['account_id'] == null ? undefined : json['account_id'],
        'funding_account_id': json['funding_account_id'],
        'transfer_id': json['transfer_id'],
        'origination_account_id': json['origination_account_id'],
        'transfer_type': json['transfer_type'] == null ? undefined : OmittableTransferTypeFromJSON(json['transfer_type']),
        'transfer_amount': json['transfer_amount'] == null ? undefined : json['transfer_amount'],
        'failure_reason': TransferFailureFromJSON(json['failure_reason']),
        'sweep_id': json['sweep_id'],
        'sweep_amount': json['sweep_amount'],
        'refund_id': json['refund_id'],
        'originator_client_id': json['originator_client_id'],
    };
}

export function TransferEventToJSON(value?: TransferEvent | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'event_id': value['event_id'],
        'timestamp': ((value['timestamp']).toISOString()),
        'event_type': TransferEventTypeToJSON(value['event_type']),
        'account_id': value['account_id'],
        'funding_account_id': value['funding_account_id'],
        'transfer_id': value['transfer_id'],
        'origination_account_id': value['origination_account_id'],
        'transfer_type': OmittableTransferTypeToJSON(value['transfer_type']),
        'transfer_amount': value['transfer_amount'],
        'failure_reason': TransferFailureToJSON(value['failure_reason']),
        'sweep_id': value['sweep_id'],
        'sweep_amount': value['sweep_amount'],
        'refund_id': value['refund_id'],
        'originator_client_id': value['originator_client_id'],
    };
}

