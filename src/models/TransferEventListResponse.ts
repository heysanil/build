/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransferEvent } from './TransferEvent';
import {
    TransferEventFromJSON,
    TransferEventFromJSONTyped,
    TransferEventToJSON,
} from './TransferEvent';

/**
 * Defines the response schema for `/transfer/event/list`
 * @export
 * @interface TransferEventListResponse
 */
export interface TransferEventListResponse {
    [key: string]: any | any;
    /**
     * 
     * @type {Array<TransferEvent>}
     * @memberof TransferEventListResponse
     */
    transfer_events: Array<TransferEvent>;
    /**
     * Whether there are more events to be pulled from the endpoint that have not already been returned
     * @type {boolean}
     * @memberof TransferEventListResponse
     */
    has_more: boolean;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof TransferEventListResponse
     */
    request_id: string;
}

/**
 * Check if a given object implements the TransferEventListResponse interface.
 */
export function instanceOfTransferEventListResponse(value: object): boolean {
    if (!('transfer_events' in value)) return false;
    if (!('has_more' in value)) return false;
    if (!('request_id' in value)) return false;
    return true;
}

export function TransferEventListResponseFromJSON(json: any): TransferEventListResponse {
    return TransferEventListResponseFromJSONTyped(json, false);
}

export function TransferEventListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferEventListResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'transfer_events': ((json['transfer_events'] as Array<any>).map(TransferEventFromJSON)),
        'has_more': json['has_more'],
        'request_id': json['request_id'],
    };
}

export function TransferEventListResponseToJSON(value?: TransferEventListResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'transfer_events': ((value['transfer_events'] as Array<any>).map(TransferEventToJSON)),
        'has_more': value['has_more'],
        'request_id': value['request_id'],
    };
}

