/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The reason for a failed transfer intent. Returned only if the transfer intent status is `failed`. Null otherwise.
 * @export
 * @interface TransferIntentGetFailureReason
 */
export interface TransferIntentGetFailureReason {
    [key: string]: any | any;
    /**
     * A broad categorization of the error.
     * @type {string}
     * @memberof TransferIntentGetFailureReason
     */
    error_type?: string;
    /**
     * A code representing the reason for a failed transfer intent (i.e., an API error or the authorization being declined).
     * @type {string}
     * @memberof TransferIntentGetFailureReason
     */
    error_code?: string;
    /**
     * A human-readable description of the code associated with a failed transfer intent.
     * @type {string}
     * @memberof TransferIntentGetFailureReason
     */
    error_message?: string;
}

/**
 * Check if a given object implements the TransferIntentGetFailureReason interface.
 */
export function instanceOfTransferIntentGetFailureReason(value: object): boolean {
    return true;
}

export function TransferIntentGetFailureReasonFromJSON(json: any): TransferIntentGetFailureReason {
    return TransferIntentGetFailureReasonFromJSONTyped(json, false);
}

export function TransferIntentGetFailureReasonFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferIntentGetFailureReason {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'error_type': json['error_type'] == null ? undefined : json['error_type'],
        'error_code': json['error_code'] == null ? undefined : json['error_code'],
        'error_message': json['error_message'] == null ? undefined : json['error_message'],
    };
}

export function TransferIntentGetFailureReasonToJSON(value?: TransferIntentGetFailureReason | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'error_type': value['error_type'],
        'error_code': value['error_code'],
        'error_message': value['error_message'],
    };
}

