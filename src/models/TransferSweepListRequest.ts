/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SweepStatus } from './SweepStatus';
import {
    SweepStatusFromJSON,
    SweepStatusFromJSONTyped,
    SweepStatusToJSON,
} from './SweepStatus';
import type { SweepTrigger } from './SweepTrigger';
import {
    SweepTriggerFromJSON,
    SweepTriggerFromJSONTyped,
    SweepTriggerToJSON,
} from './SweepTrigger';

/**
 * Defines the request schema for `/transfer/sweep/list`
 * @export
 * @interface TransferSweepListRequest
 */
export interface TransferSweepListRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * @type {string}
     * @memberof TransferSweepListRequest
     */
    client_id?: string;
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * @type {string}
     * @memberof TransferSweepListRequest
     */
    secret?: string;
    /**
     * The start datetime of sweeps to return (RFC 3339 format).
     * @type {Date}
     * @memberof TransferSweepListRequest
     */
    start_date?: Date;
    /**
     * The end datetime of sweeps to return (RFC 3339 format).
     * @type {Date}
     * @memberof TransferSweepListRequest
     */
    end_date?: Date;
    /**
     * The maximum number of sweeps to return.
     * @type {number}
     * @memberof TransferSweepListRequest
     */
    count?: number;
    /**
     * The number of sweeps to skip before returning results.
     * @type {number}
     * @memberof TransferSweepListRequest
     */
    offset?: number;
    /**
     * Filter sweeps to only those with the specified amount.
     * @type {string}
     * @memberof TransferSweepListRequest
     */
    amount?: string;
    /**
     * 
     * @type {SweepStatus}
     * @memberof TransferSweepListRequest
     */
    status?: SweepStatus;
    /**
     * Filter sweeps to only those with the specified originator client.
     * @type {string}
     * @memberof TransferSweepListRequest
     */
    originator_client_id?: string;
    /**
     * Filter sweeps to only those with the specified `funding_account_id`.
     * @type {string}
     * @memberof TransferSweepListRequest
     */
    funding_account_id?: string;
    /**
     * Filter sweeps to only those with the included `transfer_id`.
     * @type {string}
     * @memberof TransferSweepListRequest
     */
    transfer_id?: string;
    /**
     * 
     * @type {SweepTrigger}
     * @memberof TransferSweepListRequest
     */
    trigger?: SweepTrigger;
}

/**
 * Check if a given object implements the TransferSweepListRequest interface.
 */
export function instanceOfTransferSweepListRequest(value: object): boolean {
    return true;
}

export function TransferSweepListRequestFromJSON(json: any): TransferSweepListRequest {
    return TransferSweepListRequestFromJSONTyped(json, false);
}

export function TransferSweepListRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferSweepListRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'start_date': json['start_date'] == null ? undefined : (new Date(json['start_date'])),
        'end_date': json['end_date'] == null ? undefined : (new Date(json['end_date'])),
        'count': json['count'] == null ? undefined : json['count'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'amount': json['amount'] == null ? undefined : json['amount'],
        'status': json['status'] == null ? undefined : SweepStatusFromJSON(json['status']),
        'originator_client_id': json['originator_client_id'] == null ? undefined : json['originator_client_id'],
        'funding_account_id': json['funding_account_id'] == null ? undefined : json['funding_account_id'],
        'transfer_id': json['transfer_id'] == null ? undefined : json['transfer_id'],
        'trigger': json['trigger'] == null ? undefined : SweepTriggerFromJSON(json['trigger']),
    };
}

export function TransferSweepListRequestToJSON(value?: TransferSweepListRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'client_id': value['client_id'],
        'secret': value['secret'],
        'start_date': value['start_date'] == null ? undefined : ((value['start_date'] as any).toISOString()),
        'end_date': value['end_date'] == null ? undefined : ((value['end_date'] as any).toISOString()),
        'count': value['count'],
        'offset': value['offset'],
        'amount': value['amount'],
        'status': SweepStatusToJSON(value['status']),
        'originator_client_id': value['originator_client_id'],
        'funding_account_id': value['funding_account_id'],
        'transfer_id': value['transfer_id'],
        'trigger': SweepTriggerToJSON(value['trigger']),
    };
}

