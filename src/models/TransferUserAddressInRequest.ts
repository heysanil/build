/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The address associated with the account holder.
 * @export
 * @interface TransferUserAddressInRequest
 */
export interface TransferUserAddressInRequest {
    /**
     * The street number and name (i.e., "100 Market St.").
     * @type {string}
     * @memberof TransferUserAddressInRequest
     */
    street?: string;
    /**
     * Ex. "San Francisco"
     * @type {string}
     * @memberof TransferUserAddressInRequest
     */
    city?: string;
    /**
     * The state or province (e.g., "CA").
     * @type {string}
     * @memberof TransferUserAddressInRequest
     */
    region?: string;
    /**
     * The postal code (e.g., "94103").
     * @type {string}
     * @memberof TransferUserAddressInRequest
     */
    postal_code?: string;
    /**
     * A two-letter country code (e.g., "US").
     * @type {string}
     * @memberof TransferUserAddressInRequest
     */
    country?: string;
}

/**
 * Check if a given object implements the TransferUserAddressInRequest interface.
 */
export function instanceOfTransferUserAddressInRequest(value: object): boolean {
    return true;
}

export function TransferUserAddressInRequestFromJSON(json: any): TransferUserAddressInRequest {
    return TransferUserAddressInRequestFromJSONTyped(json, false);
}

export function TransferUserAddressInRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferUserAddressInRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'street': json['street'] == null ? undefined : json['street'],
        'city': json['city'] == null ? undefined : json['city'],
        'region': json['region'] == null ? undefined : json['region'],
        'postal_code': json['postal_code'] == null ? undefined : json['postal_code'],
        'country': json['country'] == null ? undefined : json['country'],
    };
}

export function TransferUserAddressInRequestToJSON(value?: TransferUserAddressInRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'street': value['street'],
        'city': value['city'],
        'region': value['region'],
        'postal_code': value['postal_code'],
        'country': value['country'],
    };
}

