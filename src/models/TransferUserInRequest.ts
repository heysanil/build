/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransferUserAddressInRequest } from './TransferUserAddressInRequest';
import {
    TransferUserAddressInRequestFromJSON,
    TransferUserAddressInRequestFromJSONTyped,
    TransferUserAddressInRequestToJSON,
} from './TransferUserAddressInRequest';

/**
 * The legal name and other information for the account holder.
 * @export
 * @interface TransferUserInRequest
 */
export interface TransferUserInRequest {
    /**
     * The user's legal name.
     * @type {string}
     * @memberof TransferUserInRequest
     */
    legal_name: string;
    /**
     * The user's phone number.
     * @type {string}
     * @memberof TransferUserInRequest
     */
    phone_number?: string;
    /**
     * The user's email address.
     * @type {string}
     * @memberof TransferUserInRequest
     */
    email_address?: string;
    /**
     * 
     * @type {TransferUserAddressInRequest}
     * @memberof TransferUserInRequest
     */
    address?: TransferUserAddressInRequest;
}

/**
 * Check if a given object implements the TransferUserInRequest interface.
 */
export function instanceOfTransferUserInRequest(value: object): boolean {
    if (!('legal_name' in value)) return false;
    return true;
}

export function TransferUserInRequestFromJSON(json: any): TransferUserInRequest {
    return TransferUserInRequestFromJSONTyped(json, false);
}

export function TransferUserInRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferUserInRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'legal_name': json['legal_name'],
        'phone_number': json['phone_number'] == null ? undefined : json['phone_number'],
        'email_address': json['email_address'] == null ? undefined : json['email_address'],
        'address': json['address'] == null ? undefined : TransferUserAddressInRequestFromJSON(json['address']),
    };
}

export function TransferUserInRequestToJSON(value?: TransferUserInRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'legal_name': value['legal_name'],
        'phone_number': value['phone_number'],
        'email_address': value['email_address'],
        'address': TransferUserAddressInRequestToJSON(value['address']),
    };
}

