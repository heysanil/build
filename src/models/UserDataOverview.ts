/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * metadata for the set of insights provided in `TransactionsUserInsightsGetResponse`
 * @export
 * @interface UserDataOverview
 */
export interface UserDataOverview {
    [key: string]: any | any;
    /**
     * The total number of transactions.
     * @type {number}
     * @memberof UserDataOverview
     */
    transaction_count: number;
    /**
     * The date of the oldest transaction processed to generate insights.
     * @type {Date}
     * @memberof UserDataOverview
     */
    oldest_transaction_date?: Date;
    /**
     * The date of the newest transaction processed to generate insights.
     * @type {Date}
     * @memberof UserDataOverview
     */
    newest_transaction_date?: Date;
    /**
     * The range of days of transactions available.
     * @type {number}
     * @memberof UserDataOverview
     */
    days_available: number;
    /**
     * Sum of outflow amounts.
     * @type {number}
     * @memberof UserDataOverview
     */
    total_outflows: number;
    /**
     * Sum of inflow amounts.
     * @type {number}
     * @memberof UserDataOverview
     */
    total_inflows: number;
}

/**
 * Check if a given object implements the UserDataOverview interface.
 */
export function instanceOfUserDataOverview(value: object): boolean {
    if (!('transaction_count' in value)) return false;
    if (!('days_available' in value)) return false;
    if (!('total_outflows' in value)) return false;
    if (!('total_inflows' in value)) return false;
    return true;
}

export function UserDataOverviewFromJSON(json: any): UserDataOverview {
    return UserDataOverviewFromJSONTyped(json, false);
}

export function UserDataOverviewFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDataOverview {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'transaction_count': json['transaction_count'],
        'oldest_transaction_date': json['oldest_transaction_date'] == null ? undefined : (new Date(json['oldest_transaction_date'])),
        'newest_transaction_date': json['newest_transaction_date'] == null ? undefined : (new Date(json['newest_transaction_date'])),
        'days_available': json['days_available'],
        'total_outflows': json['total_outflows'],
        'total_inflows': json['total_inflows'],
    };
}

export function UserDataOverviewToJSON(value?: UserDataOverview | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'transaction_count': value['transaction_count'],
        'oldest_transaction_date': value['oldest_transaction_date'] == null ? undefined : ((value['oldest_transaction_date']).toISOString().substring(0,10)),
        'newest_transaction_date': value['newest_transaction_date'] == null ? undefined : ((value['newest_transaction_date']).toISOString().substring(0,10)),
        'days_available': value['days_available'],
        'total_outflows': value['total_outflows'],
        'total_inflows': value['total_inflows'],
    };
}

