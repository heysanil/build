/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WalletBalance } from './WalletBalance';
import {
    WalletBalanceFromJSON,
    WalletBalanceFromJSONTyped,
    WalletBalanceToJSON,
} from './WalletBalance';
import type { WalletNumbers } from './WalletNumbers';
import {
    WalletNumbersFromJSON,
    WalletNumbersFromJSONTyped,
    WalletNumbersToJSON,
} from './WalletNumbers';
import type { WalletStatus } from './WalletStatus';
import {
    WalletStatusFromJSON,
    WalletStatusFromJSONTyped,
    WalletStatusToJSON,
} from './WalletStatus';

/**
 * An object representing the e-wallet
 * @export
 * @interface Wallet
 */
export interface Wallet {
    [key: string]: any | any;
    /**
     * A unique ID identifying the e-wallet
     * @type {string}
     * @memberof Wallet
     */
    wallet_id: string;
    /**
     * 
     * @type {WalletBalance}
     * @memberof Wallet
     */
    balance: WalletBalance;
    /**
     * 
     * @type {WalletNumbers}
     * @memberof Wallet
     */
    numbers: WalletNumbers;
    /**
     * The ID of the recipient that corresponds to the e-wallet account numbers
     * @type {string}
     * @memberof Wallet
     */
    recipient_id?: string;
    /**
     * 
     * @type {WalletStatus}
     * @memberof Wallet
     */
    status: WalletStatus;
}

/**
 * Check if a given object implements the Wallet interface.
 */
export function instanceOfWallet(value: object): boolean {
    if (!('wallet_id' in value)) return false;
    if (!('balance' in value)) return false;
    if (!('numbers' in value)) return false;
    if (!('status' in value)) return false;
    return true;
}

export function WalletFromJSON(json: any): Wallet {
    return WalletFromJSONTyped(json, false);
}

export function WalletFromJSONTyped(json: any, ignoreDiscriminator: boolean): Wallet {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'wallet_id': json['wallet_id'],
        'balance': WalletBalanceFromJSON(json['balance']),
        'numbers': WalletNumbersFromJSON(json['numbers']),
        'recipient_id': json['recipient_id'] == null ? undefined : json['recipient_id'],
        'status': WalletStatusFromJSON(json['status']),
    };
}

export function WalletToJSON(value?: Wallet | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'wallet_id': value['wallet_id'],
        'balance': WalletBalanceToJSON(value['balance']),
        'numbers': WalletNumbersToJSON(value['numbers']),
        'recipient_id': value['recipient_id'],
        'status': WalletStatusToJSON(value['status']),
    };
}

