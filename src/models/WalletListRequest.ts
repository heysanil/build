/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WalletISOCurrencyCode } from './WalletISOCurrencyCode';
import {
    WalletISOCurrencyCodeFromJSON,
    WalletISOCurrencyCodeFromJSONTyped,
    WalletISOCurrencyCodeToJSON,
} from './WalletISOCurrencyCode';

/**
 * WalletListRequest defines the request schema for `/wallet/list`
 * @export
 * @interface WalletListRequest
 */
export interface WalletListRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * @type {string}
     * @memberof WalletListRequest
     */
    client_id?: string;
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * @type {string}
     * @memberof WalletListRequest
     */
    secret?: string;
    /**
     * 
     * @type {WalletISOCurrencyCode}
     * @memberof WalletListRequest
     */
    iso_currency_code?: WalletISOCurrencyCode;
    /**
     * A base64 value representing the latest e-wallet that has already been requested. Set this to `next_cursor` received from the previous `/wallet/list` request. If provided, the response will only contain e-wallets created before that e-wallet. If omitted, the response will contain e-wallets starting from the most recent, and in descending order.
     * @type {string}
     * @memberof WalletListRequest
     */
    cursor?: string;
    /**
     * The number of e-wallets to fetch
     * @type {number}
     * @memberof WalletListRequest
     */
    count?: number;
}

/**
 * Check if a given object implements the WalletListRequest interface.
 */
export function instanceOfWalletListRequest(value: object): boolean {
    return true;
}

export function WalletListRequestFromJSON(json: any): WalletListRequest {
    return WalletListRequestFromJSONTyped(json, false);
}

export function WalletListRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): WalletListRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'client_id': json['client_id'] == null ? undefined : json['client_id'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'iso_currency_code': json['iso_currency_code'] == null ? undefined : WalletISOCurrencyCodeFromJSON(json['iso_currency_code']),
        'cursor': json['cursor'] == null ? undefined : json['cursor'],
        'count': json['count'] == null ? undefined : json['count'],
    };
}

export function WalletListRequestToJSON(value?: WalletListRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'client_id': value['client_id'],
        'secret': value['secret'],
        'iso_currency_code': WalletISOCurrencyCodeToJSON(value['iso_currency_code']),
        'cursor': value['cursor'],
        'count': value['count'],
    };
}

