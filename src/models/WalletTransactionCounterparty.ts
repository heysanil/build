/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PaymentInitiationAddress } from './PaymentInitiationAddress';
import {
    PaymentInitiationAddressFromJSON,
    PaymentInitiationAddressFromJSONTyped,
    PaymentInitiationAddressToJSON,
} from './PaymentInitiationAddress';
import type { WalletTransactionCounterpartyNumbers } from './WalletTransactionCounterpartyNumbers';
import {
    WalletTransactionCounterpartyNumbersFromJSON,
    WalletTransactionCounterpartyNumbersFromJSONTyped,
    WalletTransactionCounterpartyNumbersToJSON,
} from './WalletTransactionCounterpartyNumbers';

/**
 * An object representing the e-wallet transaction's counterparty
 * @export
 * @interface WalletTransactionCounterparty
 */
export interface WalletTransactionCounterparty {
    [key: string]: any | any;
    /**
     * The name of the counterparty
     * @type {string}
     * @memberof WalletTransactionCounterparty
     */
    name: string;
    /**
     * 
     * @type {WalletTransactionCounterpartyNumbers}
     * @memberof WalletTransactionCounterparty
     */
    numbers: WalletTransactionCounterpartyNumbers;
    /**
     * 
     * @type {PaymentInitiationAddress}
     * @memberof WalletTransactionCounterparty
     */
    address?: PaymentInitiationAddress;
    /**
     * The counterparty's birthdate, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format.
     * @type {Date}
     * @memberof WalletTransactionCounterparty
     */
    date_of_birth?: Date;
}

/**
 * Check if a given object implements the WalletTransactionCounterparty interface.
 */
export function instanceOfWalletTransactionCounterparty(value: object): boolean {
    if (!('name' in value)) return false;
    if (!('numbers' in value)) return false;
    return true;
}

export function WalletTransactionCounterpartyFromJSON(json: any): WalletTransactionCounterparty {
    return WalletTransactionCounterpartyFromJSONTyped(json, false);
}

export function WalletTransactionCounterpartyFromJSONTyped(json: any, ignoreDiscriminator: boolean): WalletTransactionCounterparty {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'name': json['name'],
        'numbers': WalletTransactionCounterpartyNumbersFromJSON(json['numbers']),
        'address': json['address'] == null ? undefined : PaymentInitiationAddressFromJSON(json['address']),
        'date_of_birth': json['date_of_birth'] == null ? undefined : (new Date(json['date_of_birth'])),
    };
}

export function WalletTransactionCounterpartyToJSON(value?: WalletTransactionCounterparty | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'name': value['name'],
        'numbers': WalletTransactionCounterpartyNumbersToJSON(value['numbers']),
        'address': PaymentInitiationAddressToJSON(value['address']),
        'date_of_birth': value['date_of_birth'] == null ? undefined : ((value['date_of_birth'] as any).toISOString().substring(0,10)),
    };
}

