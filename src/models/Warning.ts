/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Cause } from './Cause';
import {
    CauseFromJSON,
    CauseFromJSONTyped,
    CauseToJSON,
} from './Cause';

/**
 * It is possible for an Asset Report to be returned with missing account owner information. In such cases, the Asset Report will contain warning data in the response, indicating why obtaining the owner information failed.
 * @export
 * @interface Warning
 */
export interface Warning {
    [key: string]: any | any;
    /**
     * The warning type, which will always be `ASSET_REPORT_WARNING`
     * @type {string}
     * @memberof Warning
     */
    warning_type: string;
    /**
     * The warning code identifies a specific kind of warning. `OWNERS_UNAVAILABLE` indicates that account-owner information is not available.`INVESTMENTS_UNAVAILABLE` indicates that Investments specific information is not available. `TRANSACTIONS_UNAVAILABLE` indicates that transactions information associated with Credit and Depository accounts are unavailable.
     * @type {string}
     * @memberof Warning
     */
    warning_code: WarningWarningCodeEnum;
    /**
     * 
     * @type {Cause}
     * @memberof Warning
     */
    cause: Cause;
}


/**
 * @export
 */
export const WarningWarningCodeEnum = {
    OwnersUnavailable: 'OWNERS_UNAVAILABLE',
    InvestmentsUnavailable: 'INVESTMENTS_UNAVAILABLE',
    TransactionsUnavailable: 'TRANSACTIONS_UNAVAILABLE'
} as const;
export type WarningWarningCodeEnum = typeof WarningWarningCodeEnum[keyof typeof WarningWarningCodeEnum];


/**
 * Check if a given object implements the Warning interface.
 */
export function instanceOfWarning(value: object): boolean {
    if (!('warning_type' in value)) return false;
    if (!('warning_code' in value)) return false;
    if (!('cause' in value)) return false;
    return true;
}

export function WarningFromJSON(json: any): Warning {
    return WarningFromJSONTyped(json, false);
}

export function WarningFromJSONTyped(json: any, ignoreDiscriminator: boolean): Warning {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'warning_type': json['warning_type'],
        'warning_code': json['warning_code'],
        'cause': CauseFromJSON(json['cause']),
    };
}

export function WarningToJSON(value?: Warning | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'warning_type': value['warning_type'],
        'warning_code': value['warning_code'],
        'cause': CauseToJSON(value['cause']),
    };
}

