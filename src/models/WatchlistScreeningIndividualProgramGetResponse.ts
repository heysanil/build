/* tslint:disable */
/* eslint-disable */
/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.503.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IndividualWatchlistCode } from './IndividualWatchlistCode';
import {
    IndividualWatchlistCodeFromJSON,
    IndividualWatchlistCodeFromJSONTyped,
    IndividualWatchlistCodeToJSON,
} from './IndividualWatchlistCode';
import type { ProgramNameSensitivity } from './ProgramNameSensitivity';
import {
    ProgramNameSensitivityFromJSON,
    ProgramNameSensitivityFromJSONTyped,
    ProgramNameSensitivityToJSON,
} from './ProgramNameSensitivity';
import type { WatchlistScreeningAuditTrail } from './WatchlistScreeningAuditTrail';
import {
    WatchlistScreeningAuditTrailFromJSON,
    WatchlistScreeningAuditTrailFromJSONTyped,
    WatchlistScreeningAuditTrailToJSON,
} from './WatchlistScreeningAuditTrail';

/**
 * A program that configures the active lists, search parameters, and other behavior for initial and ongoing screening of individuals.
 * @export
 * @interface WatchlistScreeningIndividualProgramGetResponse
 */
export interface WatchlistScreeningIndividualProgramGetResponse {
    [key: string]: any | any;
    /**
     * ID of the associated program.
     * @type {string}
     * @memberof WatchlistScreeningIndividualProgramGetResponse
     */
    id: string;
    /**
     * An ISO8601 formatted timestamp.
     * @type {Date}
     * @memberof WatchlistScreeningIndividualProgramGetResponse
     */
    created_at: Date;
    /**
     * Indicator specifying whether the program is enabled and will perform daily rescans.
     * @type {boolean}
     * @memberof WatchlistScreeningIndividualProgramGetResponse
     */
    is_rescanning_enabled: boolean;
    /**
     * Watchlists enabled for the associated program
     * @type {Set<IndividualWatchlistCode>}
     * @memberof WatchlistScreeningIndividualProgramGetResponse
     */
    lists_enabled: Set<IndividualWatchlistCode>;
    /**
     * A name for the program to define its purpose. For example, "High Risk Individuals", "US Cardholders", or "Applicants".
     * @type {string}
     * @memberof WatchlistScreeningIndividualProgramGetResponse
     */
    name: string;
    /**
     * 
     * @type {ProgramNameSensitivity}
     * @memberof WatchlistScreeningIndividualProgramGetResponse
     */
    name_sensitivity: ProgramNameSensitivity;
    /**
     * 
     * @type {WatchlistScreeningAuditTrail}
     * @memberof WatchlistScreeningIndividualProgramGetResponse
     */
    audit_trail: WatchlistScreeningAuditTrail;
    /**
     * Archived programs are read-only and cannot screen new customers nor participate in ongoing monitoring.
     * @type {boolean}
     * @memberof WatchlistScreeningIndividualProgramGetResponse
     */
    is_archived: boolean;
    /**
     * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @type {string}
     * @memberof WatchlistScreeningIndividualProgramGetResponse
     */
    request_id: string;
}

/**
 * Check if a given object implements the WatchlistScreeningIndividualProgramGetResponse interface.
 */
export function instanceOfWatchlistScreeningIndividualProgramGetResponse(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('created_at' in value)) return false;
    if (!('is_rescanning_enabled' in value)) return false;
    if (!('lists_enabled' in value)) return false;
    if (!('name' in value)) return false;
    if (!('name_sensitivity' in value)) return false;
    if (!('audit_trail' in value)) return false;
    if (!('is_archived' in value)) return false;
    if (!('request_id' in value)) return false;
    return true;
}

export function WatchlistScreeningIndividualProgramGetResponseFromJSON(json: any): WatchlistScreeningIndividualProgramGetResponse {
    return WatchlistScreeningIndividualProgramGetResponseFromJSONTyped(json, false);
}

export function WatchlistScreeningIndividualProgramGetResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WatchlistScreeningIndividualProgramGetResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'id': json['id'],
        'created_at': (new Date(json['created_at'])),
        'is_rescanning_enabled': json['is_rescanning_enabled'],
        'lists_enabled': (new Set((json['lists_enabled'] as Array<any>).map(IndividualWatchlistCodeFromJSON))),
        'name': json['name'],
        'name_sensitivity': ProgramNameSensitivityFromJSON(json['name_sensitivity']),
        'audit_trail': WatchlistScreeningAuditTrailFromJSON(json['audit_trail']),
        'is_archived': json['is_archived'],
        'request_id': json['request_id'],
    };
}

export function WatchlistScreeningIndividualProgramGetResponseToJSON(value?: WatchlistScreeningIndividualProgramGetResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
            ...value,
        'id': value['id'],
        'created_at': ((value['created_at']).toISOString()),
        'is_rescanning_enabled': value['is_rescanning_enabled'],
        'lists_enabled': (Array.from(value['lists_enabled'] as Set<any>).map(IndividualWatchlistCodeToJSON)),
        'name': value['name'],
        'name_sensitivity': ProgramNameSensitivityToJSON(value['name_sensitivity']),
        'audit_trail': WatchlistScreeningAuditTrailToJSON(value['audit_trail']),
        'is_archived': value['is_archived'],
        'request_id': value['request_id'],
    };
}

